const t="chart-timeline-grid-row-cell",e="chart-timeline-items-row-item";let i,s,n,a,o,c,l,r;function h(t,e){const s=i(t,e);c.isSelecting?(r.style.display="block",r.style.left=c.selectionArea.x+"px",r.style.top=c.selectionArea.y+"px",r.style.width=c.selectionArea.width+"px",r.style.height=c.selectionArea.height+"px"):r.style.display="none";const n=o`
    <div class=${l} style=${r}></div>
  `;return o`
    ${s}${n}
  `}function u(t,e){return i=t,s=e,n=s.api,a=s.state,o=s.html,l=n.getClass("chart-selection"),r=new s.StyleMap({display:"none"}),s.onDestroy(a.subscribe("config.plugin.Selection",t=>{c=t,s.update()})),h}const d="config.plugin.Selection";function g(){return{enabled:!0,isSelecting:!1,initialPosition:{x:0,y:0},currentPosition:{x:0,y:0},selectionArea:{x:0,y:0,width:0,height:0},selecting:{[e]:[],[t]:[]},selected:{[e]:[],[t]:[]}}}class p{constructor(t,e){this.unsub=[],this.vido=t,this.state=t.state,this.api=t.api,this.options=e,this.data=g(),this.unsub.push(this.state.subscribe("config.plugin.TimelinePointer",t=>{this.poitnerData=t,this.onPointerData()})),this.updateData(),this.unsub.push(this.state.subscribe(d,t=>{this.data=t}))}destroy(){this.unsub.forEach(t=>t())}updateData(){this.state.update(d,Object.assign({},this.data))}getItemsUnderSelectionArea(){}getSelectionArea(){const t={x:0,y:0,width:0,height:0},e=Object.assign({},this.poitnerData.initialPosition),i=Object.assign({},this.poitnerData.currentPosition),s=i.x-e.x,n=i.y-e.y;return s>=0?(t.x=e.x,t.width=s):(t.x=i.x,t.width=Math.abs(s)),n>=0?(t.y=e.y,t.height=n):(t.y=i.y,t.height=Math.abs(n)),t}onPointerData(){if(this.poitnerData.isMoving){this.data.isSelecting=!0,this.data.selectionArea=this.getSelectionArea(),console.log(this.data.selectionArea);this.getItemsUnderSelectionArea()}else this.poitnerData.isMoving||(this.data.isSelecting=!1);this.updateData()}}function y(t={}){return t=function(t){const e={enabled:!0,grid:!1,items:!0,rows:!1,horizontal:!0,vertical:!0,selecting(){},deselecting(){},selected(){},deselected(){},canSelect:(t,e,i)=>e,canDeselect:(t,e,i)=>[]};return t=Object.assign(Object.assign({},e),t)}(t),function(e){const i=new p(e,t);return e.state.update(d,g()),e.state.update("config.wrappers.ChartTimelineItems",t=>u(t,e)),function(){i.destroy()}}}export{y as Plugin};
