{"version":3,"file":"index.umd.js","sources":["../node_modules/@neuronet.io/vido/vido.esm.js","../src/default-config.ts","../node_modules/dayjs/dayjs.min.js","../node_modules/dayjs/plugin/utc.js","../src/api/Time.js","../node_modules/deep-state-observer/stringMatcher.ts","../node_modules/deep-state-observer/wildcard-object-scan.ts","../node_modules/deep-state-observer/ObjectPath.ts","../node_modules/deep-state-observer/index.ts","../src/api/Api.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/components/List/ListToggle.ts","../src/components/List/ListExpander.ts","../src/components/List/ListColumnRow.ts","../src/components/List/ListColumnHeaderResizer.ts","../src/components/List/ListColumnHeader.ts","../src/components/List/ListColumn.ts","../src/components/List/List.ts","../src/components/Chart/Calendar/CalendarDate.ts","../src/components/Chart/Calendar/Calendar.ts","../src/components/Chart/Gantt/GanttGridBlock.ts","../src/components/Chart/Gantt/GanttGridRow.ts","../src/components/Chart/Gantt/GanttGrid.ts","../src/components/Chart/Gantt/GanttItemsRowItem.ts","../src/components/Chart/Gantt/GanttItemsRow.ts","../src/components/Chart/Gantt/GanttItems.ts","../src/components/Chart/Gantt/Gantt.ts","../src/components/Chart/Chart.ts","../src/components/Main.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nconst directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nconst isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nconst isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nconst reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nconst removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nconst nothing = {};\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nconst boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nclass Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nconst isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nconst createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nclass TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nclass TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nclass SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nconst isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nclass AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nclass AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nclass NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nclass BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nclass PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nclass EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Creates Parts when a template is instantiated.\n */\nclass DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nconst defaultTemplateProcessor = new DefaultTemplateProcessor();\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nfunction templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nconst templateCaches = new Map();\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nconst render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nconst html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nconst svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst templateCaches$1 = new WeakMap();\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nconst cache = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('cache can only be used in text bindings');\n    }\n    let templateCache = templateCaches$1.get(part);\n    if (templateCache === undefined) {\n        templateCache = new WeakMap();\n        templateCaches$1.set(part, templateCache);\n    }\n    const previousValue = part.value;\n    // First, can we update the current TemplateInstance, or do we need to move\n    // the current nodes into the cache?\n    if (previousValue instanceof TemplateInstance) {\n        if (value instanceof TemplateResult &&\n            previousValue.template === part.options.templateFactory(value)) {\n            // Same Template, just trigger an update of the TemplateInstance\n            part.setValue(value);\n            return;\n        }\n        else {\n            // Not the same Template, move the nodes from the DOM into the cache.\n            let cachedTemplate = templateCache.get(previousValue.template);\n            if (cachedTemplate === undefined) {\n                cachedTemplate = {\n                    instance: previousValue,\n                    nodes: document.createDocumentFragment(),\n                };\n                templateCache.set(previousValue.template, cachedTemplate);\n            }\n            reparentNodes(cachedTemplate.nodes, part.startNode.nextSibling, part.endNode);\n        }\n    }\n    // Next, can we reuse nodes from the cache?\n    if (value instanceof TemplateResult) {\n        const template = part.options.templateFactory(value);\n        const cachedTemplate = templateCache.get(template);\n        if (cachedTemplate !== undefined) {\n            // Move nodes out of cache\n            part.setValue(cachedTemplate.nodes);\n            part.commit();\n            // Set the Part value to the TemplateInstance so it'll update it.\n            part.value = cachedTemplate.instance;\n        }\n    }\n    part.setValue(value);\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nconst classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    // handle static classes\n    if (!classMapCache.has(part)) {\n        element.className = committer.strings.join(' ');\n    }\n    const { classList } = element;\n    // remove old classes that no longer apply\n    const oldInfo = classMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n        }\n    }\n    // add new classes\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (!oldInfo || value !== oldInfo[name]) {\n            // We explicitly want a loose truthy check here because\n            // it seems more convenient that '' and 0 are skipped.\n            const method = value ? 'add' : 'remove';\n            classList[method](name);\n        }\n    }\n    classMapCache.set(part, classInfo);\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nconst guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nconst ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nconst repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap();\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nconst styleMap = directive((styleInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'style' || part.committer.parts.length > 1) {\n        throw new Error('The `styleMap` directive must be used in the style attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { style } = committer.element;\n    // Handle static styles the first time we see a Part\n    if (!styleMapCache.has(part)) {\n        style.cssText = committer.strings.join(' ');\n    }\n    // Remove old properties that no longer exist in styleInfo\n    const oldInfo = styleMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in styleInfo)) {\n            if (name.indexOf('-') === -1) {\n                // tslint:disable-next-line:no-any\n                style[name] = null;\n            }\n            else {\n                style.removeProperty(name);\n            }\n        }\n    }\n    // Add or update properties\n    for (const name in styleInfo) {\n        if (name.indexOf('-') === -1) {\n            // tslint:disable-next-line:no-any\n            style[name] = styleInfo[name];\n        }\n        else {\n            style.setProperty(name, styleInfo[name]);\n        }\n    }\n    styleMapCache.set(part, styleInfo);\n});\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues$1 = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nconst unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues$1.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues$1.set(part, { value, fragment });\n});\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nconst until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processsing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n\nfunction Vido(state, api) {\n    let componentId = 0;\n    const components = {};\n    let actions = [];\n    let app, element;\n    let shouldUpdateCount = 0;\n    const resolved = Promise.resolve();\n    function getActions(instance) {\n        return directive(function actionsDirective(createFunctions, props) {\n            return function partial(part) {\n                const element = part.committer.element;\n                for (const create of createFunctions) {\n                    if (typeof create === 'function') {\n                        const exists = actions.find(action => action.instance === instance && action.componentAction.create === create && action.element === element);\n                        if (!exists) {\n                            if (typeof element.__vido__ !== 'undefined')\n                                delete element.__vido__;\n                            const componentAction = { create, update() { }, destroy() { } };\n                            actions.push({ instance, componentAction, element, props });\n                        }\n                        else {\n                            exists.props = props;\n                        }\n                    }\n                }\n            };\n        });\n    }\n    const vido = {\n        state,\n        api,\n        html,\n        svg,\n        directive,\n        //asyncAppend,\n        //asyncReplace,\n        cache,\n        classMap,\n        guard,\n        ifDefined,\n        repeat,\n        styleMap,\n        unsafeHTML,\n        until,\n        actions(componentActions, props) { },\n        createComponent(component, props) {\n            const instance = component.name + ':' + componentId++;\n            const componentInstance = getComponentInstance(instance);\n            function update() {\n                vido.updateTemplate();\n            }\n            const destroyable = [];\n            function onDestroy(fn) {\n                destroyable.push(fn);\n            }\n            const vidoInstance = Object.assign(Object.assign({}, vido), { update, onDestroy, instance, actions: getActions(instance) });\n            let firstMethods, methods;\n            if (props) {\n                firstMethods = component(props, vidoInstance);\n            }\n            else {\n                firstMethods = component(vidoInstance);\n            }\n            if (typeof firstMethods === 'function') {\n                const destroy = () => {\n                    destroyable.forEach(d => d());\n                };\n                methods = { update: firstMethods, destroy };\n            }\n            else {\n                const originalDestroy = methods.destroy;\n                const destroy = () => {\n                    destroyable.forEach(d => d());\n                    originalDestroy();\n                };\n                methods = Object.assign(Object.assign({}, firstMethods), { destroy });\n            }\n            components[instance] = methods;\n            return componentInstance;\n        },\n        destroyComponent(instance) {\n            if (typeof components[instance].destroy === 'function') {\n                components[instance].destroy();\n            }\n            actions = actions.filter(action => {\n                if (action.instance === instance && typeof action.componentAction.destroy === 'function') {\n                    action.componentAction.destroy(action.element, action.props);\n                }\n                return action.instance !== instance;\n            });\n            delete components[instance];\n        },\n        updateTemplate() {\n            shouldUpdateCount++;\n            const currentShouldUpdateCount = shouldUpdateCount;\n            const self = this;\n            resolved.then(function flush() {\n                if (currentShouldUpdateCount === shouldUpdateCount) {\n                    self.render();\n                    shouldUpdateCount = 0;\n                }\n            });\n        },\n        createApp(instance, el) {\n            element = el;\n            const App = this.createComponent(instance);\n            app = App.instance;\n            this.render();\n            return App;\n        },\n        executeActions() {\n            for (const action of actions) {\n                if (typeof action.element.__vido__ === 'undefined') {\n                    if (typeof action.componentAction.create === 'function') {\n                        const result = action.componentAction.create(action.element, action.props);\n                        if (typeof result !== 'undefined') {\n                            if (typeof result.update === 'function') {\n                                action.componentAction.update = result.update;\n                            }\n                            if (typeof result.destroy === 'function') {\n                                action.componentAction.destroy = result.destroy;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (typeof action.componentAction.update === 'function') {\n                        action.componentAction.update(action.element, action.props);\n                    }\n                }\n            }\n            for (const action of actions) {\n                action.element.__vido__ = { instance: action.instance, props: action.props };\n            }\n        },\n        render() {\n            render(components[app].update(), element);\n            vido.executeActions();\n        }\n    };\n    function getComponentInstance(instance) {\n        return {\n            instance,\n            destroy() {\n                return vido.destroyComponent(instance);\n            },\n            update() {\n                return vido.updateTemplate();\n            },\n            html(props = {}) {\n                return components[instance].update(props);\n            }\n        };\n    }\n    return vido;\n}\n\nexport default Vido;\n//# sourceMappingURL=vido.esm.js.map\n","export const actionNames = [\n  '',\n  'list',\n  'list-column',\n  'list-column-header',\n  'list-expander',\n  'list-expander-toggle',\n  'list-column-header-resizer',\n  'list-column-row',\n  'chart',\n  'chart-calendar',\n  'chart-gantt',\n  'chart-gantt-grid',\n  'chart-gantt-grid-row',\n  'chart-gantt-items',\n  'chart-gantt-items-row',\n  'chart-gantt-items-row-item',\n  'chart-calendar-date',\n  'chart-gantt-grid-column',\n  'chart-gantt-grid-block'\n];\n\nfunction generateEmptyActions() {\n  const actions = {};\n  actionNames.forEach(name => (actions[name] = []));\n  return actions;\n}\n\n// default configuration\nconst defaultConfig = {\n  height: 740,\n  headerHeight: 86,\n  list: {\n    rows: {},\n    rowHeight: 40,\n    columns: {\n      percent: 100,\n      resizer: {\n        width: 10,\n        inRealTime: true,\n        dots: 6\n      },\n      data: {}\n    },\n    expander: {\n      padding: 20,\n      size: 20,\n      icons: {\n        open:\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"/><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/></svg>',\n        closed:\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"/><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/></svg>'\n      }\n    }\n  },\n  scroll: {\n    top: 0,\n    left: 0,\n    xMultiplier: 1.5,\n    yMultiplier: 1,\n    percent: {\n      top: 0,\n      left: 0\n    }\n  },\n  chart: {\n    time: {\n      from: 0,\n      to: 0,\n      zoom: 21,\n      period: 'day',\n      dates: []\n    },\n    calendar: {\n      vertical: {\n        smallFormat: 'YYYY-MM-DD'\n      }\n    },\n    grid: {},\n    items: {}\n  },\n  classNames: {},\n  actions: generateEmptyActions(),\n  locale: {\n    name: 'en',\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekStart: 1,\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    formats: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    ordinal: n => {\n      const s = ['th', 'st', 'nd', 'rd'];\n      const v = n % 100;\n      return `[${n}${s[(v - 20) % 10] || s[v] || s[0]}]`;\n    }\n  }\n};\n\nexport default defaultConfig;\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",a=\"quarter\",o=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,h:r,m:e,s:n,ms:t,Q:a}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return l;if(\"string\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\"$y\",o)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",e)},d.second=function(t){return this.$g(t,\"$s\",n)},d.millisecond=function(n){return this.$g(n,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,a){var h=this,f=!!D.u(a)||a,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case o:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,a){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[o]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(a-this.$W):a;if(f===u||f===o){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,a){var h,f=this;t=Number(t);var c=D.p(a),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,n,e){var r=t<12?\"AM\":\"PM\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:D.s(a+1,2,\"0\"),MMM:c(i.monthsShort,a,h,3),MMMM:h[a]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,o,2),ddd:c(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[o]=y/12,c[u]=y,c[a]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs_plugin_utc=e()}(this,function(){\"use strict\";return function(t,e,i){var n=e.prototype;i.utc=function(t,i){return new e({date:t,utc:!0,format:i})},n.utc=function(){return i(this.toDate(),{locale:this.$L,utc:!0})},n.local=function(){return i(this.toDate(),{locale:this.$L,utc:!1})};var s=n.parse;n.parse=function(t){t.utc&&(this.$u=!0),s.call(this,t)};var u=n.init;n.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else u.call(this)};var o=n.utcOffset;n.utcOffset=function(){return this.$u?0:o.call(this)};var c=n.format;n.format=function(t){var e=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return c.call(this,e)},n.isUTC=function(){return!!this.$u}}});\n","import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n//dayjs.extend(utc, { parseToLocal: true });\n\nexport default function timeApi(state, getApi) {\n  const locale = state.get('config.locale');\n  dayjs.locale(locale, null, true);\n  return {\n    date(time) {\n      return time ? dayjs(time).locale(locale.name) : dayjs().locale(locale.name);\n    },\n    recalculateFromTo(time) {\n      time = { ...time };\n      if (time.from !== 0) {\n        time.from = this.date(time.from)\n          .startOf('day')\n          .valueOf();\n      }\n      if (time.to !== 0) {\n        time.to = this.date(time.to)\n          .endOf('day')\n          .valueOf();\n      }\n\n      let from = Number.MAX_SAFE_INTEGER,\n        to = 0;\n      const items = state.get('config.chart.items');\n      if (Object.keys(items).length === 0) {\n        return time;\n      }\n      if (time.from === 0 || time.to === 0) {\n        for (let itemId in items) {\n          const item = items[itemId];\n          if (from > item.time.start) {\n            from = item.time.start;\n          }\n          if (to < item.time.end) {\n            to = item.time.end;\n          }\n        }\n        if (time.from === 0) {\n          time.from = this.date(from)\n            .startOf('day')\n            .valueOf();\n        }\n        if (time.to === 0) {\n          time.to = this.date(to)\n            .endOf('day')\n            .valueOf();\n        }\n      }\n      return time;\n    }\n  };\n}\n","// forked from https://github.com/joonhocho/superwild\n\nexport default class Matcher {\n  wchar: string;\n  pattern: string;\n  minLength: number;\n  maxLength: number;\n  segments: string[];\n  starCount: number;\n  segStartIndex: number;\n\n  constructor(pattern: string, wchar: string = '*') {\n    this.wchar = wchar;\n    this.pattern = pattern;\n    this.segments = [];\n    this.starCount = 0;\n    this.minLength = 0;\n    this.maxLength = 0;\n\n    this.segStartIndex = 0;\n    for (let i = 0, len = pattern.length; i < len; i += 1) {\n      const char = pattern[i];\n      if (char === wchar) {\n        this.starCount += 1;\n        if (i > this.segStartIndex) {\n          this.segments.push(pattern.substring(this.segStartIndex, i));\n        }\n        this.segments.push(char);\n        this.segStartIndex = i + 1;\n      }\n    }\n\n    if (this.segStartIndex < pattern.length) {\n      this.segments.push(pattern.substring(this.segStartIndex));\n    }\n\n    if (this.starCount) {\n      this.minLength = pattern.length - this.starCount;\n      this.maxLength = Infinity;\n    } else {\n      this.maxLength = this.minLength = pattern.length;\n    }\n  }\n\n  match(match: string): boolean {\n    if (this.pattern === this.wchar) {\n      return true;\n    }\n    if (this.segments.length === 0) {\n      return this.pattern === match;\n    }\n    const { length } = match;\n    if (length < this.minLength || length > this.maxLength) {\n      return false;\n    }\n\n    let segLeftIndex = 0;\n    let segRightIndex = this.segments.length - 1;\n    let rightPos = match.length - 1;\n    let rightIsStar = false;\n\n    while (true) {\n      const segment = this.segments[segRightIndex];\n      segRightIndex -= 1;\n      if (segment === this.wchar) {\n        rightIsStar = true;\n      } else {\n        const lastIndex = rightPos + 1 - segment.length;\n        const index = match.lastIndexOf(segment, lastIndex);\n        if (index === -1 || index > lastIndex) {\n          return false;\n        }\n        if (rightIsStar) {\n          rightPos = index - 1;\n          rightIsStar = false;\n        } else {\n          if (index !== lastIndex) {\n            return false;\n          }\n          rightPos -= segment.length;\n        }\n      }\n      if (segLeftIndex > segRightIndex) {\n        break;\n      }\n    }\n    return true;\n  }\n}\n","import Matcher from './stringMatcher';\nexport interface wildcardApi {\n  get: (wildcard: string) => {};\n  match: (first: string, second: string) => boolean;\n  simpleMatch: (first: string, second: string) => boolean;\n}\n\nexport interface wildcardResult {\n  [key: string]: any;\n}\n\nexport default class WildcardObject {\n  private obj: any;\n  private delimeter: string;\n  private wildcard: string;\n\n  constructor(obj, delimeter, wildcard) {\n    this.obj = obj;\n    this.delimeter = delimeter;\n    this.wildcard = wildcard;\n  }\n\n  simpleMatch(first: string, second: string): boolean {\n    if (first === second) return true;\n    if (first === this.wildcard) return true;\n    const index = first.indexOf(this.wildcard);\n    if (index > -1) {\n      const end = first.substr(index + 1);\n      if (index === 0 || second.substring(0, index) === first.substring(0, index)) {\n        const len = end.length;\n        if (len > 0) {\n          return second.substr(-len) === end;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  match(first: string, second: string) {\n    return (\n      first === second ||\n      first === this.wildcard ||\n      second === this.wildcard ||\n      this.simpleMatch(first, second) ||\n      new Matcher(first).match(second)\n    );\n  }\n\n  private handleArray(wildcard: string, currentArr: any, partIndex: number, path: string, result = {}) {\n    let nextPartIndex = wildcard.indexOf(this.delimeter, partIndex);\n    let end = false;\n    if (nextPartIndex === -1) {\n      end = true;\n      nextPartIndex = wildcard.length;\n    }\n    const currentWildcardPath = wildcard.substring(partIndex, nextPartIndex);\n    let index = 0;\n    for (const item of currentArr) {\n      const key = index.toString();\n      const currentPath = path === '' ? key : path + this.delimeter + index;\n      if (\n        currentWildcardPath === this.wildcard ||\n        currentWildcardPath === key ||\n        this.simpleMatch(currentWildcardPath, key)\n      ) {\n        end ? (result[currentPath] = item) : this.goFurther(wildcard, item, nextPartIndex + 1, currentPath, result);\n      }\n      index++;\n    }\n    return result;\n  }\n\n  private handleObject(wildcard: string, currentObj: any, partIndex: number, path: string, result = {}) {\n    let nextPartIndex = wildcard.indexOf(this.delimeter, partIndex);\n    let end = false;\n    if (nextPartIndex === -1) {\n      end = true;\n      nextPartIndex = wildcard.length;\n    }\n    const currentWildcardPath = wildcard.substring(partIndex, nextPartIndex);\n    for (let key in currentObj) {\n      key = key.toString();\n      const currentPath = path === '' ? key : path + this.delimeter + key;\n      if (\n        currentWildcardPath === this.wildcard ||\n        currentWildcardPath === key ||\n        this.simpleMatch(currentWildcardPath, key)\n      ) {\n        end\n          ? (result[currentPath] = currentObj[key])\n          : this.goFurther(wildcard, currentObj[key], nextPartIndex + 1, currentPath, result);\n      }\n    }\n    return result;\n  }\n\n  private goFurther(wildcard: string, currentObj, partIndex: number, currentPath: string, result = {}) {\n    if (Array.isArray(currentObj)) {\n      return this.handleArray(wildcard, currentObj, partIndex, currentPath, result);\n    }\n    return this.handleObject(wildcard, currentObj, partIndex, currentPath, result);\n  }\n\n  public get(wildcard: string): any {\n    return this.goFurther(wildcard, this.obj, 0, '');\n  }\n}\n","export default class ObjectPath {\n  static get(path: string[], obj, copiedPath: string[] = null) {\n    if (copiedPath === null) {\n      copiedPath = path.slice();\n    }\n    if (copiedPath.length === 0 || typeof obj === 'undefined') {\n      return obj;\n    }\n    const currentPath = copiedPath.shift();\n    if (!obj.hasOwnProperty(currentPath)) {\n      return undefined;\n    }\n    if (copiedPath.length === 0) {\n      return obj[currentPath];\n    }\n    return ObjectPath.get(path, obj[currentPath], copiedPath);\n  }\n\n  static set(path: string[], newValue, obj, copiedPath: string[] = null) {\n    if (copiedPath === null) {\n      copiedPath = path.slice();\n    }\n    if (copiedPath.length === 0) {\n      for (const key in obj) {\n        delete obj[key];\n      }\n      for (const key in newValue) {\n        obj[key] = newValue[key];\n      }\n      return;\n    }\n    const currentPath = copiedPath.shift();\n    if (copiedPath.length === 0) {\n      obj[currentPath] = newValue;\n      return;\n    }\n    if (!obj.hasOwnProperty(currentPath)) {\n      obj[currentPath] = {};\n    }\n    ObjectPath.set(path, newValue, obj[currentPath], copiedPath);\n  }\n}\n","import WildcardObject, { wildcardApi } from './wildcard-object-scan';\nimport Path from './ObjectPath';\n\nexport interface PathInfo {\n  listener: string;\n  update: string | undefined;\n  resolved: string | undefined;\n}\n\nexport interface ListenerFunctionEventInfo {\n  type: string;\n  listener: Listener;\n  listenersCollection: ListenersCollection;\n  path: PathInfo;\n  params: Params;\n  options: ListenerOptions | UpdateOptions | undefined;\n}\n\nexport type ListenerFunction = (value: any, eventInfo: ListenerFunctionEventInfo) => {};\nexport type Match = (path: string) => boolean;\n\nexport interface Options {\n  delimeter: string;\n  notRecursive: string;\n  param: string;\n  wildcard: string;\n  log: (message: string, info: any) => void;\n}\n\nexport interface ListenerOptions {\n  bulk: boolean;\n  debug: boolean;\n  source: string;\n  data: any;\n}\n\nexport interface Listener {\n  fn: ListenerFunction;\n  options: ListenerOptions;\n}\n\nexport interface GroupedListener {\n  listener: Listener;\n  listenersCollection: ListenersCollection;\n  eventInfo: ListenerFunctionEventInfo;\n  value: any;\n}\n\nexport interface GroupedListenerContainer {\n  single: GroupedListener[];\n  bulk: GroupedListener[];\n}\n\nexport interface GroupedListeners {\n  [path: string]: GroupedListenerContainer;\n}\n\nexport type Updater = (value: any) => {};\n\nexport interface ListenersObject {\n  [key: string]: Listener;\n  [key: number]: Listener;\n}\n\nexport interface ListenersCollection {\n  path: string;\n  listeners: ListenersObject;\n  isWildcard: boolean;\n  isRecursive: boolean;\n  hasParams: boolean;\n  paramsInfo: ParamsInfo | undefined;\n  match: Match;\n  count: number;\n}\n\nexport interface Listeners {\n  [path: string]: ListenersCollection;\n}\n\nexport interface ParamInfo {\n  name: string;\n  replaced: string;\n  original: string;\n}\n\nexport interface Parameters {\n  [part: number]: ParamInfo;\n}\n\nexport interface Params {\n  [key: string]: any;\n}\n\nexport interface ParamsInfo {\n  params: Parameters;\n  replaced: string;\n  original: string;\n}\n\nexport interface UpdateOptions {\n  only: string[];\n  source: string;\n  debug: boolean;\n  data: any;\n}\n\nfunction log(message: string, info: any) {\n  console.debug(message, info);\n}\n\nconst defaultOptions: Options = { delimeter: `.`, notRecursive: `;`, param: `:`, wildcard: `*`, log };\nconst defaultListenerOptions: ListenerOptions = { bulk: false, debug: false, source: '', data: undefined };\nconst defaultUpdateOptions: UpdateOptions = { only: [], source: '', debug: false, data: undefined };\n\nexport default class DeepState {\n  private listeners: Listeners;\n  private data: any;\n  public options: any;\n  private id: number;\n  public pathGet: (path: string[], obj) => {};\n  public pathSet: (path: string[], value, obj) => void;\n  private scan: wildcardApi;\n\n  constructor(data = {}, options: Options = defaultOptions) {\n    this.listeners = {};\n    this.data = data;\n    this.options = { ...defaultOptions, ...options };\n    this.id = 0;\n    this.pathGet = Path.get;\n    this.pathSet = Path.set;\n    this.scan = new WildcardObject(this.data, this.options.delimeter, this.options.wildcard);\n  }\n\n  public getListeners(): Listeners {\n    return this.listeners;\n  }\n\n  public destroy() {\n    this.data = undefined;\n    this.listeners = {};\n  }\n\n  public match(first: string, second: string): boolean {\n    if (first === second) return true;\n    if (first === this.options.wildcard || second === this.options.wildcard) return true;\n    return this.scan.match(first, second);\n  }\n\n  private cutPath(longer: string, shorter: string): string {\n    return this.split(this.cleanNotRecursivePath(longer))\n      .slice(0, this.split(this.cleanNotRecursivePath(shorter)).length)\n      .join(this.options.delimeter);\n  }\n\n  private trimPath(path: string): string {\n    return this.cleanNotRecursivePath(path).replace(new RegExp(`^\\\\${this.options.delimeter}{1}`), ``);\n  }\n\n  public split(path: string) {\n    return path === '' ? [] : path.split(this.options.delimeter);\n  }\n\n  private isWildcard(path: string): boolean {\n    return path.includes(this.options.wildcard);\n  }\n\n  private isNotRecursive(path: string): boolean {\n    return path.endsWith(this.options.notRecursive);\n  }\n\n  private cleanNotRecursivePath(path: string): string {\n    return this.isNotRecursive(path) ? path.slice(0, -this.options.notRecursive.length) : path;\n  }\n\n  private hasParams(path: string) {\n    return path.includes(this.options.param);\n  }\n\n  private getParamsInfo(path: string): ParamsInfo {\n    let paramsInfo: ParamsInfo = { replaced: '', original: path, params: {} };\n    let partIndex = 0;\n    let fullReplaced = [];\n    for (const part of this.split(path)) {\n      paramsInfo.params[partIndex] = {\n        original: part,\n        replaced: '',\n        name: ''\n      };\n      const reg = new RegExp(`\\\\${this.options.param}([^\\\\${this.options.delimeter}\\\\${this.options.param}]+)`, 'g');\n      let param = reg.exec(part);\n      if (param) {\n        paramsInfo.params[partIndex].name = param[1];\n      } else {\n        delete paramsInfo.params[partIndex];\n        fullReplaced.push(part);\n        partIndex++;\n        continue;\n      }\n      reg.lastIndex = 0;\n      paramsInfo.params[partIndex].replaced = part.replace(reg, this.options.wildcard);\n      fullReplaced.push(paramsInfo.params[partIndex].replaced);\n      partIndex++;\n    }\n    paramsInfo.replaced = fullReplaced.join(this.options.delimeter);\n    return paramsInfo;\n  }\n\n  private getParams(paramsInfo: ParamsInfo | undefined, path: string): Params {\n    if (!paramsInfo) {\n      return undefined;\n    }\n    const split = this.split(path);\n    const result = {};\n    for (const partIndex in paramsInfo.params) {\n      const param = paramsInfo.params[partIndex];\n      result[param.name] = split[partIndex];\n    }\n    return result;\n  }\n\n  public subscribeAll(userPaths: string[], fn: ListenerFunction, options: ListenerOptions = defaultListenerOptions) {\n    let unsubscribers = [];\n    for (const userPath of userPaths) {\n      unsubscribers.push(this.subscribe(userPath, fn, options));\n    }\n    return () => {\n      for (const unsubscribe of unsubscribers) {\n        unsubscribe();\n      }\n      unsubscribers = [];\n    };\n  }\n\n  private getCleanListenersCollection(values = {}): ListenersCollection {\n    return {\n      ...{\n        listeners: {},\n        isRecursive: false,\n        isWildcard: false,\n        hasParams: false,\n        match: undefined,\n        paramsInfo: undefined,\n        path: undefined,\n        count: 0\n      },\n      ...values\n    };\n  }\n\n  private getCleanListener(fn: ListenerFunction, options: ListenerOptions = defaultListenerOptions): Listener {\n    return {\n      fn,\n      options: { ...defaultListenerOptions, ...options }\n    };\n  }\n\n  private getListenerCollectionMatch(listenerPath: string, isRecursive: boolean, isWildcard: boolean) {\n    listenerPath = this.cleanNotRecursivePath(listenerPath);\n    return (path) => {\n      if (isRecursive) path = this.cutPath(path, listenerPath);\n      if (isWildcard && this.match(listenerPath, path)) return true;\n      return listenerPath === path;\n    };\n  }\n\n  private getListenersCollection(listenerPath: string, listener: Listener): ListenersCollection {\n    if (typeof this.listeners[listenerPath] !== 'undefined') {\n      let listenersCollection = this.listeners[listenerPath];\n      this.id++;\n      listenersCollection.listeners[this.id] = listener;\n      return listenersCollection;\n    }\n    let collCfg = {\n      isRecursive: true,\n      isWildcard: false,\n      hasParams: false,\n      paramsInfo: undefined,\n      originalPath: listenerPath,\n      path: listenerPath\n    };\n    if (this.hasParams(collCfg.path)) {\n      collCfg.paramsInfo = this.getParamsInfo(collCfg.path);\n      collCfg.path = collCfg.paramsInfo.replaced;\n      collCfg.hasParams = true;\n    }\n    collCfg.isWildcard = this.isWildcard(collCfg.path);\n    if (this.isNotRecursive(collCfg.path)) {\n      collCfg.isRecursive = false;\n    }\n    let listenersCollection = (this.listeners[collCfg.path] = this.getCleanListenersCollection({\n      ...collCfg,\n      match: this.getListenerCollectionMatch(collCfg.path, collCfg.isRecursive, collCfg.isWildcard)\n    }));\n    this.id++;\n    listenersCollection.listeners[this.id] = listener;\n    return listenersCollection;\n  }\n\n  public subscribe(\n    listenerPath: string,\n    fn: ListenerFunction,\n    options: ListenerOptions = defaultListenerOptions,\n    type: string = 'subscribe'\n  ) {\n    let listener = this.getCleanListener(fn, options);\n    const listenersCollection = this.getListenersCollection(listenerPath, listener);\n    listenersCollection.count++;\n    listenerPath = listenersCollection.path;\n    if (!listenersCollection.isWildcard) {\n      fn(this.pathGet(this.split(this.cleanNotRecursivePath(listenerPath)), this.data), {\n        type,\n        listener,\n        listenersCollection,\n        path: {\n          listener: listenerPath,\n          update: undefined,\n          resolved: this.cleanNotRecursivePath(listenerPath)\n        },\n        params: this.getParams(listenersCollection.paramsInfo, listenerPath),\n        options\n      });\n    } else {\n      const paths = this.scan.get(this.cleanNotRecursivePath(listenerPath));\n      if (options.bulk) {\n        const bulkValue = [];\n        for (const path in paths) {\n          bulkValue.push({\n            path,\n            params: this.getParams(listenersCollection.paramsInfo, path),\n            value: paths[path]\n          });\n        }\n        fn(bulkValue, {\n          type,\n          listener,\n          listenersCollection,\n          path: {\n            listener: listenerPath,\n            update: undefined,\n            resolved: undefined\n          },\n          options,\n          params: undefined\n        });\n      } else {\n        for (const path in paths) {\n          fn(paths[path], {\n            type,\n            listener,\n            listenersCollection,\n            path: {\n              listener: listenerPath,\n              update: undefined,\n              resolved: this.cleanNotRecursivePath(path)\n            },\n            params: this.getParams(listenersCollection.paramsInfo, path),\n            options\n          });\n        }\n      }\n    }\n    this.debugSubscribe(listener, listenersCollection, listenerPath);\n    return this.unsubscribe(listenerPath, this.id);\n  }\n\n  private unsubscribe(path: string, id: number) {\n    const listeners = this.listeners;\n    const listenersCollection = listeners[path];\n    return function unsub() {\n      delete listenersCollection.listeners[id];\n      listenersCollection.count--;\n      if (listenersCollection.count === 0) {\n        delete listeners[path];\n      }\n    };\n  }\n\n  private same(newValue, oldValue): boolean {\n    return (\n      (['number', 'string', 'undefined', 'boolean'].includes(typeof newValue) || newValue === null) &&\n      oldValue === newValue\n    );\n  }\n\n  private notifyListeners(\n    listeners: GroupedListeners,\n    exclude: GroupedListener[] = [],\n    returnNotified: boolean = true\n  ): GroupedListener[] {\n    const alreadyNotified = [];\n    for (const path in listeners) {\n      let { single, bulk } = listeners[path];\n      for (const singleListener of single) {\n        if (exclude.includes(singleListener)) continue;\n        const time = this.debugTime(singleListener);\n        singleListener.listener.fn(singleListener.value(), singleListener.eventInfo);\n        if (returnNotified) alreadyNotified.push(singleListener);\n        this.debugListener(time, singleListener);\n      }\n      for (const bulkListener of bulk) {\n        if (exclude.includes(bulkListener)) continue;\n        const time = this.debugTime(bulkListener);\n        const bulkValue = bulkListener.value.map((bulk) => ({ ...bulk, value: bulk.value() }));\n        bulkListener.listener.fn(bulkValue, bulkListener.eventInfo);\n        if (returnNotified) alreadyNotified.push(bulkListener);\n        this.debugListener(time, bulkListener);\n      }\n    }\n    return alreadyNotified;\n  }\n\n  private getSubscribedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListeners {\n    options = { ...defaultUpdateOptions, ...options };\n    const listeners = {};\n    for (let listenerPath in this.listeners) {\n      const listenersCollection = this.listeners[listenerPath];\n      listeners[listenerPath] = { single: [], bulk: [], bulkData: [] };\n      if (listenersCollection.match(updatePath)) {\n        const params = listenersCollection.paramsInfo\n          ? this.getParams(listenersCollection.paramsInfo, updatePath)\n          : undefined;\n        const value =\n          listenersCollection.isRecursive || listenersCollection.isWildcard\n            ? () => this.get(this.cutPath(updatePath, listenerPath))\n            : () => newValue;\n        const bulkValue = [{ value, path: updatePath, params }];\n        for (const listenerId in listenersCollection.listeners) {\n          const listener = listenersCollection.listeners[listenerId];\n          if (listener.options.bulk) {\n            listeners[listenerPath].bulk.push({\n              listener,\n              listenersCollection,\n              eventInfo: {\n                type,\n                listener,\n                path: {\n                  listener: listenerPath,\n                  update: originalPath ? originalPath : updatePath,\n                  resolved: undefined\n                },\n                params,\n                options\n              },\n              value: bulkValue\n            });\n          } else {\n            listeners[listenerPath].single.push({\n              listener,\n              listenersCollection,\n              eventInfo: {\n                type,\n                listener,\n                path: {\n                  listener: listenerPath,\n                  update: originalPath ? originalPath : updatePath,\n                  resolved: this.cleanNotRecursivePath(updatePath)\n                },\n                params,\n                options\n              },\n              value\n            });\n          }\n        }\n      }\n    }\n    return listeners;\n  }\n\n  private notifySubscribedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListener[] {\n    return this.notifyListeners(this.getSubscribedListeners(updatePath, newValue, options, type, originalPath));\n  }\n\n  private getNestedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListeners {\n    const listeners: GroupedListeners = {};\n    for (let listenerPath in this.listeners) {\n      listeners[listenerPath] = { single: [], bulk: [] };\n      const listenersCollection = this.listeners[listenerPath];\n      const currentCuttedPath = this.cutPath(listenerPath, updatePath);\n      if (this.match(currentCuttedPath, updatePath)) {\n        const restPath = this.trimPath(listenerPath.substr(currentCuttedPath.length));\n        const values = new WildcardObject(newValue, this.options.delimeter, this.options.wildcard).get(restPath);\n        const params = listenersCollection.paramsInfo\n          ? this.getParams(listenersCollection.paramsInfo, updatePath)\n          : undefined;\n        const bulk = [];\n        const bulkListeners = {};\n        for (const currentRestPath in values) {\n          const value = () => values[currentRestPath];\n          const fullPath = [updatePath, currentRestPath].join(this.options.delimeter);\n          for (const listenerId in listenersCollection.listeners) {\n            const listener = listenersCollection.listeners[listenerId];\n            const eventInfo = {\n              type,\n              listener,\n              listenersCollection,\n              path: {\n                listener: listenerPath,\n                update: originalPath ? originalPath : updatePath,\n                resolved: this.cleanNotRecursivePath(fullPath)\n              },\n              params,\n              options\n            };\n            if (listener.options.bulk) {\n              bulk.push({ value, path: fullPath, params });\n              bulkListeners[listenerId] = listener;\n            } else {\n              listeners[listenerPath].single.push({ listener, listenersCollection, eventInfo, value });\n            }\n          }\n        }\n        for (const listenerId in bulkListeners) {\n          const listener = bulkListeners[listenerId];\n          const eventInfo = {\n            type,\n            listener,\n            listenersCollection,\n            path: {\n              listener: listenerPath,\n              update: updatePath,\n              resolved: undefined\n            },\n            options,\n            params\n          };\n          listeners[listenerPath].bulk.push({ listener, listenersCollection, eventInfo, value: bulk });\n        }\n      }\n    }\n    return listeners;\n  }\n\n  private notifyNestedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    alreadyNotified: GroupedListener[],\n    originalPath: string = null\n  ) {\n    return this.notifyListeners(\n      this.getNestedListeners(updatePath, newValue, options, type, originalPath),\n      alreadyNotified,\n      false\n    );\n  }\n\n  private getNotifyOnlyListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListeners {\n    const listeners = {};\n    if (\n      typeof options.only !== 'object' ||\n      !Array.isArray(options.only) ||\n      typeof options.only[0] === 'undefined' ||\n      !this.canBeNested(newValue)\n    ) {\n      return listeners;\n    }\n    for (const notifyPath of options.only) {\n      const wildcardScan = new WildcardObject(newValue, this.options.delimeter, this.options.wildcard).get(notifyPath);\n      listeners[notifyPath] = { bulk: [], single: [] };\n      for (const wildcardPath in wildcardScan) {\n        const fullPath = updatePath + this.options.delimeter + wildcardPath;\n        for (const listenerPath in this.listeners) {\n          const listenersCollection = this.listeners[listenerPath];\n          const params = listenersCollection.paramsInfo\n            ? this.getParams(listenersCollection.paramsInfo, fullPath)\n            : undefined;\n          if (this.match(listenerPath, fullPath)) {\n            const value = () => wildcardScan[wildcardPath];\n            const bulkValue = [{ value, path: fullPath, params }];\n            for (const listenerId in listenersCollection.listeners) {\n              const listener = listenersCollection.listeners[listenerId];\n              const eventInfo = {\n                type,\n                listener,\n                listenersCollection,\n                path: {\n                  listener: listenerPath,\n                  update: originalPath ? originalPath : updatePath,\n                  resolved: this.cleanNotRecursivePath(fullPath)\n                },\n                params,\n                options\n              };\n              if (listener.options.bulk) {\n                if (!listeners[notifyPath].bulk.some((bulkListener) => bulkListener.listener === listener)) {\n                  listeners[notifyPath].bulk.push({ listener, listenersCollection, eventInfo, value: bulkValue });\n                }\n              } else {\n                listeners[notifyPath].single.push({\n                  listener,\n                  listenersCollection,\n                  eventInfo,\n                  value\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n    return listeners;\n  }\n\n  private notifyOnly(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): boolean {\n    return (\n      typeof this.notifyListeners(this.getNotifyOnlyListeners(updatePath, newValue, options, type, originalPath))[0] !==\n      'undefined'\n    );\n  }\n\n  private canBeNested(newValue): boolean {\n    return typeof newValue === 'object' && newValue !== null;\n  }\n\n  private getUpdateValues(oldValue, split, fn) {\n    if (typeof oldValue === 'object' && oldValue !== null) {\n      Array.isArray(oldValue) ? (oldValue = oldValue.slice()) : (oldValue = { ...oldValue });\n    }\n    let newValue = fn;\n    if (typeof fn === 'function') {\n      newValue = fn(this.pathGet(split, this.data));\n    }\n    return { newValue, oldValue };\n  }\n\n  private wildcardUpdate(updatePath: string, fn: Updater, options: UpdateOptions = defaultUpdateOptions) {\n    options = { ...defaultUpdateOptions, ...options };\n    const scanned = this.scan.get(updatePath);\n    const bulk = {};\n    for (const path in scanned) {\n      const split = this.split(path);\n      const { oldValue, newValue } = this.getUpdateValues(scanned[path], split, fn);\n      if (!this.same(newValue, oldValue)) bulk[path] = newValue;\n    }\n    const groupedListenersPack = [];\n    for (const path in bulk) {\n      const newValue = bulk[path];\n      if (options.only.length) {\n        groupedListenersPack.push(this.getNotifyOnlyListeners(path, newValue, options, 'update', updatePath));\n      } else {\n        groupedListenersPack.push(this.getSubscribedListeners(path, newValue, options, 'update', updatePath));\n        this.canBeNested(newValue) &&\n          groupedListenersPack.push(this.getNestedListeners(path, newValue, options, 'update', updatePath));\n      }\n      options.debug && this.options.log('Wildcard update', { path, newValue });\n      this.pathSet(this.split(path), newValue, this.data);\n    }\n    let alreadyNotified = [];\n    for (const groupedListeners of groupedListenersPack) {\n      alreadyNotified = [...alreadyNotified, ...this.notifyListeners(groupedListeners, alreadyNotified)];\n    }\n  }\n\n  public update(updatePath: string, fn: Updater, options: UpdateOptions = defaultUpdateOptions) {\n    if (this.isWildcard(updatePath)) {\n      return this.wildcardUpdate(updatePath, fn, options);\n    }\n    const split = this.split(updatePath);\n    const { oldValue, newValue } = this.getUpdateValues(this.pathGet(split, this.data), split, fn);\n    if (options.debug) {\n      this.options.log(`Updating ${updatePath} ${options.source ? `from ${options.source}` : ''}`, oldValue, newValue);\n    }\n    if (this.same(newValue, oldValue)) {\n      return newValue;\n    }\n    this.pathSet(split, newValue, this.data);\n    options = { ...defaultUpdateOptions, ...options };\n    if (this.notifyOnly(updatePath, newValue, options)) {\n      return newValue;\n    }\n    const alreadyNotified = this.notifySubscribedListeners(updatePath, newValue, options);\n    if (this.canBeNested(newValue)) {\n      this.notifyNestedListeners(updatePath, newValue, options, 'update', alreadyNotified);\n    }\n    return newValue;\n  }\n\n  public get(userPath: string | undefined = undefined) {\n    if (typeof userPath === 'undefined' || userPath === '') {\n      return this.data;\n    }\n    return this.pathGet(this.split(userPath), this.data);\n  }\n\n  private debugSubscribe(listener: Listener, listenersCollection: ListenersCollection, listenerPath: string) {\n    if (listener.options.debug) {\n      this.options.log('listener subscribed', listenerPath, listener, listenersCollection);\n    }\n  }\n\n  private debugListener(time: number, groupedListener: GroupedListener) {\n    if (groupedListener.eventInfo.options.debug || groupedListener.listener.options.debug) {\n      this.options.log('Listener fired', {\n        time: Date.now() - time,\n        info: groupedListener\n      });\n    }\n  }\n\n  private debugTime(groupedListener: GroupedListener): number {\n    return groupedListener.listener.options.debug || groupedListener.eventInfo.options.debug ? Date.now() : 0;\n  }\n}\n\nexport const State = DeepState;\n","// @ts-nocheck\nimport defaultConfig from '../default-config.ts';\nimport timeApi from './Time';\nimport State from 'deep-state-observer';\nimport dayjs from 'dayjs';\nconst lib = 'gantt-schedule-timeline-calendar';\n/**\n * Helper function to determine if specified variable is an object\n *\n * @param {any} item\n *\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\n/**\n * Helper function which will merge objects recursively - creating brand new one - like clone\n *\n * @param {object} target\n * @params {object} sources\n *\n * @returns {object}\n */\nexport function mergeDeep(target, ...sources) {\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof target[key] === 'undefined') {\n          target[key] = {};\n        }\n        target[key] = mergeDeep(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        target[key] = [];\n        for (let item of source[key]) {\n          if (isObject(item)) {\n            target[key].push(mergeDeep({}, item));\n            continue;\n          }\n          target[key].push(item);\n        }\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n  if (!sources.length) {\n    return target;\n  }\n  return mergeDeep(target, ...sources);\n}\n\nfunction mergeActions(userConfig) {\n  const defaultConfigActions = mergeDeep({}, defaultConfig.actions);\n  const userActions = mergeDeep({}, userConfig.actions);\n  const allActionNames = [Object.keys(defaultConfigActions), Object.keys(userActions)].flatMap((item, index, all) => {\n    if (index === 1) {\n      return item.filter(i => !all[0].includes(i));\n    }\n    return item;\n  });\n  const actions = {};\n  for (const actionName of allActionNames) {\n    actions[actionName] = [];\n    if (typeof defaultConfigActions[actionName] !== 'undefined' && Array.isArray(defaultConfigActions[actionName])) {\n      actions[actionName] = [...defaultConfigActions[actionName]];\n    }\n    if (typeof userActions[actionName] !== 'undefined' && Array.isArray(userActions[actionName])) {\n      actions[actionName] = [...actions[actionName], ...userActions[actionName]];\n    }\n  }\n  delete userConfig.actions;\n  delete defaultConfig.actions;\n  return actions;\n}\n\nexport function stateFromConfig(userConfig) {\n  const actions = mergeActions(userConfig);\n  const state = { config: mergeDeep({}, defaultConfig, userConfig) };\n  state.config.actions = actions;\n  return new State(state, { delimeter: '.' });\n}\n\nconst publicApi = {\n  name: lib,\n  stateFromConfig,\n  mergeDeep,\n  date(time) {\n    return time ? dayjs(time) : dayjs();\n  },\n  dayjs\n};\nexport default publicApi;\n\nexport function getInternalApi(state) {\n  let $state = state.get();\n  let unsubscribers = [];\n  const api = {\n    name: lib,\n    debug: false,\n\n    log(...args) {\n      if (this.debug) {\n        console.log.call(console, ...args);\n      }\n    },\n\n    mergeDeep,\n\n    getComponentData(componentName, attrs) {\n      const componentData = {};\n      componentData.componentName = componentName;\n      componentData.className = this.getClass(componentName, attrs);\n      componentData.action = this.getAction(componentName);\n      return componentData;\n    },\n\n    getClass(name, attrs) {\n      let simple = `${lib}__${name}`;\n      if (name === this.name) {\n        simple = this.name;\n      }\n      let className = `${simple} `;\n      let postfix = '-';\n      if (typeof attrs !== 'undefined') {\n        for (const key in attrs) {\n          if (attrs[key].constructor.name === 'Object' && typeof attrs[key].id !== 'undefined') {\n            postfix += `-${key}_${attrs[key].id}`;\n            return className + className.trim() + postfix;\n          }\n          if (typeof attrs[key] === 'string' || typeof attrs[key] === 'number') {\n            postfix += `-${key}_${attrs[key]}`;\n          }\n        }\n      }\n      if (postfix != '-') {\n        className += simple + postfix + ' ';\n      }\n      if (typeof $state.config.classNames[name] !== 'undefined') {\n        state.get(`config.classNames.${name}`).forEach(customClass => (className += customClass + ' '));\n      }\n      if (typeof $state.config.classNames[name + postfix] !== 'undefined') {\n        state.get(`config.classNames.${name + postfix}`).forEach(customClass => (className += customClass + ' '));\n      }\n      return className.trim();\n    },\n\n    allActions: [],\n\n    getActions(name) {\n      if (!this.allActions.includes(name)) this.allActions.push(name);\n      let actions = state.get('config.actions.' + name);\n      if (typeof actions === 'undefined') {\n        actions = [];\n      }\n      return actions;\n    },\n\n    isItemInViewport(item, left, right) {\n      return (item.time.start >= left && item.time.start < right) || (item.time.end >= left && item.time.end < right);\n    },\n\n    fillEmptyRowValues(rows) {\n      let top = 0;\n      for (const rowId in rows) {\n        const row = rows[rowId];\n        row._internal = {\n          parents: [],\n          children: [],\n          items: []\n        };\n        if (typeof row.height !== 'number') {\n          row.height = $state.config.list.rowHeight;\n        }\n        if (typeof row.expanded !== 'boolean') {\n          row.expanded = false;\n        }\n        row.top = top;\n        top += row.height;\n      }\n      return rows;\n    },\n\n    generateParents(rows, parentName = 'parentId') {\n      const parents = {};\n      for (const row of rows) {\n        const parentId = typeof row[parentName] !== 'undefined' ? row[parentName] : '';\n        if (typeof parents[parentId] === 'undefined') {\n          parents[parentId] = {};\n        }\n        parents[parentId][row.id] = row;\n      }\n      return parents;\n    },\n\n    fastTree(rowParents, node, parents = []) {\n      const children = rowParents[node.id];\n      node._internal.parents = parents;\n      if (typeof children === 'undefined') {\n        node._internal.children = [];\n        return node;\n      }\n      if (node.id !== '') {\n        parents = [...parents, node.id];\n      }\n      node._internal.children = Object.values(children);\n      for (const childrenId in children) {\n        const child = children[childrenId];\n        this.fastTree(rowParents, child, parents);\n      }\n      return node;\n    },\n\n    makeTreeMap(rows, items) {\n      const itemParents = this.generateParents(items, 'rowId');\n      for (const row of rows) {\n        row._internal.items = typeof itemParents[row.id] !== 'undefined' ? Object.values(itemParents[row.id]) : [];\n      }\n      const rowParents = this.generateParents(rows);\n      const tree = { id: '', _internal: { children: [], parents: [], items: [] } };\n      return this.fastTree(rowParents, tree);\n    },\n\n    getFlatTreeMapById(treeMap, flatTreeMapById = {}) {\n      for (const child of treeMap._internal.children) {\n        flatTreeMapById[child.id] = child;\n        this.getFlatTreeMapById(child, flatTreeMapById);\n      }\n      return flatTreeMapById;\n    },\n\n    flattenTreeMap(treeMap, rows = []) {\n      for (const child of treeMap._internal.children) {\n        rows.push(child.id);\n        this.flattenTreeMap(child, rows);\n      }\n      return rows;\n    },\n\n    getRowsFromMap(flatTreeMap, rows) {\n      return flatTreeMap.map(node => rows[node.id]);\n    },\n\n    getRowsFromIds(ids, rows) {\n      const result = [];\n      for (const id of ids) {\n        result.push(rows[id]);\n      }\n      return result;\n    },\n\n    getRowsWithParentsExpanded(flatTreeMap, flatTreeMapById, rows) {\n      const rowsWithParentsExpanded = [];\n      next: for (const rowId of flatTreeMap) {\n        for (const parentId of flatTreeMapById[rowId]._internal.parents) {\n          const parent = rows[parentId];\n          if (!parent.expanded) {\n            continue next;\n          }\n        }\n        rowsWithParentsExpanded.push(rowId);\n      }\n      return rowsWithParentsExpanded;\n    },\n\n    getRowsHeight(rows) {\n      let height = 0;\n      for (let row of rows) {\n        height += row.height;\n      }\n      return height;\n    },\n\n    /**\n     * Get visible rows - get rows that are inside current viewport (height)\n     *\n     * @param {array} rowsWithParentsExpanded rows that have parent expanded- they are visible\n     */\n    getVisibleRows(rowsWithParentsExpanded) {\n      const rows = [];\n      let currentOffset = 0;\n      let rowOffset = 0;\n      for (const row of rowsWithParentsExpanded) {\n        if (\n          currentOffset + row.height > $state.config.scroll.top &&\n          currentOffset < $state.config.scroll.top + $state._internal.height\n        ) {\n          row.top = rowOffset;\n          rowOffset += row.height;\n          rows.push(row);\n        }\n        if (currentOffset > $state.config.scroll.top + $state._internal.height) {\n          break;\n        }\n        currentOffset += row.height;\n      }\n      return rows;\n    },\n\n    /**\n     * Normalize mouse wheel event to get proper scroll metrics\n     *\n     * @param {Event} event mouse wheel event\n     */\n    normalizeMouseWheelEvent(event) {\n      let x = event.deltaX || 0;\n      let y = event.deltaY || 0;\n      let z = event.deltaZ || 0;\n      const mode = event.deltaMode;\n      const lineHeight = parseInt(getComputedStyle(event.target).getPropertyValue('line-height'));\n      let scale = 1;\n      switch (mode) {\n        case 1:\n          scale = lineHeight;\n          break;\n        case 2:\n          scale = window.height;\n          break;\n      }\n      x *= scale;\n      y *= scale;\n      z *= scale;\n      return { x, y, z };\n    },\n\n    limitScroll(which, scroll) {\n      if (which === 'top') {\n        const height = state.get('_internal.list.rowsHeight') - state.get('_internal.height');\n        if (scroll < 0) {\n          scroll = 0;\n        } else if (scroll > height) {\n          scroll = height;\n        }\n        return scroll;\n      } else {\n        const width =\n          state.get('_internal.chart.time.totalViewDurationPx') - state.get('_internal.chart.dimensions.width');\n        if (scroll < 0) {\n          scroll = 0;\n        } else if (scroll > width) {\n          scroll = width;\n        }\n        return scroll;\n      }\n    },\n\n    time: timeApi(state, () => api),\n\n    /**\n     * Get scrollbar height - compute it from element\n     *\n     * @returns {number}\n     */\n    getScrollBarHeight() {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.height = '100px';\n      outer.style.msOverflowStyle = 'scrollbar';\n      document.body.appendChild(outer);\n      var noScroll = outer.offsetHeight;\n      outer.style.overflow = 'scroll';\n      var inner = document.createElement('div');\n      inner.style.height = '100%';\n      outer.appendChild(inner);\n      var withScroll = inner.offsetHeight;\n      outer.parentNode.removeChild(outer);\n      return noScroll - withScroll + 1; // +1 for scroll area inside scroll container\n    },\n\n    /**\n     * Destroy things to release memory\n     */\n    destroy() {\n      $state = undefined;\n      for (const unsubscribe of unsubscribers) {\n        unsubscribe();\n      }\n      unsubscribers = [];\n      if (api.debug) {\n        delete window.state;\n      }\n    }\n  };\n\n  if (api.debug) {\n    window.state = state;\n    window.api = api;\n  }\n\n  return api;\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","export default function ListToggle(props, vido) {\n  const { api, state, onDestroy, actions, update, html, unsafeHTML } = vido;\n  const componentName = 'list-expander-toggle';\n\n  const componentActions = api.getActions(componentName);\n  let className, style;\n  let classNameOpen, classNameClosed;\n  let expanded = false;\n  let iconOpen, iconClosed;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      if (props.row) {\n        className = api.getClass(componentName, { row: props.row });\n        classNameOpen = api.getClass(componentName + '-open', { row: props.row });\n        classNameClosed = api.getClass(componentName + '-closed', { row: props.row });\n      } else {\n        className = api.getClass(componentName);\n        classNameOpen = api.getClass(componentName + '-open');\n        classNameClosed = api.getClass(componentName + '-closed');\n      }\n\n      update();\n    })\n  );\n  onDestroy(\n    state.subscribeAll(['config.list.expander.size', 'config.list.expander.icons'], () => {\n      const expander = state.get('config.list.expander');\n      style = `--size: ${expander.size}px`;\n      iconOpen = expander.icons.open;\n      iconClosed = expander.icons.closed;\n      update();\n    })\n  );\n\n  if (props.row) {\n    onDestroy(\n      state.subscribe(`config.list.rows.${props.row.id}.expanded`, isExpanded => {\n        expanded = isExpanded;\n        update();\n      })\n    );\n  } else {\n    onDestroy(\n      state.subscribe(\n        'config.list.rows.*.expanded',\n        bulk => {\n          for (const rowExpanded of bulk) {\n            if (rowExpanded.value) {\n              expanded = true;\n              break;\n            }\n          }\n          update();\n        },\n        { bulk: true }\n      )\n    );\n  }\n\n  function toggle() {\n    expanded = !expanded;\n    if (props.row) {\n      state.update(`config.list.rows.${props.row.id}.expanded`, expanded);\n    } else {\n      state.update(\n        `config.list.rows`,\n        rows => {\n          for (const rowId in rows) {\n            rows[rowId].expanded = expanded;\n          }\n          return rows;\n        },\n        { only: ['*.expanded'] }\n      );\n    }\n  }\n\n  return () => html`\n    <div\n      class=${className}\n      data-actions=${actions(componentActions, { row: props.row, api, state })}\n      style=${style}\n      @click=${toggle}\n    >\n      ${expanded\n        ? html`\n            <div class=${classNameOpen}>\n              ${unsafeHTML(iconOpen)}\n            </div>\n          `\n        : html`\n            <div class=${classNameClosed}>\n              ${unsafeHTML(iconClosed)}\n            </div>\n          `}\n    </div>\n  `;\n}\n","import ListToggle from './ListToggle';\nexport default function ListExpander(props, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n  const componentName = 'list-expander';\n  const componentActions = api.getActions(componentName);\n  let className,\n    padding,\n    width,\n    rows,\n    paddingClass,\n    children = [];\n\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      if (props.row) {\n        className = api.getClass(componentName, { row: props.row });\n        paddingClass = api.getClass(componentName + '-padding', { row: props.row });\n      } else {\n        className = api.getClass(componentName);\n        paddingClass = api.getClass(componentName + '-padding');\n      }\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(['config.list.expander.padding'], value => {\n      padding = value;\n      update();\n    })\n  );\n  if (props.row) {\n    onDestroy(\n      state.subscribe(`_internal.list.rows.${props.row.id}.parentId`, parentId => {\n        width = 'width:' + props.row._internal.parents.length * padding + 'px';\n        children = props.row._internal.children;\n        update();\n      })\n    );\n  } else {\n    width = 'width:0px';\n    children = [];\n  }\n  // @ts-ignore\n  const listToggle = createComponent(ListToggle, props.row ? { row: props.row } : {});\n  onDestroy(listToggle.destroy);\n\n  return () => html`\n    <div class=${className} data-action=${actions(componentActions, { row: props.row, api, state })}>\n      <div class=${paddingClass} style=${width}></div>\n      ${children.length || !props.row ? listToggle.html() : ''}\n    </div>\n  `;\n}\n","import ListExpander from './ListExpander';\nexport default function ListColumnRow({ rowId, columnId }, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n\n  let row,\n    rowPath = `config.list.rows.${rowId}`;\n  let style;\n  onDestroy(\n    state.subscribe(rowPath, value => {\n      row = value;\n      style = `--height: ${row.height}px`;\n      update();\n    })\n  );\n\n  let column,\n    columnPath = `config.list.columns.data.${columnId}`;\n  onDestroy(\n    state.subscribe(columnPath, val => {\n      column = val;\n      update();\n    })\n  );\n\n  const componentName = 'list-column-row';\n  const componentActions = api.getActions(componentName);\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { row, column });\n      update();\n    })\n  );\n\n  function getHtml() {\n    if (typeof column.data === 'function')\n      return html`\n        ${column.data(row)}\n      `;\n    return html`\n      ${row[column.data]}\n    `;\n  }\n\n  function getText() {\n    if (typeof column.data === 'function') return column.data(row);\n    return row[column.data];\n  }\n\n  const listExpander = createComponent(ListExpander, { row });\n  onDestroy(listExpander.destroy);\n\n  return props => html`\n    <div\n      class=${className}\n      style=${style}\n      data-actions=${actions(componentActions, {\n        column,\n        row,\n        api,\n        state\n      })}\n    >\n      ${typeof column.expander === 'boolean' && column.expander ? listExpander.html() : ''}\n      ${typeof column.html === 'string' ? getHtml() : getText()}\n    </div>\n  `;\n}\n","export default function ListColumnHeaderResizer({ columnId }, vido) {\n  const { api, state, onDestroy, update, html, actions } = vido;\n\n  const componentName = 'list-column-header-resizer';\n  const componentActions = api.getActions(componentName);\n\n  let column;\n  onDestroy(\n    state.subscribe(`config.list.columns.data.${columnId}`, val => {\n      column = val;\n      update();\n    })\n  );\n\n  let className, containerClass, dotsClass, dotClass, lineClass, calculatedWidth, width, dotsWidth;\n  let inRealTime = false;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { column });\n      containerClass = api.getClass(componentName + '-container', { column });\n      dotsClass = api.getClass(componentName + '-dots', { column });\n      dotClass = api.getClass(componentName + '-dots-dot', { column });\n      lineClass = api.getClass(componentName + '-line', { column });\n      update();\n    })\n  );\n  onDestroy(\n    state.subscribeAll(\n      [\n        `config.list.columns.data.${column.id}.width`,\n        'config.list.columns.percent',\n        'config.list.columns.resizer.width',\n        'config.list.columns.resizer.inRealTime'\n      ],\n      (value, path) => {\n        const list = state.get('config.list');\n        calculatedWidth = column.width * list.columns.percent * 0.01;\n        width = 'width:' + calculatedWidth + 'px';\n        dotsWidth = `width: ${list.columns.resizer.width}px`;\n        inRealTime = list.columns.resizer.inRealTime;\n        update();\n      }\n    )\n  );\n\n  let dots = [1, 2, 3, 4, 5, 6, 7, 8];\n  onDestroy(\n    state.subscribe('config.list.columns.resizer.dots', value => {\n      dots = [];\n      for (let i = 0; i < value; i++) {\n        dots.push(i);\n      }\n      update();\n    })\n  );\n\n  let isMoving = false;\n  let left = calculatedWidth;\n  let lineStyle = `--display: none; --left: ${left}px;`;\n  const columnWidthPath = `config.list.columns.data.${column.id}.width`;\n\n  function onMouseDown(event) {\n    isMoving = true;\n    state.update('_internal.list.columns.resizer.active', true);\n    if (isMoving) {\n      lineStyle = `--display:block; --left: ${left}px;`;\n    } else {\n      lineStyle = `--display:none; --left: 0px;`;\n    }\n  }\n\n  function onMouseMove(event) {\n    if (isMoving) {\n      left += event.movementX;\n      if (left < 0) {\n        left = 0;\n      }\n      if (inRealTime) {\n        state.update(columnWidthPath, left);\n      }\n    }\n  }\n\n  function onMouseUp(event) {\n    if (isMoving) {\n      state.update('_internal.list.columns.resizer.active', false);\n      state.update(columnWidthPath, left);\n      isMoving = false;\n    }\n  }\n\n  document.body.addEventListener('mousemove', onMouseMove);\n  onDestroy(() => document.body.removeEventListener('mousemove', onMouseMove));\n  document.body.addEventListener('mouseup', onMouseUp);\n  onDestroy(() => document.body.removeEventListener('mouseup', onMouseUp));\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { column, api, state })}>\n      <div class=${containerClass}>\n        ${column.header.html\n          ? html`\n              ${column.header.html}\n            `\n          : column.header.content}\n      </div>\n      <div class=${dotsClass} style=${'--' + dotsWidth} @mousedown=${onMouseDown}>\n        ${dots.map(\n          dot =>\n            html`\n              <div class=${dotClass} />\n            `\n        )}\n      </div>\n    </div>\n  `;\n}\n","import ListColumnHeaderResizerComponent from './ListColumnHeaderResizer';\nimport ListExpander from './ListExpander';\n\nexport default function ListColumnHeader({ columnId }, vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html } = vido;\n\n  const componentName = 'list-column-header';\n  const componentActions = api.getActions(componentName);\n\n  let column;\n  onDestroy(\n    state.subscribe(`config.list.columns.data.${columnId}`, val => {\n      column = val;\n      update();\n    })\n  );\n\n  let className, contentClass, width, style;\n  onDestroy(\n    state.subscribeAll(['config.classNames', 'config.headerHeight'], () => {\n      const value = state.get('config');\n      className = api.getClass(componentName, { column });\n      contentClass = api.getClass(componentName + '-content', { column });\n      style = `--height: ${value.headerHeight}px;`;\n      update();\n    })\n  );\n\n  const ListColumnHeaderResizer = createComponent(ListColumnHeaderResizerComponent, { columnId });\n  onDestroy(ListColumnHeaderResizer.destroy);\n\n  // @ts-ignore\n  const listExpander = createComponent(ListExpander, {});\n  onDestroy(listExpander.destroy);\n\n  function withExpander() {\n    return html`\n      <div class=${contentClass}>\n        ${listExpander.html()}${ListColumnHeaderResizer.html(column)}\n      </div>\n    `;\n  }\n\n  function withoutExpander() {\n    return html`\n      <div class=${contentClass}>\n        ${ListColumnHeaderResizer.html(column)}\n      </div>\n    `;\n  }\n\n  return function() {\n    return html`\n      <div class=${className} style=${style} data-actions=${actions(componentActions, { column, api, state })}>\n        ${typeof column.expander === 'boolean' && column.expander ? withExpander() : withoutExpander()}\n      </div>\n    `;\n  };\n}\n","import ListColumnRow from './ListColumnRow';\nimport ListColumnHeaderComponent from './ListColumnHeader';\n\nexport default function ListColumnComponent({ columnId }, vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html, repeat } = vido;\n\n  let column,\n    columnPath = `config.list.columns.data.${columnId}`;\n  onDestroy(\n    state.subscribe(columnPath, val => {\n      column = val;\n      update();\n    })\n  );\n\n  const componentName = 'list-column';\n  const rowsComponentName = componentName + '-rows';\n  const componentActions = api.getActions(componentName);\n  const rowsActions = api.getActions(rowsComponentName);\n  let className, classNameContainer, calculatedWidth, width, styleContainer;\n\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { column });\n      classNameContainer = api.getClass(rowsComponentName, { column });\n      update();\n    })\n  );\n\n  let visibleRows = [];\n  onDestroy(\n    state.subscribe('_internal.list.visibleRows;', val => {\n      visibleRows.forEach(row => row.component.destroy());\n      visibleRows = val.map(row => ({\n        id: row.id,\n        component: createComponent(ListColumnRow, { columnId, rowId: row.id })\n      }));\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    visibleRows.forEach(row => row.component.destroy());\n  });\n\n  onDestroy(\n    state.subscribeAll(\n      [\n        'config.list.columns.percent',\n        'config.list.columns.resizer.width',\n        `config.list.columns.data.${column.id}.width`,\n        'config.height',\n        'config.headerHeight'\n      ],\n      bulk => {\n        const list = state.get('config.list');\n        calculatedWidth = list.columns.data[column.id].width * list.columns.percent * 0.01;\n        width = `width: ${calculatedWidth + list.columns.resizer.width}px`;\n        styleContainer = `height: ${state.get('config.height')}px`;\n      },\n      { bulk: true }\n    )\n  );\n\n  const ListColumnHeader = createComponent(ListColumnHeaderComponent, { columnId });\n  onDestroy(ListColumnHeader.destroy);\n\n  return props => html`\n    <div\n      class=${className}\n      data-actions=${actions(componentActions, { column, state: state, api: api })}\n      style=${width}\n    >\n      ${ListColumnHeader.html()}\n      <div class=${classNameContainer} style=${styleContainer} data-actions=${actions(rowsActions, { api, state })}>\n        ${visibleRows.map(row => row.component.html())}\n      </div>\n    </div>\n  `;\n}\n","import ListColumnComponent from './ListColumn';\nexport default function List(vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html, repeat } = vido;\n\n  const componentName = 'list';\n  const componentActions = api.getActions(componentName);\n  let className;\n\n  let list, percent;\n  onDestroy(\n    state.subscribe('config.list', () => {\n      list = state.get('config.list');\n      percent = list.columns.percent;\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { list });\n      update();\n    })\n  );\n\n  let columns,\n    listColumns = [];\n  onDestroy(\n    state.subscribe('config.list.columns.data;', data => {\n      // only 'config.list.columns.data;' because listcolumn component will watch nested values\n      listColumns.forEach(ls => ls.component.destroy());\n      columns = Object.keys(data);\n      listColumns = columns.map(columnId => {\n        const component = createComponent(ListColumnComponent, {\n          columnId\n        });\n        return { id: columnId, component };\n      });\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    listColumns.forEach(c => c.component.destroy());\n  });\n\n  let style;\n  onDestroy(\n    state.subscribe('config.height', height => {\n      style = `height: ${height}px`;\n      update();\n    })\n  );\n\n  function onScroll(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    if (event.type === 'scroll') {\n      state.update('config.scroll.top', event.target.scrollTop);\n    } else {\n      const wheel = api.normalizeMouseWheelEvent(event);\n      state.update('config.scroll.top', top => {\n        return api.limitScroll('top', (top += wheel.y * state.get('config.scroll.yMultiplier')));\n      });\n    }\n  }\n\n  let width;\n  function getWidth(element) {\n    if (!width) {\n      width = element.clientWidth;\n      if (percent === 0) {\n        width = 0;\n      }\n      state.update('_internal.list.width', width);\n      state.update('_internal.elements.list', element);\n    }\n  }\n\n  componentActions.push(element => {\n    state.update('_internal.elements.list', element);\n    getWidth(element);\n    return {\n      update: getWidth\n    };\n  });\n\n  return props =>\n    list.columns.percent > 0\n      ? html`\n          <div\n            class=${className}\n            data-actions=${actions(componentActions)}\n            style=${style}\n            @scroll=${onScroll}\n            @wheel=${onScroll}\n          >\n            ${listColumns.map(c => c.component.html())}\n          </div>\n        `\n      : null;\n}\n","export default function CalendarDate({ date }, vido) {\n  const { api, state, onDestroy, actions, update, html } = vido;\n\n  const componentName = 'chart-calendar-date';\n  const componentActions = api.getActions(componentName);\n\n  let className,\n    formattedClassName,\n    formattedYearClassName,\n    formattedMonthClassName,\n    formattedDayClassName,\n    formattedDayWordClassName;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { date });\n      if (api.time.date(date.leftGlobal).format('YYYY-MM-DD') === api.time.date().format('YYYY-MM-DD')) {\n        className += ' current';\n      }\n      if (\n        api.time\n          .date(date.leftGlobal)\n          .subtract(1, 'day')\n          .format('YYYY-MM-DD') === api.time.date().format('YYYY-MM-DD')\n      ) {\n        className += ' next';\n      }\n      if (\n        api.time\n          .date(date.leftGlobal)\n          .add(1, 'day')\n          .format('YYYY-MM-DD') === api.time.date().format('YYYY-MM-DD')\n      ) {\n        className += ' previous';\n      }\n      formattedClassName = api.getClass(`${componentName}-formatted`, { date });\n      formattedYearClassName = api.getClass(`${componentName}-formatted-year`, { date });\n      formattedMonthClassName = api.getClass(`${componentName}-formatted-month`, { date });\n      formattedDayClassName = api.getClass(`${componentName}-formatted-day`, { date });\n      formattedDayWordClassName = api.getClass(`${componentName}-formatted-day-word`, { date });\n      update();\n    })\n  );\n\n  let time, period, small, smallFormatted, year, month, day, dayWord, style, daySize;\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.time', 'config.chart.calendar.vertical.smallFormat'],\n      function updateDate() {\n        time = state.get('_internal.chart.time');\n        daySize = time.zoom <= 22 ? 18 : 13;\n        period = time.period;\n        const dateMod = api.time.date(date.leftGlobal);\n        const maxWidth = time.maxWidth;\n        small = maxWidth <= 40;\n        const smallFormat = state.get('config.chart.calendar.vertical.smallFormat');\n        smallFormatted = dateMod.format(smallFormat);\n        year = dateMod.format('YYYY');\n        month = dateMod.format('MMMM');\n        day = dateMod.format('DD');\n        dayWord = dateMod.format('dddd');\n        if (maxWidth <= 70) {\n          year = dateMod.format('YY');\n          month = dateMod.format('MMM');\n          day = dateMod.format('DD');\n          dayWord = dateMod.format('ddd');\n        } else if (maxWidth <= 150) {\n          dayWord = dateMod.format('ddd');\n        }\n        style = `width: ${date.width}px; margin-left:-${date.subPx}px; --day-size: ${daySize}px`;\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  return props => html`\n    <div class=${className} style=${style} data-actions=${actions(componentActions, { date, api, state })}>\n      ${small\n        ? html`\n            <div class=${formattedClassName} style=\"transform: rotate(90deg);\">${smallFormatted}</div>\n          `\n        : html`\n            <div class=${formattedClassName}>\n              <div class=${formattedYearClassName}>${year}</div>\n              <div class=${formattedMonthClassName}>${month}</div>\n              <div class=${formattedDayClassName}>${day}</div>\n              <div class=${formattedDayWordClassName}>${dayWord}</div>\n            </div>\n          `}\n    </div>\n  `;\n}\n","import DateComponent from './CalendarDate';\n\nexport default function Calendar(vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html, repeat } = vido;\n  const componentName = 'chart-calendar';\n  const componentActions = api.getActions(componentName);\n\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName);\n      update();\n    })\n  );\n\n  let headerHeight,\n    style = '';\n  onDestroy(\n    state.subscribe('config.headerHeight', value => {\n      headerHeight = value;\n      style = `height: ${headerHeight}px;`;\n      update();\n    })\n  );\n\n  let dates,\n    datesComponents = [];\n  onDestroy(\n    state.subscribe('_internal.chart.time.dates', value => {\n      dates = value;\n      datesComponents.forEach(date => date.component.destroy());\n      datesComponents = [];\n      for (const date of dates) {\n        datesComponents.push({ id: date.id, component: createComponent(DateComponent, { date }) });\n      }\n      update();\n    })\n  );\n  onDestroy(() => {\n    datesComponents.forEach(date => date.component.destroy());\n  });\n\n  componentActions.push(element => {\n    state.update('_internal.elements.calendar', element);\n  });\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions)} style=${style}>\n      ${repeat(datesComponents, d => d.id, d => d.component.html())}\n    </div>\n  `;\n}\n","export default function GanttGridBlock({ row, time, top }, vido) {\n  const { api, state, onDestroy, actions, update, html } = vido;\n  const componentName = 'chart-gantt-grid-block';\n  const componentActions = api.getActions(componentName, { row, time, top });\n  let className = api.getClass(componentName, { row });\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n      if (\n        time.leftGlobal ===\n        api.time\n          .date()\n          .startOf('day')\n          .valueOf()\n      ) {\n        className += ' current';\n      }\n      update();\n    })\n  );\n\n  let style = `width: ${time.width}px;height: 100%;margin-left:-${time.subPx}px`;\n  return props =>\n    html`\n      <div\n        class=${className}\n        data-actions=${actions(componentActions, { row, time, top, api, state })}\n        style=${style}\n      />\n    `;\n}\n","import GridBlock from './GanttGridBlock';\nexport default function GanttGridRow({ row }, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  const componentName = 'chart-gantt-grid-row';\n\n  const componentActions = api.getActions(componentName);\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { row });\n      update();\n    })\n  );\n\n  let rowsBlocksComponents = [];\n  for (const block of row.blocks) {\n    rowsBlocksComponents.push({\n      id: block.id,\n      component: createComponent(GridBlock, { row, time: block.date, top: block.top })\n    });\n  }\n\n  onDestroy(() => {\n    rowsBlocksComponents.forEach(row => row.component.destroy());\n  });\n\n  let style = `height: ${row.rowData.height}px;`;\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { row, api, state })} style=${style}>\n      ${rowsBlocksComponents.map(r => r.component.html())}\n    </div>\n  `;\n}\n","import GridRowComponent from './GanttGridRow';\n//import GridBlock from './GanttGridBlock.svelte';\nexport default function GanttGrid(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  const componentName = 'chart-gantt-grid';\n  const componentActions = api.getActions(componentName);\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n      update();\n    })\n  );\n\n  let height, style;\n  onDestroy(\n    state.subscribe('_internal.height', h => {\n      height = h;\n      style = `height: ${height}px`;\n      update();\n    })\n  );\n\n  let rows,\n    rowsComponents = [];\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.time.dates', '_internal.list.visibleRows', 'config.chart.grid.block'],\n      function generateBlocks() {\n        const rowsData = state.get('_internal.list.visibleRows');\n        const dates = state.get('_internal.chart.time.dates');\n        rowsComponents.forEach(row => row.component.destroy());\n        rowsComponents = [];\n        let top = 0;\n        rows = [];\n        for (const rowId in rowsData) {\n          const rowData = rowsData[rowId];\n          const blocks = [];\n          let index = 0;\n          for (const date of dates) {\n            blocks.push({ id: index++, date, row: rowData, top });\n          }\n          const row = { id: rowData.id, blocks, rowData, top };\n          rows.push(row);\n          rowsComponents.push({ id: rowData.id, component: createComponent(GridRowComponent, { row }) });\n          top += rowData.height;\n          update();\n        }\n      },\n      { bulk: true }\n    )\n  );\n\n  componentActions.push(element => {\n    state.update('_internal.elements.grid');\n  });\n\n  onDestroy(() => {\n    rowsComponents.forEach(row => row.component.destroy());\n  });\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { api, state })} style=${style}>\n      ${rowsComponents.map(r => r.component.html())}\n    </div>\n  `;\n}\n","export default function GanttItemsRowItem({ rowId, itemId }, vido) {\n  const { api, state, onDestroy, actions, update, html } = vido;\n\n  let row,\n    rowPath = `config.list.rows.${rowId}`;\n  onDestroy(\n    state.subscribe(rowPath, value => {\n      row = value;\n      update();\n    })\n  );\n  let item,\n    itemPath = `config.chart.items.${itemId}`;\n  onDestroy(\n    state.subscribe(itemPath, value => {\n      item = value;\n      update();\n    })\n  );\n\n  const componentName = 'chart-gantt-items-row-item';\n  const componentActions = api.getActions(componentName);\n  let className, contentClassName, labelClassName;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { row, item });\n      contentClassName = api.getClass(componentName + '-content', { row, item });\n      labelClassName = api.getClass(componentName + '-content-label', { row, item });\n      update();\n    })\n  );\n\n  let style,\n    itemLeftPx = 0,\n    itemWidthPx = 0;\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.time', 'config.scroll', itemPath],\n      bulk => {\n        item = state.get(itemPath);\n        let time = state.get('_internal.chart.time');\n        itemLeftPx = (item.time.start - time.leftGlobal) / time.timePerPixel;\n        itemWidthPx = (item.time.end - item.time.start) / time.timePerPixel;\n        itemWidthPx -= state.get('config.chart.spacing');\n        const inViewPort = api.isItemInViewport(item, time.leftGlobal, time.rightGlobal);\n        style = `left:${itemLeftPx}px;width:${itemWidthPx}px;`;\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  return props => html`\n    <div\n      class=${className}\n      data-actions=${actions(componentActions, { item, row, left: itemLeftPx, width: itemWidthPx, api, state })}\n      style=${style}\n    >\n      <div class=${contentClassName}>\n        <div class=${labelClassName}\">${item.label}</div>\n      </div>\n    </div>\n  `;\n}\n","import RowItemComponent from './GanttItemsRowItem';\nexport default function GanttItemsRow({ rowId }, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  let rowPath = `_internal.flatTreeMapById.${rowId}`;\n  let row, element, style, styleInner;\n  onDestroy(\n    state.subscribeAll([rowPath, '_internal.chart'], bulk => {\n      row = state.get(rowPath);\n      const chart = state.get('_internal.chart');\n      style = `width:${chart.dimensions.width}px;height:${row.height}px;--row-height:${row.height}px;`;\n      styleInner = `width: ${chart.time.totalViewDurationPx}px;height: 100%;`;\n      if (element) {\n        element.scrollLeft = chart.time.leftPx;\n      }\n      update();\n    })\n  );\n\n  let items,\n    itemComponents = [];\n  onDestroy(\n    state.subscribe(`_internal.flatTreeMapById.${rowId}._internal.items;`, value => {\n      items = value;\n      itemComponents.forEach(item => item.component.destroy());\n      itemComponents = [];\n      for (const item of items) {\n        itemComponents.push({ id: item.id, component: createComponent(RowItemComponent, { rowId, itemId: item.id }) });\n      }\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    itemComponents.forEach(item => item.component.destroy());\n  });\n\n  const componentName = 'chart-gantt-items-row';\n  const componentNameInner = componentName + '-inner';\n  const componentActions = api.getActions(componentName);\n  let className, classNameInner;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { row });\n      classNameInner = api.getClass(componentNameInner, { row });\n      update();\n    })\n  );\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions)} style=${style}>\n      <div class=${classNameInner} style=${styleInner}>\n        ${repeat(itemComponents, i => i.id, i => i.component.html())}\n      </div>\n    </div>\n  `;\n}\n","import ItemsRowComponent from './GanttItemsRow';\nexport default function GnattItems(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  const componentName = 'chart-gantt-items';\n  const componentActions = api.getActions(componentName);\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n      update();\n    })\n  );\n\n  let rows = [],\n    rowsComponents = [];\n  onDestroy(\n    state.subscribe('_internal.list.visibleRows;', visibleRows => {\n      rows = visibleRows;\n      rowsComponents.forEach(row => row.component.destroy());\n      rowsComponents = [];\n      for (const row of rows) {\n        rowsComponents.push({ id: row.id, component: createComponent(ItemsRowComponent, { rowId: row.id }) });\n      }\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    rowsComponents.forEach(row => row.component.destroy());\n  });\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { api, state })}>\n      ${rowsComponents.map(r => r.component.html())}\n    </div>\n  `;\n}\n","import GridComponent from './GanttGrid';\nimport ItemsComponent from './GanttItems';\nexport default function Gantt(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n  const componentName = 'chart-gantt';\n  const componentActions = api.getActions(componentName);\n\n  const Grid = createComponent(GridComponent);\n  onDestroy(Grid.destroy);\n  const Items = createComponent(ItemsComponent);\n  onDestroy(Items.destroy);\n\n  let className, classNameInner;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName);\n      classNameInner = api.getClass(componentName + '-inner');\n      update();\n    })\n  );\n\n  let style = '',\n    styleInner = '';\n  onDestroy(\n    state.subscribeAll(['_internal.height', '_internal.list.rowsHeight'], () => {\n      style = `height: ${state.get('_internal.height')}px`;\n      styleInner = `height: ${state.get('_internal.list.rowsHeight')}px;`;\n      update();\n    })\n  );\n\n  componentActions.push(element => {\n    state.update('_internal.elements.gantt', element);\n  });\n\n  return props => html`\n    <div class=${className} style=${style} data-actions=${actions(componentActions)} @wheel=${api.onScroll}>\n      <div class=${classNameInner} style=${styleInner}>\n        ${Grid.html()}${Items.html()}\n      </div>\n    </div>\n  `;\n}\n","import CalendarComponent from './Calendar/Calendar';\nimport GanttComponent from './Gantt/Gantt';\n\nexport default function Chart(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n  const componentName = 'chart';\n\n  const Calendar = createComponent(CalendarComponent);\n  onDestroy(Calendar.destroy);\n  const Gantt = createComponent(GanttComponent);\n  onDestroy(Gantt.destroy);\n\n  let className,\n    classNameScroll,\n    classNameScrollInner,\n    scrollElement,\n    styleScroll = '',\n    styleScrollInner = '',\n    componentActions = api.getActions(componentName);\n\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName);\n      classNameScroll = api.getClass('horizontal-scroll');\n      classNameScrollInner = api.getClass('horizontal-scroll-inner');\n      update();\n    })\n  );\n  onDestroy(\n    state.subscribe('config.scroll.left', left => {\n      if (scrollElement && scrollElement.scrollLeft !== left) {\n        scrollElement.scrollLeft = left;\n      }\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.dimensions.width', '_internal.chart.time.totalViewDurationPx'],\n      function horizontalScroll(value, eventInfo) {\n        styleScroll = `width: ${state.get('_internal.chart.dimensions.width')}px`;\n        styleScrollInner = `width: ${state.get('_internal.chart.time.totalViewDurationPx')}px; height:1px`;\n        update();\n      }\n    )\n  );\n\n  const onScroll = {\n    handleEvent(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      let scrollLeft, scrollTop;\n      if (event.type === 'scroll') {\n        state.update('config.scroll.left', event.target.scrollLeft);\n        scrollLeft = event.target.scrollLeft;\n      } else {\n        const wheel = api.normalizeMouseWheelEvent(event);\n        const xMultiplier = state.get('config.scroll.xMultiplier');\n        const yMultiplier = state.get('config.scroll.yMultiplier');\n        if (event.shiftKey && wheel.y) {\n          state.update('config.scroll.left', left => {\n            return (scrollLeft = api.limitScroll('left', (left += wheel.y * xMultiplier)));\n          });\n        } else if (wheel.x) {\n          state.update('config.scroll.left', left => {\n            return (scrollLeft = api.limitScroll('left', (left += wheel.x * xMultiplier)));\n          });\n        } else {\n          state.update('config.scroll.top', top => {\n            return (scrollTop = api.limitScroll('top', (top += wheel.y * yMultiplier)));\n          });\n        }\n      }\n      const chart = state.get('_internal.elements.chart');\n      const scrollInner = state.get('_internal.elements.horizontalScrollInner');\n      if (chart) {\n        const scrollLeft = state.get('config.scroll.left');\n        let percent = 0;\n        if (scrollLeft) {\n          percent = Math.round((scrollLeft / (scrollInner.clientWidth - chart.clientWidth)) * 100);\n          if (percent > 100) percent = 100;\n          console.log(`scrollLeft: ${scrollLeft} percent: ${percent} chart clientWidth: ${chart.clientWidth}`);\n        }\n        state.update('config.scroll.percent.left', percent);\n      }\n    },\n    passive: false\n  };\n\n  function bindElement(element) {\n    scrollElement = element;\n    state.update('_internal.elements.horizontalScroll', element);\n  }\n\n  function bindInnerScroll(element) {\n    state.update('_internal.elements.horizontalScrollInner', element);\n  }\n\n  componentActions.push(element => {\n    state.update('_internal.elements.chart', element);\n  });\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { api, state })} @wheel=${onScroll}>\n      ${Calendar.html()}${Gantt.html()}\n      <div class=${classNameScroll} style=${styleScroll} data-actions=${actions([bindElement])} @scroll=${onScroll}>\n        <div class=${classNameScrollInner} style=${styleScrollInner} data-actions=${actions([bindInnerScroll])} />\n      </div>\n    </div>\n  `;\n}\n","import ResizeObserver from 'resize-observer-polyfill';\nimport ListComponent from './List/List';\nimport ChartComponent from './Chart/Chart';\n\nif (location.host !== 'localhost:5000' && location.host !== 'neuronet.io') {\n  throw new Error('Sorry!');\n}\n\nexport default function Main(vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html } = vido;\n  const componentName = api.name;\n\n  const List = createComponent(ListComponent);\n  onDestroy(List.destroy);\n  const Chart = createComponent(ChartComponent);\n  onDestroy(Chart.destroy);\n\n  onDestroy(\n    state.subscribe('config.plugins', plugins => {\n      if (typeof plugins !== 'undefined' && Array.isArray(plugins)) {\n        for (const plugin of plugins) {\n          plugin(state, api);\n        }\n      }\n    })\n  );\n\n  const componentActions = api.getActions('');\n  let className, classNameVerticalScroll, style, styleVerticalScroll, styleVerticalScrollArea;\n  let verticalScrollBarElement;\n  let rowsHeight = 0;\n  let resizerActive = false;\n\n  onDestroy(\n    state.subscribe('config.classNames', classNames => {\n      const config = state.get('config');\n      className = api.getClass(componentName, { config });\n      if (resizerActive) {\n        className += ` ${componentName}__list-column-header-resizer--active`;\n      }\n      classNameVerticalScroll = api.getClass('vertical-scroll', { config });\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(['config.height', 'config.headerHeight', '_internal.scrollBarHeight'], () => {\n      const config = state.get('config');\n      const scrollBarHeight = state.get('_internal.scrollBarHeight');\n      const height = config.height - config.headerHeight - scrollBarHeight;\n      state.update('_internal.height', height);\n      style = `--height: ${config.height}px`;\n      styleVerticalScroll = `height: ${height}px; width: ${scrollBarHeight}px; margin-top: ${config.headerHeight}px;`;\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribe('_internal.list.columns.resizer.active', active => {\n      resizerActive = active;\n      className = api.getClass(api.name);\n      if (resizerActive) {\n        className += ` ${api.name}__list-column-header-resizer--active`;\n      }\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(\n      ['config.list.rows;', 'config.chart.items;', 'config.list.rows.*.parentId', 'config.chart.items.*.rowId'],\n      (bulk, eventInfo) => {\n        if (state.get('_internal.flatTreeMap').length && eventInfo.type === 'subscribe') {\n          return;\n        }\n        const configRows = state.get('config.list.rows');\n        const rows = [];\n        for (const rowId in configRows) {\n          rows.push(configRows[rowId]);\n        }\n        api.fillEmptyRowValues(rows);\n        const configItems = state.get('config.chart.items');\n        const items = [];\n        for (const itemId in configItems) {\n          items.push(configItems[itemId]);\n        }\n        const treeMap = api.makeTreeMap(rows, items);\n        state.update('_internal.treeMap', treeMap);\n        state.update('_internal.flatTreeMapById', api.getFlatTreeMapById(treeMap));\n        state.update('_internal.flatTreeMap', api.flattenTreeMap(treeMap));\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  onDestroy(\n    state.subscribeAll(\n      ['config.list.rows.*.expanded', '_internal.treeMap;'],\n      bulk => {\n        const configRows = state.get('config.list.rows');\n        const rowsWithParentsExpanded = api.getRowsFromIds(\n          api.getRowsWithParentsExpanded(\n            state.get('_internal.flatTreeMap'),\n            state.get('_internal.flatTreeMapById'),\n            configRows\n          ),\n          configRows\n        );\n        rowsHeight = api.getRowsHeight(rowsWithParentsExpanded);\n        state.update('_internal.list.rowsHeight', rowsHeight);\n        state.update('_internal.list.rowsWithParentsExpanded', rowsWithParentsExpanded);\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  onDestroy(\n    state.subscribeAll(['_internal.list.rowsWithParentsExpanded', 'config.scroll.top'], () => {\n      const visibleRows = api.getVisibleRows(state.get('_internal.list.rowsWithParentsExpanded'));\n      state.update('_internal.list.visibleRows', visibleRows);\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(['config.scroll.top', '_internal.list.visibleRows'], () => {\n      const top = state.get('config.scroll.top');\n      styleVerticalScrollArea = `height: ${rowsHeight}px; width: 1px`;\n      if (verticalScrollBarElement && verticalScrollBarElement.scrollTop !== top) {\n        verticalScrollBarElement.scrollTop = top;\n      }\n      update();\n    })\n  );\n\n  function generateAndAddDates(internalTime, chartWidth) {\n    const dates = [];\n    let leftGlobal = internalTime.leftGlobal;\n    const rightGlobal = internalTime.rightGlobal;\n    const timePerPixel = internalTime.timePerPixel;\n    const period = internalTime.period;\n    let sub = leftGlobal - api.time.date(leftGlobal).startOf(period);\n    let subPx = sub / timePerPixel;\n    let leftPx = 0;\n    let maxWidth = 0;\n    let id = 0;\n    while (leftGlobal < rightGlobal) {\n      const date = {\n        id: id++,\n        sub,\n        subPx,\n        leftGlobal,\n        rightGlobal: api.time\n          .date(leftGlobal)\n          .endOf(period)\n          .valueOf(),\n        width: 0,\n        leftPx: 0,\n        rightPx: 0\n      };\n      date.width = (date.rightGlobal - date.leftGlobal + sub) / timePerPixel;\n      if (date.width > chartWidth) {\n        date.width = chartWidth;\n      }\n      maxWidth = date.width > maxWidth ? date.width : maxWidth;\n      date.leftPx = leftPx;\n      leftPx += date.width;\n      date.rightPx = leftPx;\n      dates.push(date);\n      leftGlobal = date.rightGlobal + 1;\n      sub = 0;\n      subPx = 0;\n    }\n    internalTime.maxWidth = maxWidth;\n    internalTime.dates = dates;\n  }\n\n  onDestroy(\n    state.subscribeAll(\n      [\n        'config.chart.time',\n        '_internal.dimensions.width',\n        'config.scroll.left',\n        '_internal.scrollBarHeight',\n        '_internal.list.width'\n      ],\n      function recalculateTimesAction() {\n        const chartWidth = state.get('_internal.dimensions.width') - state.get('_internal.list.width');\n        const chartInnerWidth = chartWidth - state.get('_internal.scrollBarHeight');\n        const chartHeight = state.get('_internal.dimensions.height') - state.get('config.headerHeight');\n        state.update('_internal.chart.dimensions', {\n          width: chartWidth,\n          innerWidth: chartInnerWidth,\n          height: chartHeight\n        });\n        let time = api.mergeDeep({}, state.get('config.chart.time'));\n        time = api.time.recalculateFromTo(time);\n        const zoomPercent = time.zoom * 0.01;\n        let scrollLeft = state.get('config.scroll.left');\n        time.timePerPixel = zoomPercent + Math.pow(2, time.zoom);\n        time.totalViewDurationMs = api.time.date(time.to).diff(time.from, 'milliseconds');\n        time.totalViewDurationPx = time.totalViewDurationMs / time.timePerPixel;\n        if (scrollLeft > time.totalViewDurationPx) {\n          scrollLeft = time.totalViewDurationPx - chartWidth;\n        }\n        time.leftGlobal = scrollLeft * time.timePerPixel + time.from;\n        time.rightGlobal = time.leftGlobal + chartWidth * time.timePerPixel;\n        time.leftInner = time.leftGlobal - time.from;\n        time.rightInner = time.rightGlobal - time.from;\n        time.leftPx = time.leftInner / time.timePerPixel;\n        time.rightPx = time.rightInner / time.timePerPixel;\n        const pixelGlobal = Math.round(time.rightGlobal / time.timePerPixel);\n        const pixelTo = Math.round(time.to / time.timePerPixel);\n        if (pixelGlobal > pixelTo) {\n          const diff = time.rightGlobal - time.to;\n          const diffPercent = diff / (time.rightGlobal - time.from);\n          time.timePerPixel = time.timePerPixel - time.timePerPixel * diffPercent;\n          time.leftGlobal = scrollLeft * time.timePerPixel + time.from;\n          time.rightGlobal = time.to;\n          time.rightInner = time.rightGlobal - time.from;\n          time.totalViewDurationMs = time.to - time.from;\n          time.totalViewDurationPx = time.totalViewDurationMs / time.timePerPixel;\n          time.rightInner = time.rightGlobal - time.from;\n          time.rightPx = time.rightInner / time.timePerPixel;\n          time.leftPx = time.leftInner / time.timePerPixel;\n        }\n        generateAndAddDates(time, chartWidth);\n        state.update(`_internal.chart.time`, time);\n        update();\n      }\n    )\n  );\n\n  state.update('_internal.scrollBarHeight', api.getScrollBarHeight());\n\n  const onScroll = {\n    handleEvent(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      state.update(\n        'config.scroll',\n        scroll => {\n          scroll.top = event.target.scrollTop;\n          const scrollInner = state.get('_internal.elements.verticalScrollInner');\n          if (scrollInner) {\n            const scrollHeight = scrollInner.clientHeight;\n            scroll.percent.top = scroll.top / scrollHeight;\n          }\n          return scroll;\n        },\n        { only: ['top', 'percent.top'] }\n      );\n    },\n    passive: false\n  };\n\n  const dimensions = { width: 0, height: 0 };\n\n  componentActions.push(element => {\n    const ro = new ResizeObserver((entries, observer) => {\n      const width = element.clientWidth;\n      const height = element.clientHeight;\n      if (dimensions.width !== width || dimensions.height !== height) {\n        dimensions.width = width;\n        dimensions.height = height;\n        state.update('_internal.dimensions', dimensions);\n      }\n    });\n    ro.observe(element);\n    state.update('_internal.elements.main', element);\n  });\n\n  function bindScrollElement(element) {\n    verticalScrollBarElement = element;\n    state.update('_internal.elements.verticalScroll', element);\n  }\n  function bindScrollInnerElement(element) {\n    state.update('_internal.elements.verticalScrollInner', element);\n  }\n\n  return props =>\n    html`\n      <div class=${className} style=${style} @scroll=${onScroll} data-actions=${actions(componentActions)}>\n        ${List.html()}${Chart.html()}\n        <div\n          class=${classNameVerticalScroll}\n          style=${styleVerticalScroll}\n          @scroll=${onScroll}\n          data-action=${actions([bindScrollElement])}\n        >\n          <div style=${styleVerticalScrollArea} data-actions=${actions([bindScrollInnerElement])} />\n        </div>\n      </div>\n    `;\n}\n","import Vido from '@neuronet.io/vido';\nimport publicApi, { getInternalApi } from './api/Api';\nimport Main from './components/Main';\n\nconst _internal = {\n  components: {\n    Main\n  },\n  scrollBarHeight: 17,\n  height: 0,\n  treeMap: {},\n  flatTreeMap: [],\n  flatTreeMapById: {},\n  list: {\n    expandedHeight: 0,\n    visibleRows: [],\n    rows: {},\n    width: 0\n  },\n  dimensions: {\n    width: 0,\n    height: 0\n  },\n  chart: {\n    dimensions: {\n      width: 0,\n      innerWidth: 0\n    },\n    visibleItems: [],\n    time: {\n      dates: [],\n      timePerPixel: 0,\n      firstTaskTime: 0,\n      lastTaskTime: 0,\n      totalViewDurationMs: 0,\n      totalViewDurationPx: 0,\n      leftGlobal: 0,\n      rightGlobal: 0,\n      leftPx: 0,\n      rightPx: 0,\n      leftInner: 0,\n      rightInner: 0\n    }\n  },\n  elements: {}\n};\n\nconst GSTC = options => {\n  const state = options.state;\n  const api = getInternalApi(state);\n  // @ts-ignore\n  window.state = state;\n\n  state.update('', oldValue => {\n    return {\n      config: oldValue.config,\n      _internal\n    };\n  });\n  // @ts-ignore\n  const vido = Vido(state, api);\n  const app = vido.createApp(Main, options.element);\n  return { state };\n};\n\nGSTC.api = publicApi;\nexport default GSTC;\n"],"names":["directives","WeakMap","directive","f","args","d","set","isDirective","o","has","isCEPolyfill","undefined","window","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","n","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","SVGTemplateResult","super","getTemplateElement","svgElement","firstChild","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","key","join","render","Object","assign","appendInto","svg","templateCaches$1","cache","previousValue","cachedTemplate","nodes","createDocumentFragment","classMapCache","classMap","classInfo","className","classList","oldInfo","remove","previousValues","guard","every","from","ifDefined","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","list","map","partListCache","keyListCache","repeat","items","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","styleMapCache","styleMap","styleInfo","style","cssText","removeProperty","setProperty","previousValues$1","unsafeHTML","_state","until","state","lastRenderedIndex","previousLength","then","Promise","resolve","resolvedValue","Vido","api","componentId","components","app","actions","shouldUpdateCount","resolved","getActions","createFunctions","props","create","exists","find","action","componentAction","__vido__","vido","componentActions","component","componentInstance","destroy","destroyComponent","updateTemplate","getComponentInstance","destroyable","vidoInstance","onDestroy","fn","firstMethods","methods","forEach","originalDestroy","filter","currentShouldUpdateCount","self","el","App","createComponent","executeActions","actionNames","defaultConfig","height","headerHeight","rows","rowHeight","columns","percent","resizer","width","inRealTime","dots","expander","padding","size","icons","open","closed","scroll","top","left","xMultiplier","yMultiplier","chart","time","to","zoom","period","dates","calendar","vertical","smallFormat","grid","classNames","generateEmptyActions","locale","weekdays","weekdaysShort","weekdaysMin","months","monthsShort","weekStart","relativeTime","future","past","m","mm","h","hh","dd","M","MM","y","yy","formats","LT","LTS","L","LL","LLL","LLLL","ordinal","module","r","u","a","c","z","utcOffset","abs","floor","year","month","clone","add","Number","ceil","p","w","ms","Q","replace","$","g","format","pl","date","D","$L","utc","$u","parse","prototype","$d","Date","NaN","test","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","day","hour","minute","second","millisecond","unix","valueOf","getTime","toDate","apply","$locale","$set","min","daysInMonth","round","subtract","meridiem","YY","YYYY","MMM","MMMM","DD","ddd","dddd","H","HH","A","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","extend","isDayjs","en","Ls","local","getUTCFullYear","getUTCMonth","getUTCDate","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","isUTC","timeApi","getApi","dayjs","MAX_SAFE_INTEGER","keys","itemId","Matcher","pattern","wchar","segments","starCount","minLength","maxLength","segStartIndex","len","char","substring","Infinity","segRightIndex","rightPos","rightIsStar","segment","WildcardObject","obj","delimeter","wildcard","first","simpleMatch","currentArr","path","nextPartIndex","currentWildcardPath","currentPath","goFurther","currentObj","handleArray","handleObject","ObjectPath","copiedPath","shift","hasOwnProperty","newValue","defaultOptions","notRecursive","param","log","message","info","console","debug","defaultListenerOptions","bulk","source","defaultUpdateOptions","only","DeepState","listeners","id","pathGet","Path","pathSet","scan","longer","shorter","cleanNotRecursivePath","includes","isNotRecursive","paramsInfo","replaced","original","params","fullReplaced","reg","userPaths","unsubscribers","userPath","subscribe","unsubscribe","isRecursive","isWildcard","hasParams","listenerPath","cutPath","listener","listenersCollection","collCfg","originalPath","getParamsInfo","getCleanListenersCollection","getListenerCollectionMatch","getCleanListener","getListenersCollection","paths","bulkValue","getParams","debugSubscribe","oldValue","exclude","returnNotified","alreadyNotified","singleListener","debugTime","eventInfo","debugListener","bulkListener","updatePath","bulkData","listenerId","notifyListeners","getSubscribedListeners","currentCuttedPath","restPath","trimPath","bulkListeners","currentRestPath","fullPath","getNestedListeners","canBeNested","notifyPath","wildcardScan","wildcardPath","some","getNotifyOnlyListeners","scanned","getUpdateValues","same","groupedListenersPack","groupedListeners","wildcardUpdate","notifyOnly","notifySubscribedListeners","notifyNestedListeners","groupedListener","now","lib","isObject","mergeDeep","target","sources","publicApi","stateFromConfig","userConfig","defaultConfigActions","userActions","allActionNames","flatMap","all","actionName","mergeActions","config","State","MapShim","getIndex","arr","entry","class_1","__entries__","defineProperty","enumerable","configurable","delete","entries","splice","callback","ctx","_i","_a","isBrowser","global$1","global","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","observe","childList","characterData","subtree","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","right","vertPad","bottom","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","ResizeObserver","method","ListToggle","componentName","classNameOpen","classNameClosed","iconOpen","iconClosed","expanded","toggle","row","rowId","getClass","subscribeAll","isExpanded","rowExpanded","ListExpander","paddingClass","children","parentId","_internal","parents","listToggle","ListColumnRow","columnId","rowPath","column","columnPath","val","listExpander","ListColumnHeaderResizer","containerClass","dotsClass","dotClass","lineClass","calculatedWidth","dotsWidth","isMoving","columnWidthPath","onMouseDown","onMouseMove","movementX","onMouseUp","body","header","dot","ListColumnHeader","contentClass","ListColumnHeaderResizerComponent","ListColumnComponent","rowsActions","classNameContainer","styleContainer","visibleRows","ListColumnHeaderComponent","List","listColumns","onScroll","stopPropagation","preventDefault","scrollTop","wheel","normalizeMouseWheelEvent","limitScroll","getWidth","ls","CalendarDate","formattedClassName","formattedYearClassName","formattedMonthClassName","formattedDayClassName","formattedDayWordClassName","small","smallFormatted","dayWord","daySize","leftGlobal","dateMod","maxWidth","subPx","Calendar","datesComponents","DateComponent","GanttGridBlock","GanttGridRow","rowsBlocksComponents","block","blocks","GridBlock","rowData","GanttGrid","rowsComponents","rowsData","GridRowComponent","GanttItemsRowItem","itemPath","contentClassName","labelClassName","itemLeftPx","itemWidthPx","timePerPixel","isItemInViewport","rightGlobal","label","GanttItemsRow","styleInner","dimensions","totalViewDurationPx","itemComponents","RowItemComponent","classNameInner","GnattItems","ItemsRowComponent","Gantt","Grid","GridComponent","Items","ItemsComponent","Chart","CalendarComponent","GanttComponent","classNameScroll","classNameScrollInner","scrollElement","styleScroll","styleScrollInner","scrollLeft","shiftKey","scrollInner","bindElement","bindInnerScroll","location","host","Main","ListComponent","ChartComponent","plugins","plugin","classNameVerticalScroll","styleVerticalScroll","styleVerticalScrollArea","verticalScrollBarElement","rowsHeight","resizerActive","scrollBarHeight","active","configRows","fillEmptyRowValues","configItems","treeMap","makeTreeMap","getFlatTreeMapById","flattenTreeMap","rowsWithParentsExpanded","getRowsFromIds","getRowsWithParentsExpanded","getRowsHeight","getVisibleRows","chartWidth","chartInnerWidth","chartHeight","innerWidth","zoomPercent","recalculateFromTo","pow","totalViewDurationMs","leftInner","rightInner","leftPx","rightPx","diffPercent","internalTime","sub","generateAndAddDates","getScrollBarHeight","scrollHeight","bindScrollElement","bindScrollInnerElement","flatTreeMap","flatTreeMapById","expandedHeight","visibleItems","firstTaskTime","lastTaskTime","elements","GSTC","$state","attrs","componentData","getAction","simple","postfix","constructor","trim","customClass","allActions","parentName","rowParents","childrenId","child","fastTree","itemParents","generateParents","getRowsFromMap","ids","next","currentOffset","rowOffset","deltaX","deltaY","deltaZ","mode","deltaMode","lineHeight","parseInt","getPropertyValue","scale","which","outer","visibility","msOverflowStyle","noScroll","offsetHeight","overflow","inner","withScroll","getInternalApi","createApp"],"mappings":"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"}