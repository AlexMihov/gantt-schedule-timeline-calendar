{"version":3,"file":"plugins.min.js","sources":["../src/plugins/plugins.ts","../src/plugins/ItemHold.plugin.ts","../src/plugins/ItemMovement.plugin.ts","../src/plugins/SaveAsImage.plugin.ts","../src/plugins/Selection.plugin.ts"],"sourcesContent":["import ItemHold from './ItemHold.plugin';\nimport ItemMovement from './ItemMovement.plugin';\nimport SaveAsImage from './SaveAsImage.plugin';\nimport Selection from './Selection.plugin';\n\nexport default { ItemHold, ItemMovement, SaveAsImage, Selection };\n","/**\n * ItemHold plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport default function ItemHold(options = {}) {\n  const defaultOptions = {\n    time: 1000,\n    movementThreshold: 2,\n    action(element, data) {}\n  };\n  options = { ...defaultOptions, ...options };\n\n  const holding = {};\n  const mouse = { x: 0, y: 0 };\n\n  function onMouseDown(item, element, event) {\n    if (typeof holding[item.id] === 'undefined') {\n      holding[item.id] = { x: event.x, y: event.y };\n      setTimeout(() => {\n        if (typeof holding[item.id] !== 'undefined') {\n          let exec = true;\n          let xMovement = holding[item.id].x - mouse.x;\n          if (Math.sign(xMovement) === -1) {\n            xMovement = -xMovement;\n          }\n          let yMovement = holding[item.id].y - mouse.y;\n          if (Math.sign(yMovement) === -1) {\n            yMovement = -yMovement;\n          }\n          if (xMovement > options.movementThreshold) {\n            exec = false;\n          }\n          if (yMovement > options.movementThreshold) {\n            exec = false;\n          }\n          delete holding[item.id];\n          if (exec) {\n            options.action(element, item);\n          }\n        }\n      }, options.time);\n    }\n  }\n\n  function onMouseUp(itemId) {\n    if (typeof holding[itemId] !== 'undefined') {\n      delete holding[itemId];\n    }\n  }\n\n  function action(element, data) {\n    function elementMouseDown(event) {\n      onMouseDown(data.item, element, event);\n    }\n    element.addEventListener('mousedown', elementMouseDown);\n    function mouseUp() {\n      onMouseUp(data.item.id);\n    }\n\n    document.addEventListener('mouseup', mouseUp);\n    function onMouseMove(event) {\n      mouse.x = event.x;\n      mouse.y = event.y;\n    }\n\n    document.addEventListener('mousemove', onMouseMove);\n    return {\n      update(element, changedData) {\n        data = changedData;\n      },\n      destroy(element, data) {\n        document.removeEventListener('mouseup', onMouseUp);\n        document.removeEventListener('mousemove', onMouseMove);\n        element.removeEventListener('mousedown', elementMouseDown);\n      }\n    };\n  }\n\n  return function initialize(vido) {\n    vido.state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n","/**\n * ItemMovement plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport default function ItemMovement(options = {}) {\n  const defaultOptions = {\n    moveable: true,\n    resizeable: true,\n    resizerContent: '',\n    collisionDetection: true,\n    outOfBorders: false,\n    snapStart(timeStart, startDiff) {\n      return timeStart + startDiff;\n    },\n    snapEnd(timeEnd, endDiff) {\n      return timeEnd + endDiff;\n    },\n    ghostNode: true\n  };\n  options = { ...defaultOptions, ...options };\n\n  const movementState = {};\n\n  /**\n   * Add moving functionality to items as action\n   *\n   * @param {Element} node DOM Node\n   * @param {Object} data\n   */\n  function action(node, data) {\n    let element = node.querySelector('.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content');\n    if (!options.moveable && !options.resizeable) {\n      return;\n    }\n    let state;\n    let api;\n\n    function isMoveable(data) {\n      let moveable = options.moveable;\n      if (data.item.hasOwnProperty('moveable') && moveable) {\n        moveable = data.item.moveable;\n      }\n      if (data.row.hasOwnProperty('moveable') && moveable) {\n        moveable = data.row.moveable;\n      }\n      return moveable;\n    }\n\n    function isResizeable(data) {\n      let resizeable = options.resizeable && (!data.item.hasOwnProperty('resizeable') || data.item.resizeable === true);\n      if (data.row.hasOwnProperty('resizeable') && resizeable) {\n        resizeable = data.row.resizeable;\n      }\n      return resizeable;\n    }\n\n    function getMovement(data) {\n      const itemId = data.item.id;\n      if (typeof movementState[itemId] === 'undefined') {\n        movementState[itemId] = { moving: false, resizing: false };\n      }\n      return movementState[itemId];\n    }\n\n    function createGhost(data, ev, ganttLeft, ganttTop) {\n      const movement = getMovement(data);\n      if (!options.ghostNode || typeof movement.ghost !== 'undefined') {\n        return;\n      }\n      const ghost = element.cloneNode(true);\n      const style = getComputedStyle(element);\n      ghost.style.position = 'absolute';\n      ghost.style.left = ev.x - ganttLeft - movement.itemLeftCompensation + 'px';\n      const itemTop = ev.y - ganttTop - data.row.top - element.offsetTop;\n      movement.itemTop = itemTop;\n      ghost.style.top = ev.y - ganttTop - itemTop + 'px';\n      ghost.style.width = style.width;\n      ghost.style['box-shadow'] = '10px 10px 6px #00000020';\n      const height = element.clientHeight + 'px';\n      ghost.style.height = height;\n      ghost.style['line-height'] = height;\n      ghost.style.opacity = '0.75';\n      state.get('_internal.elements.chart-timeline').appendChild(ghost);\n      movement.ghost = ghost;\n      return ghost;\n    }\n\n    function moveGhost(data, ev) {\n      if (options.ghostNode) {\n        const movement = getMovement(data);\n        const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n        const compensation = state.get('config.scroll.compensation');\n        movement.ghost.style.left = left + 'px';\n        movement.ghost.style.top = ev.y - movement.ganttTop - movement.itemTop + compensation + 'px';\n      }\n    }\n\n    function destroyGhost(itemId) {\n      if (!options.ghostNode) {\n        return;\n      }\n      if (typeof movementState[itemId] !== 'undefined' && typeof movementState[itemId].ghost !== 'undefined') {\n        state.get('_internal.elements.chart-timeline').removeChild(movementState[itemId].ghost);\n        delete movementState[itemId].ghost;\n      }\n      element.style.opacity = '1';\n    }\n\n    function getSnapStart(data) {\n      let snapStart = options.snapStart;\n      if (typeof data.item.snapStart === 'function') {\n        snapStart = data.item.snapStart;\n      }\n      return snapStart;\n    }\n\n    function getSnapEnd(data) {\n      let snapEnd = options.snapEnd;\n      if (typeof data.item.snapEnd === 'function') {\n        snapEnd = data.item.snapEnd;\n      }\n      return snapEnd;\n    }\n\n    state = data.state;\n    api = data.api;\n\n    const resizerHTML = `<div class=\"${api.getClass('chart-timeline-items-row-item-content-resizer')}\">${\n      options.resizerContent\n    }</div>`;\n    // @ts-ignore\n    element.insertAdjacentHTML('beforeend', resizerHTML);\n    const resizerEl = element.querySelector(\n      '.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content-resizer'\n    );\n    if (!isResizeable(data)) {\n      resizerEl.style.visibility = 'hidden';\n    } else {\n      resizerEl.style.visibility = 'visible';\n    }\n\n    function labelMouseDown(ev) {\n      ev.stopPropagation();\n      if (ev.button !== 0) {\n        return;\n      }\n      // @ts-ignore\n      element = node.querySelector('.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content');\n      const movement = getMovement(data);\n      movement.moving = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = Math.round((item.time.start - chartLeftTime) / timePerPixel);\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n      createGhost(data, ev, ganttRect.left, ganttRect.top);\n    }\n\n    function resizerMouseDown(ev) {\n      ev.stopPropagation();\n      if (ev.button !== 0) {\n        return;\n      }\n      const movement = getMovement(data);\n      movement.resizing = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = (item.time.end - chartLeftTime) / timePerPixel;\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n    }\n\n    function isCollision(rowId, itemId, start, end) {\n      if (!options.collisionDetection) {\n        return false;\n      }\n      const time = state.get('_internal.chart.time');\n      if (options.outOfBorders && (start < time.from || end > time.to)) {\n        return true;\n      }\n      let diff = api.time.date(end).diff(start, 'milliseconds');\n      if (Math.sign(diff) === -1) {\n        diff = -diff;\n      }\n      if (diff <= 1) {\n        return true;\n      }\n      const row = state.get('config.list.rows.' + rowId);\n      for (const rowItem of row._internal.items) {\n        if (rowItem.id !== itemId) {\n          if (start >= rowItem.time.start && start <= rowItem.time.end) {\n            return true;\n          }\n          if (end >= rowItem.time.start && end <= rowItem.time.end) {\n            return true;\n          }\n          if (start <= rowItem.time.start && end >= rowItem.time.end) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    function movementX(ev, row, item, zoom, timePerPixel) {\n      ev.stopPropagation();\n      const movement = getMovement(data);\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      moveGhost(data, ev);\n      const leftMs = state.get('_internal.chart.time.leftGlobal') + left * timePerPixel;\n      const add = leftMs - item.time.start;\n      const originalStart = item.time.start;\n      const finalStartTime = getSnapStart(data)(item.time.start, add, item);\n      const finalAdd = finalStartTime - originalStart;\n      const collision = isCollision(row.id, item.id, item.time.start + finalAdd, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, function moveItem(time) {\n          time.start += finalAdd;\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function resizeX(ev, row, item, zoom, timePerPixel) {\n      ev.stopPropagation();\n      if (!isResizeable(data)) {\n        return;\n      }\n      const time = state.get('_internal.chart.time');\n      const movement = getMovement(data);\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      const leftMs = time.leftGlobal + left * timePerPixel;\n      const add = leftMs - item.time.end;\n      if (item.time.end + add < item.time.start) {\n        return;\n      }\n      const originalEnd = item.time.end;\n      const finalEndTime = getSnapEnd(data)(item.time.end, add, item) - 1;\n      const finalAdd = finalEndTime - originalEnd;\n      const collision = isCollision(row.id, item.id, item.time.start, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, time => {\n          time.start = getSnapStart(data)(time.start, 0, item);\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function movementY(ev, row, item, zoom, timePerPixel) {\n      ev.stopPropagation();\n      moveGhost(data, ev);\n      const movement = getMovement(data);\n      const top = ev.y - movement.ganttTop;\n      const visibleRows = state.get('_internal.list.visibleRows');\n      const compensation = state.get('config.scroll.compensation');\n      let index = 0;\n      for (const currentRow of visibleRows) {\n        if (currentRow.top + compensation > top) {\n          if (index > 0) {\n            return index - 1;\n          }\n          return 0;\n        }\n        index++;\n      }\n      return index;\n    }\n\n    function documentMouseMove(ev) {\n      const movement = getMovement(data);\n      let item, rowId, row, zoom, timePerPixel;\n      if (movement.moving || movement.resizing) {\n        ev.stopPropagation();\n        item = state.get(`config.chart.items.${data.item.id}`);\n        rowId = state.get(`config.chart.items.${data.item.id}.rowId`);\n        row = state.get(`config.list.rows.${rowId}`);\n        zoom = state.get('config.chart.time.zoom');\n        timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      }\n      const moveable = isMoveable(data);\n      if (movement.moving) {\n        if (moveable === true || moveable === 'x' || (Array.isArray(moveable) && moveable.includes(rowId))) {\n          movementX(ev, row, item, zoom, timePerPixel);\n        }\n        if (!moveable || moveable === 'x') {\n          return;\n        }\n        let visibleRowsIndex = movementY(ev, row, item, zoom, timePerPixel);\n        const visibleRows = state.get('_internal.list.visibleRows');\n        if (typeof visibleRows[visibleRowsIndex] === 'undefined') {\n          if (visibleRowsIndex > 0) {\n            visibleRowsIndex = visibleRows.length - 1;\n          } else if (visibleRowsIndex < 0) {\n            visibleRowsIndex = 0;\n          }\n        }\n        const newRow = visibleRows[visibleRowsIndex];\n        const newRowId = newRow.id;\n        const collision = isCollision(newRowId, item.id, item.time.start, item.time.end);\n        if (newRowId !== item.rowId && !collision) {\n          if (!Array.isArray(moveable) || moveable.includes(newRowId)) {\n            if (!newRow.hasOwnProperty('moveable') || newRow.moveable) {\n              state.update(`config.chart.items.${item.id}.rowId`, newRowId);\n            }\n          }\n        }\n      } else if (movement.resizing && (typeof item.resizeable === 'undefined' || item.resizeable === true)) {\n        resizeX(ev, row, item, zoom, timePerPixel);\n      }\n    }\n\n    function documentMouseUp(ev) {\n      const movement = getMovement(data);\n      if (movement.moving || movement.resizing) {\n        ev.stopPropagation();\n      }\n      movement.moving = false;\n      movement.resizing = false;\n      for (const itemId in movementState) {\n        movementState[itemId].moving = false;\n        movementState[itemId].resizing = false;\n        destroyGhost(itemId);\n      }\n    }\n    element.addEventListener('mousedown', labelMouseDown);\n    resizerEl.addEventListener('mousedown', resizerMouseDown, { capture: true });\n    document.addEventListener('mousemove', documentMouseMove, { capture: true, passive: true });\n    document.addEventListener('mouseup', documentMouseUp, { capture: true, passive: true });\n    return {\n      update(node, changedData) {\n        data = changedData;\n        if (!isResizeable(data)) {\n          resizerEl.style.visibility = 'hidden';\n        } else {\n          resizerEl.style.visibility = 'visible';\n        }\n      },\n      destroy(node, data) {\n        element.removeEventListener('mousedown', labelMouseDown);\n        resizerEl.removeEventListener('mousedown', resizerMouseDown);\n        document.removeEventListener('mousemove', documentMouseMove);\n        document.removeEventListener('mouseup', documentMouseUp);\n        resizerEl.remove();\n      }\n    };\n  }\n\n  return function initialize(vido) {\n    vido.state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n","/**\n * SaveAsImage plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\n// @ts-nocheck\nexport default function SaveAsImage(options = {}) {\n  const defaultOptions = {\n    style: 'font-family: sans-serif;',\n    filename: 'gantt-schedule-timeline-calendar.jpeg'\n  };\n  options = { ...defaultOptions, options };\n  function downloadImage(data, filename) {\n    const a = document.createElement('a');\n    a.href = data;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  function saveAsImage(ev) {\n    const element = ev.target;\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n    const html = unescape(encodeURIComponent(element.outerHTML));\n    let style = '';\n    for (const styleSheet of document.styleSheets) {\n      if (styleSheet.title === 'gstc') {\n        for (const rule of styleSheet.rules) {\n          style += rule.cssText;\n        }\n      }\n    }\n    style = `<style>* {${options.style}} ${style}</style>`;\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\">\n      <foreignObject x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\">\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          ${style}\n          ${html}\n        </div>\n      </foreignObject>\n    </svg>`;\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    const svg64 = 'data:image/svg+xml;base64,' + btoa(svg);\n    const img = new Image();\n    img.onload = function onLoad() {\n      ctx.drawImage(img, 0, 0);\n      const jpeg = canvas.toDataURL('image/jpeg', 1.0);\n      downloadImage(jpeg, options.filename);\n    };\n    img.src = svg64;\n  }\n\n  return function initialize(vido) {\n    vido.state.subscribe('_internal.elements.main', main => {\n      if (main) {\n        main.addEventListener('save-as-image', saveAsImage);\n      }\n    });\n  };\n}\n","/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface RectStyle {\n  [key: string]: any;\n}\n\nexport interface Options {\n  grid?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  horizontal?: boolean;\n  vertical?: boolean;\n  rectStyle?: RectStyle;\n  selecting?: (data, type: string) => void;\n  deselecting?: (data, type: string) => void;\n  selected?: (data, type) => void;\n  deselected?: (data, type) => void;\n}\n\nexport interface Items {\n  [key: string]: string[];\n}\n\ninterface SelectingData {\n  fromX?: number;\n  fromY?: number;\n  toX?: number;\n  toY?: number;\n  startX?: number;\n  startY?: number;\n  startCell?: any;\n  selecting?: boolean;\n  selected?: Items;\n}\n\nexport interface SelectState {\n  selecting?: Items;\n  selected?: Items;\n}\n\nexport default function Selection(options: Options = {}) {\n  let vido, state, api, schedule;\n  const defaultOptions: Options = {\n    grid: false,\n    items: true,\n    rows: false,\n    horizontal: true,\n    vertical: true,\n    rectStyle: {},\n    selecting() {},\n    deselecting() {},\n    selected() {},\n    deselected() {}\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  let chartTimeline, top, left;\n  let selecting: SelectingData = {\n    fromX: -1,\n    fromY: -1,\n    toX: -1,\n    toY: -1,\n    startX: -1,\n    startY: -1,\n    startCell: false,\n    selecting: false\n  };\n  const selectionTypesIdGetters = {\n    'chart-timeline-grid-row': props => props.row.id,\n    'chart-timeline-grid-row-block': props => props.id,\n    'chart-timeline-items-row': props => props.row.id,\n    'chart-timeline-items-row-item': props => props.item.id\n  };\n  const path = 'config.plugin.selection';\n  const rectClassName = 'gantt-schedule-timeline-caledar__plugin-selection-rect';\n  const rect = document.createElement('div');\n  rect.classList.add(rectClassName);\n  rect.style.visibility = 'hidden';\n  rect.style.left = '0px';\n  rect.style.top = '0px';\n  rect.style.width = '0px';\n  rect.style.height = '0px';\n  rect.style.background = 'rgba(0, 119, 192, 0.2)';\n  rect.style.border = '2px dashed rgba(0, 119, 192, 0.75)';\n  rect.style.position = 'absolute';\n  rect.style['user-select'] = 'none';\n  rect.style['pointer-events'] = 'none';\n  for (const styleProp in options.rectStyle) {\n    rect.style[styleProp] = options.rectStyle[styleProp];\n  }\n\n  /**\n   * Selection action\n   * @param {Element} element\n   * @param {object|any} data\n   * @returns {object} with update and destroy\n   */\n  function selectionAction(element, data) {\n    let previousSelect;\n    chartTimeline = state.get('_internal.elements.chart-timeline');\n    if (!chartTimeline.querySelector('.' + rectClassName)) {\n      chartTimeline.insertAdjacentElement('beforeend', rect);\n      const bounding = chartTimeline.getBoundingClientRect();\n      left = bounding.left;\n      top = bounding.top;\n    }\n\n    /**\n     * Clear selection\n     */\n    function clearSelection() {\n      state.update(path, {\n        selecting: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        },\n        selected: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        }\n      });\n      state.update('_internal.chart.grid.rowsWithBlocks', function clearRowsWithBlocks(rowsWithBlocks) {\n        for (const row of rowsWithBlocks) {\n          for (const block of row.blocks) {\n            block.selected = false;\n            block.selecting = false;\n          }\n        }\n        return rowsWithBlocks;\n      });\n    }\n\n    /**\n     * Clone current selection state\n     * @param {object} currentSelect\n     * @returns {object} currentSelect cloned\n     */\n    function cloneSelection(currentSelect) {\n      const result: SelectingData = {};\n      result.selecting = { ...currentSelect.selecting };\n      result.selecting['chart-timeline-grid-rows'] = currentSelect.selecting['chart-timeline-grid-rows'].slice();\n      result.selecting['chart-timeline-grid-row-blocks'] = currentSelect.selecting[\n        'chart-timeline-grid-row-blocks'\n      ].slice();\n      result.selecting['chart-timeline-items-rows'] = currentSelect.selecting['chart-timeline-items-rows'].slice();\n      result.selecting['chart-timeline-items-row-items'] = currentSelect.selecting[\n        'chart-timeline-items-row-items'\n      ].slice();\n      result.selected = { ...currentSelect.selected };\n      result.selected['chart-timeline-grid-rows'] = currentSelect.selected['chart-timeline-grid-rows'].slice();\n      result.selected['chart-timeline-grid-row-blocks'] = currentSelect.selected[\n        'chart-timeline-grid-row-blocks'\n      ].slice();\n      result.selected['chart-timeline-items-rows'] = currentSelect.selected['chart-timeline-items-rows'].slice();\n      result.selected['chart-timeline-items-row-items'] = currentSelect.selected[\n        'chart-timeline-items-row-items'\n      ].slice();\n      return result;\n    }\n\n    /**\n     * Save and swap coordinates if needed\n     * @param {Event} ev\n     */\n    function saveAndSwapIfNeeded(ev) {\n      // @ts-ignore\n      const currentX = ev.x - left;\n      // @ts-ignore\n      const currentY = ev.y - top;\n      if (currentX <= selecting.startX) {\n        selecting.fromX = currentX;\n        selecting.toX = selecting.startX;\n      } else {\n        selecting.fromX = selecting.startX;\n        selecting.toX = currentX;\n      }\n      if (currentY <= selecting.startY) {\n        selecting.fromY = currentY;\n        selecting.toY = selecting.startY;\n      } else {\n        selecting.fromY = selecting.startY;\n        selecting.toY = currentY;\n      }\n    }\n\n    /**\n     * Is rectangle inside other rectangle ?\n     * @param {DOMRect} boundingRect\n     * @param {DOMRect} rectBoundingRect\n     * @returns {boolean}\n     */\n    function isInside(boundingRect, rectBoundingRect) {\n      let horizontal = false;\n      let vertical = false;\n      if (\n        (boundingRect.left >= rectBoundingRect.left && boundingRect.left <= rectBoundingRect.right) ||\n        (boundingRect.right >= rectBoundingRect.left && boundingRect.right <= rectBoundingRect.right) ||\n        (boundingRect.left <= rectBoundingRect.left && boundingRect.right >= rectBoundingRect.right)\n      ) {\n        horizontal = true;\n      }\n      if (\n        (boundingRect.top >= rectBoundingRect.top && boundingRect.top <= rectBoundingRect.bottom) ||\n        (boundingRect.bottom >= rectBoundingRect.top && boundingRect.bottom <= rectBoundingRect.bottom) ||\n        (boundingRect.top <= rectBoundingRect.top && boundingRect.bottom >= rectBoundingRect.bottom)\n      ) {\n        vertical = true;\n      }\n      return horizontal && vertical;\n    }\n\n    /**\n     * Get selecting elements\n     * @param {DOMRect} rectBoundingRect\n     * @param {Element[]} elements\n     * @param {string} type\n     * @returns {string[]}\n     */\n    function getSelecting(rectBoundingRect, elements, type, getId) {\n      const selectingResult = [];\n      const all = elements[type + 's'];\n      const currentSelecting = state.get(`${path}.selecting.${type}s`);\n      for (const element of all) {\n        const boundingRect = element.getBoundingClientRect();\n        if (isInside(boundingRect, rectBoundingRect)) {\n          selectingResult.push(getId(element.vido));\n          if (!currentSelecting.includes(getId(element.vido))) {\n            options.selecting(element.vido, type);\n          }\n        } else {\n          if (currentSelecting.includes(getId(element.vido))) {\n            options.deselecting(element.vido, type);\n          }\n        }\n      }\n      return selectingResult;\n    }\n\n    /**\n     * Select\n     * @param {Event} ev\n     */\n    function select(ev) {\n      if (!selecting.selecting) {\n        return;\n      }\n      saveAndSwapIfNeeded(ev);\n      rect.style.left = selecting.fromX + 'px';\n      rect.style.top = selecting.fromY + 'px';\n      rect.style.visibility = 'visible';\n      rect.style.width = selecting.toX - selecting.fromX + 'px';\n      rect.style.height = selecting.toY - selecting.fromY + 'px';\n      const rectBoundingRect = rect.getBoundingClientRect();\n      const elements = state.get('_internal.elements');\n      const nowSelecting = {};\n      for (const type in selectionTypesIdGetters) {\n        nowSelecting[type + 's'] = getSelecting(rectBoundingRect, elements, type, selectionTypesIdGetters[type]);\n      }\n      state.update(`${path}.selecting`, nowSelecting);\n      state.update('config.chart.items', function updateItems(items) {\n        const now = nowSelecting['chart-timeline-items-row-items'];\n        for (const itemId in items) {\n          const item = items[itemId];\n          if (now.includes(item.id)) {\n            item.selecting = true;\n          } else {\n            item.selecting = false;\n          }\n        }\n        return items;\n      });\n      state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n        const nowBlocks = nowSelecting['chart-timeline-grid-row-blocks'];\n        const nowRows = nowSelecting['chart-timeline-grid-rows'];\n        for (const row of rowsWithBlocks) {\n          if (nowRows.includes(row.id)) {\n            row.selecting = true;\n          } else {\n            row.selecting = false;\n          }\n          for (const block of row.blocks) {\n            if (nowBlocks.includes(block.id)) {\n              block.selecting = true;\n            } else {\n              block.selecting = false;\n            }\n          }\n        }\n        return rowsWithBlocks;\n      });\n    }\n\n    /**\n     * End select\n     * @param {Event} ev\n     */\n    function endSelect(ev) {\n      if (selecting.selecting) {\n        ev.stopPropagation();\n      } else {\n        clearSelection();\n        return;\n      }\n      selecting.selecting = false;\n      rect.style.visibility = 'hidden';\n      const currentSelect = state.get(path);\n      const select: SelectState = {};\n      state.update(path, value => {\n        select.selected = { ...value.selecting };\n        select.selecting = {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        } as Items;\n        return select;\n      });\n      const elements = state.get('_internal.elements');\n      for (const type in selectionTypesIdGetters) {\n        for (const element of elements[type + 's']) {\n          if (currentSelect.selecting[type + 's'].includes(element.vido.id)) {\n            options.deselecting(element.vido, type);\n          }\n        }\n      }\n      state.update('config.chart.items', function updateItems(items) {\n        const now = currentSelect.selecting['chart-timeline-items-row-items'];\n        for (const itemId in items) {\n          const item = items[itemId];\n          if (now.includes(item.id)) {\n            item.selecting = true;\n          } else {\n            item.selecting = false;\n          }\n        }\n        return items;\n      });\n      state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n        for (const row of rowsWithBlocks) {\n          for (const block of row.blocks) {\n            if (currentSelect.selecting['chart-timeline-grid-row-blocks'].includes(block.id)) {\n              if (typeof block.selected === 'undefined' || !block.selected) {\n                options.selected(block, 'chart-timeline-grid-row-block');\n              }\n              block.selected = true;\n            } else {\n              if (previousSelect.selected['chart-timeline-grid-row-blocks'].includes(block.id)) {\n                options.deselected(block, 'chart-timeline-grid-row-block');\n              }\n              block.selected = false;\n            }\n          }\n        }\n        return rowsWithBlocks;\n      });\n    }\n\n    /**\n     * Mouse down event handler\n     * @param {MouseEvent} ev\n     */\n    function mouseDown(ev) {\n      if (ev.button !== 0) {\n        return;\n      }\n      selecting.selecting = true;\n      selecting.fromX = ev.x - left;\n      selecting.fromY = ev.y - top;\n      selecting.startX = selecting.fromX;\n      selecting.startY = selecting.fromY;\n      previousSelect = cloneSelection(state.get(path));\n      clearSelection();\n    }\n\n    /**\n     * Mouse move event handler\n     * @param {MouseEvent} ev\n     */\n    function mouseMove(ev) {\n      select(ev);\n    }\n\n    /**\n     * Mouse up event handler\n     * @param {MouseEvent} ev\n     */\n    function mouseUp(ev) {\n      endSelect(ev);\n    }\n\n    element.addEventListener('mousedown', mouseDown);\n    document.addEventListener('mousemove', schedule(mouseMove));\n    document.body.addEventListener('mouseup', mouseUp);\n    return {\n      update() {},\n      destroy() {\n        document.body.removeEventListener('mouseup', mouseUp);\n        document.removeEventListener('mousemove', mouseMove);\n        element.removeEventListener('mousedown', mouseDown);\n      }\n    };\n  }\n\n  /**\n   * Grid row block action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  function gridBlockAction(element, data) {\n    const classNameSelecting = api.getClass('chart-timeline-grid-row-block') + '--selecting';\n    const classNameSelected = api.getClass('chart-timeline-grid-row-block') + '--selected';\n    if (data.selecting) {\n      element.classList.add(classNameSelecting);\n    } else {\n      element.classList.remove(classNameSelecting);\n    }\n    if (data.selected) {\n      element.classList.add(classNameSelected);\n    } else {\n      element.classList.remove(classNameSelected);\n    }\n\n    return {\n      update(element, data) {\n        if (data.selecting) {\n          element.classList.add(classNameSelecting);\n        } else {\n          element.classList.remove(classNameSelecting);\n        }\n        if (data.selected) {\n          element.classList.add(classNameSelected);\n        } else {\n          element.classList.remove(classNameSelected);\n        }\n      },\n      destroy(element, changedData) {\n        element.classList.remove(classNameSelecting);\n        element.classList.remove(classNameSelected);\n      }\n    };\n  }\n\n  /**\n   * Item action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  function itemAction(element, data) {\n    const classNameSelecting = api.getClass('chart-timeline-items-row-item') + '--selecting';\n    const classNameSelected = api.getClass('chart-timeline-items-row-item') + '--selected';\n    if (data.item.selecting) {\n      if (!element.classList.contains(classNameSelecting)) element.classList.add(classNameSelecting);\n    } else if (element.classList.contains(classNameSelecting)) {\n      element.classList.remove(classNameSelecting);\n    }\n    if (data.item.selected) {\n      if (!element.classList.contains(classNameSelected)) element.classList.add(classNameSelected);\n    } else if (element.classList.contains(classNameSelected)) {\n      element.classList.remove(classNameSelected);\n    }\n    return {\n      update(element, data) {\n        if (data.item.selecting) {\n          if (!element.classList.contains(classNameSelecting)) element.classList.add(classNameSelecting);\n        } else if (element.classList.contains(classNameSelecting)) {\n          element.classList.remove(classNameSelecting);\n        }\n        if (data.item.selected) {\n          if (!element.classList.contains(classNameSelected)) element.classList.add(classNameSelected);\n        } else if (element.classList.contains(classNameSelected)) {\n          element.classList.remove(classNameSelected);\n        }\n      },\n      destroy(element, changedData) {\n        element.classList.remove(classNameSelecting);\n        element.classList.remove(classNameSelected);\n      }\n    };\n  }\n\n  /**\n   * On block create handler\n   * @param {object} block\n   * @returns {object} block\n   */\n  function onBlockCreate(block) {\n    const select = state.get('config.plugin.selection');\n    if (select.selected['chart-timeline-grid-row-blocks'].find(id => id === block.id)) {\n      block.selected = true;\n    } else {\n      block.selected = false;\n    }\n    return block;\n  }\n\n  return function initialize(mainVido) {\n    vido = mainVido;\n    state = vido.state;\n    api = vido.api;\n    schedule = vido.schedule;\n    if (typeof state.get(path) === 'undefined') {\n      state.update(path, {\n        selecting: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        },\n        selected: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        }\n      });\n    }\n    state.update('config.chart.items', items => {\n      for (const itemId in items) {\n        const item = items[itemId];\n        if (typeof item.selecting === 'undefined') {\n          item.selecting = false;\n        }\n        if (typeof item.selected === 'undefined') {\n          item.selected = false;\n        }\n      }\n      return items;\n    });\n    state.update('config.actions.chart-timeline', actions => {\n      actions.push(selectionAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-grid-row-block', actions => {\n      actions.push(gridBlockAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(itemAction);\n      return actions;\n    });\n    state.update('config.chart.grid.block.onCreate', onCreate => {\n      onCreate.push(onBlockCreate);\n      return onCreate;\n    });\n  };\n}\n"],"names":["ItemHold","options","defaultOptions","time","movementThreshold","[object Object]","element","data","holding","mouse","x","y","onMouseUp","itemId","action","elementMouseDown","event","onMouseDown","item","id","setTimeout","exec","xMovement","Math","sign","yMovement","onMouseMove","addEventListener","document","mouseUp","changedData","removeEventListener","initialize","vido","state","update","actions","push","ItemMovement","moveable","resizeable","resizerContent","collisionDetection","outOfBorders","snapStart","timeStart","startDiff","snapEnd","timeEnd","endDiff","ghostNode","movementState","node","api","querySelector","isResizeable","hasOwnProperty","row","getMovement","moving","resizing","moveGhost","ev","movement","left","ganttLeft","itemLeftCompensation","compensation","get","ghost","style","top","ganttTop","itemTop","destroyGhost","removeChild","opacity","getSnapStart","getSnapEnd","resizerHTML","getClass","insertAdjacentHTML","resizerEl","labelMouseDown","stopPropagation","button","chartLeftTime","timePerPixel","ganttRect","getBoundingClientRect","itemX","round","start","createGhost","cloneNode","getComputedStyle","position","offsetTop","width","height","clientHeight","appendChild","resizerMouseDown","end","isCollision","rowId","from","to","diff","date","rowItem","_internal","items","documentMouseMove","zoom","isMoveable","Array","isArray","includes","movementX","add","originalStart","finalAdd","collision","moveItem","visibleRowsIndex","movementY","visibleRows","index","currentRow","length","newRow","newRowId","resizeX","leftGlobal","originalEnd","documentMouseUp","visibility","capture","passive","remove","SaveAsImage","saveAsImage","target","clientWidth","html","unescape","encodeURIComponent","outerHTML","styleSheet","styleSheets","title","rule","rules","cssText","svg","canvas","createElement","ctx","getContext","fillStyle","fillRect","svg64","btoa","img","Image","onload","onLoad","drawImage","downloadImage","filename","a","href","download","body","click","toDataURL","src","subscribe","main","Selection","schedule","grid","rows","horizontal","vertical","rectStyle","chartTimeline","Object","selecting","fromX","fromY","toX","toY","startX","startY","startCell","selectionTypesIdGetters","chart-timeline-grid-row","props","chart-timeline-grid-row-block","chart-timeline-items-row","chart-timeline-items-row-item","path","rectClassName","rect","classList","background","border","styleProp","selectionAction","previousSelect","insertAdjacentElement","bounding","clearSelection","chart-timeline-grid-rows","chart-timeline-grid-row-blocks","chart-timeline-items-rows","chart-timeline-items-row-items","selected","clearRowsWithBlocks","rowsWithBlocks","block","blocks","isInside","boundingRect","rectBoundingRect","right","bottom","getSelecting","elements","type","getId","selectingResult","all","currentSelecting","deselecting","select","saveAndSwapIfNeeded","currentX","currentY","nowSelecting","updateItems","now","updateRowsWithBlocks","nowBlocks","nowRows","mouseDown","cloneSelection","currentSelect","result","slice","mouseMove","endSelect","value","deselected","gridBlockAction","classNameSelecting","classNameSelected","itemAction","contains","onBlockCreate","find","mainVido","onCreate"],"mappings":"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"}