{"version":3,"file":"plugins.min.js","sources":["../src/plugins/plugins.ts","../src/plugins/ItemHold.plugin.ts","../src/plugins/ItemMovement.plugin.ts","../src/plugins/SaveAsImage.plugin.ts","../src/plugins/Selection.plugin.ts","../src/plugins/CalendarScroll.plugin.ts"],"sourcesContent":["import ItemHold from './ItemHold.plugin';\nimport ItemMovement from './ItemMovement.plugin';\nimport SaveAsImage from './SaveAsImage.plugin';\nimport Selection from './Selection.plugin';\nimport CalendarScroll from './CalendarScroll.plugin';\n\nexport default { ItemHold, ItemMovement, SaveAsImage, Selection, CalendarScroll };\n","/**\n * ItemHold plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface Options {\n  time?: number;\n  movementThreshold?: number;\n  action?: (element: HTMLElement, data: any) => void;\n}\n\nexport default function ItemHold(options: Options = {}) {\n  let api;\n  const defaultOptions = {\n    time: 1000,\n    movementThreshold: 2,\n    action(element, data) {}\n  };\n  options = { ...defaultOptions, ...options };\n\n  const holding = {};\n  const pointer = { x: 0, y: 0 };\n\n  function onPointerDown(item, element, event) {\n    if (typeof holding[item.id] === 'undefined') {\n      const normalized = api.normalizePointerEvent(event);\n      holding[item.id] = { x: normalized.x, y: normalized.y };\n      event.stopPropagation();\n      event.preventDefault();\n      setTimeout(() => {\n        if (typeof holding[item.id] !== 'undefined') {\n          let exec = true;\n          const xMovement = Math.abs(holding[item.id].x - pointer.x);\n          const yMovement = Math.abs(holding[item.id].y - pointer.y);\n          if (xMovement > options.movementThreshold) {\n            exec = false;\n          }\n          if (yMovement > options.movementThreshold) {\n            exec = false;\n          }\n          delete holding[item.id];\n          if (exec) {\n            options.action(element, item);\n          }\n        }\n      }, options.time);\n    }\n  }\n\n  function onPointerUp(itemId) {\n    if (typeof holding[itemId] !== 'undefined') {\n      delete holding[itemId];\n    }\n  }\n\n  function action(element, data) {\n    function elementPointerDown(event) {\n      onPointerDown(data.item, element, event);\n    }\n    element.addEventListener('mousedown', elementPointerDown);\n    element.addEventListener('touchstart', elementPointerDown);\n    function pointerUp() {\n      onPointerUp(data.item.id);\n    }\n\n    document.addEventListener('mouseup', pointerUp);\n    document.addEventListener('touchend', pointerUp);\n    function onPointerMove(event) {\n      const normalized = api.normalizePointerEvent(event);\n      pointer.x = normalized.x;\n      pointer.y = normalized.y;\n    }\n\n    document.addEventListener('mousemove', onPointerMove);\n    document.addEventListener('touchmove', onPointerMove);\n    return {\n      update(element, changedData) {\n        data = changedData;\n      },\n      destroy(element, data) {\n        document.removeEventListener('mouseup', onPointerUp);\n        document.removeEventListener('mousemove', onPointerMove);\n        element.removeEventListener('mousedown', elementPointerDown);\n        document.removeEventListener('touchend', onPointerUp);\n        document.removeEventListener('touchmove', onPointerMove);\n        element.removeEventListener('touchstart', elementPointerDown);\n      }\n    };\n  }\n\n  return function initialize(vido) {\n    api = vido.api;\n    vido.state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n","/**\n * ItemMovement plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface Options {\n  moveable?: boolean | string;\n  resizeable?: boolean | string;\n  resizerContent?: string;\n  collisionDetection?: boolean;\n  outOfBorders?: boolean;\n  snapStart?: (timeStart: number, startDiff: number, item: object) => number;\n  snapEnd?: (timeEnd: number, endDiff: number, item: object) => number;\n  ghostNode?: boolean;\n}\n\nexport default function ItemMovement(options: Options = {}) {\n  const defaultOptions = {\n    moveable: true,\n    resizeable: true,\n    resizerContent: '',\n    collisionDetection: true,\n    outOfBorders: false,\n    snapStart(timeStart, startDiff) {\n      return timeStart + startDiff;\n    },\n    snapEnd(timeEnd, endDiff) {\n      return timeEnd + endDiff;\n    },\n    ghostNode: true\n  };\n  options = { ...defaultOptions, ...options };\n\n  const movementState = {};\n\n  /**\n   * Add moving functionality to items as action\n   *\n   * @param {HTMLElement} node DOM Node\n   * @param {Object} data\n   */\n  function action(element: HTMLElement, data) {\n    if (!options.moveable && !options.resizeable) {\n      return;\n    }\n    let state;\n    let api;\n\n    function isMoveable(data) {\n      let moveable = options.moveable;\n      if (data.item.hasOwnProperty('moveable') && moveable) {\n        moveable = data.item.moveable;\n      }\n      if (data.row.hasOwnProperty('moveable') && moveable) {\n        moveable = data.row.moveable;\n      }\n      return moveable;\n    }\n\n    function isResizeable(data) {\n      let resizeable = options.resizeable && (!data.item.hasOwnProperty('resizeable') || data.item.resizeable === true);\n      if (data.row.hasOwnProperty('resizeable') && resizeable) {\n        resizeable = data.row.resizeable;\n      }\n      return resizeable;\n    }\n\n    function getMovement(data) {\n      const itemId = data.item.id;\n      if (typeof movementState[itemId] === 'undefined') {\n        movementState[itemId] = { moving: false, resizing: false };\n      }\n      return movementState[itemId];\n    }\n\n    function createGhost(data, ev, ganttLeft, ganttTop) {\n      const movement = getMovement(data);\n      if (!options.ghostNode || typeof movement.ghost !== 'undefined') {\n        return;\n      }\n      const ghost = element.cloneNode(true) as HTMLElement;\n      const style = getComputedStyle(element);\n      const compensation = state.get('config.scroll.compensation');\n      ghost.style.position = 'absolute';\n      ghost.style.left = ev.x - ganttLeft - movement.itemLeftCompensation + 'px';\n      const itemTop = ev.y - ganttTop - element.offsetTop - compensation + parseInt(style['margin-top']);\n      movement.itemTop = itemTop;\n      ghost.style.top = ev.y - ganttTop - itemTop + 'px';\n      ghost.style.width = style.width;\n      ghost.style['box-shadow'] = '10px 10px 6px #00000020';\n      const height = element.clientHeight + 'px';\n      ghost.style.height = height;\n      ghost.style['line-height'] = element.clientHeight - 18 + 'px';\n      ghost.style.opacity = '0.6';\n      ghost.style.transform = 'scale(1.05, 1.05)';\n      state.get('_internal.elements.chart-timeline').appendChild(ghost);\n      movement.ghost = ghost;\n      return ghost;\n    }\n\n    function moveGhost(data, ev) {\n      if (options.ghostNode) {\n        const movement = getMovement(data);\n        const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n        movement.ghost.style.left = left + 'px';\n        movement.ghost.style.top =\n          ev.y - movement.ganttTop - movement.itemTop + parseInt(getComputedStyle(element)['margin-top']) + 'px';\n      }\n    }\n\n    function destroyGhost(itemId) {\n      if (!options.ghostNode) {\n        return;\n      }\n      if (typeof movementState[itemId] !== 'undefined' && typeof movementState[itemId].ghost !== 'undefined') {\n        state.get('_internal.elements.chart-timeline').removeChild(movementState[itemId].ghost);\n        delete movementState[itemId].ghost;\n      }\n    }\n\n    function getSnapStart(data) {\n      let snapStart = options.snapStart;\n      if (typeof data.item.snapStart === 'function') {\n        snapStart = data.item.snapStart;\n      }\n      return snapStart;\n    }\n\n    function getSnapEnd(data) {\n      let snapEnd = options.snapEnd;\n      if (typeof data.item.snapEnd === 'function') {\n        snapEnd = data.item.snapEnd;\n      }\n      return snapEnd;\n    }\n\n    state = data.state;\n    api = data.api;\n\n    const resizerHTML = `<div class=\"${api.getClass('chart-timeline-items-row-item-resizer')}\">${\n      options.resizerContent\n    }</div>`;\n    // @ts-ignore\n    element.insertAdjacentHTML('beforeend', resizerHTML);\n    const resizerEl = element.querySelector(\n      '.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-resizer'\n    ) as HTMLElement;\n    if (!isResizeable(data)) {\n      resizerEl.style.visibility = 'hidden';\n    } else {\n      resizerEl.style.visibility = 'visible';\n    }\n\n    function labelMouseDown(ev) {\n      ev.stopPropagation();\n      if (ev.button !== 0) {\n        return;\n      }\n      const movement = getMovement(data);\n      movement.moving = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = Math.round((item.time.start - chartLeftTime) / timePerPixel);\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n      createGhost(data, ev, ganttRect.left, ganttRect.top);\n    }\n\n    function resizerMouseDown(ev) {\n      ev.stopPropagation();\n      if (ev.button !== 0) {\n        return;\n      }\n      const movement = getMovement(data);\n      movement.resizing = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = (item.time.end - chartLeftTime) / timePerPixel;\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n    }\n\n    function isCollision(rowId, itemId, start, end) {\n      if (!options.collisionDetection) {\n        return false;\n      }\n      const time = state.get('_internal.chart.time');\n      if (options.outOfBorders && (start < time.from || end > time.to)) {\n        return true;\n      }\n      let diff = api.time.date(end).diff(start, 'milliseconds');\n      if (Math.sign(diff) === -1) {\n        diff = -diff;\n      }\n      if (diff <= 1) {\n        return true;\n      }\n      const row = state.get('config.list.rows.' + rowId);\n      for (const rowItem of row._internal.items) {\n        if (rowItem.id !== itemId) {\n          if (start >= rowItem.time.start && start <= rowItem.time.end) {\n            return true;\n          }\n          if (end >= rowItem.time.start && end <= rowItem.time.end) {\n            return true;\n          }\n          if (start <= rowItem.time.start && end >= rowItem.time.end) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    function movementX(ev, row, item, zoom, timePerPixel) {\n      const movement = getMovement(data);\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      moveGhost(data, ev);\n      const leftMs = state.get('_internal.chart.time.leftGlobal') + left * timePerPixel;\n      const add = leftMs - item.time.start;\n      const originalStart = item.time.start;\n      const finalStartTime = getSnapStart(data)(item.time.start, add, item);\n      const finalAdd = finalStartTime - originalStart;\n      const collision = isCollision(row.id, item.id, item.time.start + finalAdd, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, function moveItem(time) {\n          time.start += finalAdd;\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function resizeX(ev, row, item, zoom, timePerPixel) {\n      if (!isResizeable(data)) {\n        return;\n      }\n      const time = state.get('_internal.chart.time');\n      const movement = getMovement(data);\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      const leftMs = time.leftGlobal + left * timePerPixel;\n      const add = leftMs - item.time.end;\n      if (item.time.end + add < item.time.start) {\n        return;\n      }\n      const originalEnd = item.time.end;\n      const finalEndTime = getSnapEnd(data)(item.time.end, add, item) - 1;\n      const finalAdd = finalEndTime - originalEnd;\n      const collision = isCollision(row.id, item.id, item.time.start, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, time => {\n          time.start = getSnapStart(data)(time.start, 0, item);\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function movementY(ev, row, item, zoom, timePerPixel) {\n      moveGhost(data, ev);\n      const movement = getMovement(data);\n      const top = ev.y - movement.ganttTop;\n      const visibleRows = state.get('_internal.list.visibleRows');\n      const compensation = state.get('config.scroll.compensation');\n      let index = 0;\n      for (const currentRow of visibleRows) {\n        if (currentRow.top + compensation > top) {\n          if (index > 0) {\n            return index - 1;\n          }\n          return 0;\n        }\n        index++;\n      }\n      return index;\n    }\n\n    function documentMouseMove(ev) {\n      const movement = getMovement(data);\n      let item, rowId, row, zoom, timePerPixel;\n      if (movement.moving || movement.resizing) {\n        item = state.get(`config.chart.items.${data.item.id}`);\n        rowId = state.get(`config.chart.items.${data.item.id}.rowId`);\n        row = state.get(`config.list.rows.${rowId}`);\n        zoom = state.get('config.chart.time.zoom');\n        timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      }\n      const moveable = isMoveable(data);\n      if (movement.moving) {\n        if (moveable === true || moveable === 'x' || (Array.isArray(moveable) && moveable.includes(rowId))) {\n          movementX(ev, row, item, zoom, timePerPixel);\n        }\n        if (!moveable || moveable === 'x') {\n          return;\n        }\n        let visibleRowsIndex = movementY(ev, row, item, zoom, timePerPixel);\n        const visibleRows = state.get('_internal.list.visibleRows');\n        if (typeof visibleRows[visibleRowsIndex] === 'undefined') {\n          if (visibleRowsIndex > 0) {\n            visibleRowsIndex = visibleRows.length - 1;\n          } else if (visibleRowsIndex < 0) {\n            visibleRowsIndex = 0;\n          }\n        }\n        const newRow = visibleRows[visibleRowsIndex];\n        const newRowId = newRow.id;\n        const collision = isCollision(newRowId, item.id, item.time.start, item.time.end);\n        if (newRowId !== item.rowId && !collision) {\n          if (!Array.isArray(moveable) || moveable.includes(newRowId)) {\n            if (!newRow.hasOwnProperty('moveable') || newRow.moveable) {\n              state.update(`config.chart.items.${item.id}.rowId`, newRowId);\n            }\n          }\n        }\n      } else if (movement.resizing && (typeof item.resizeable === 'undefined' || item.resizeable === true)) {\n        resizeX(ev, row, item, zoom, timePerPixel);\n      }\n    }\n\n    function documentMouseUp(ev) {\n      const movement = getMovement(data);\n      if (movement.moving || movement.resizing) {\n        ev.stopPropagation();\n      }\n      movement.moving = false;\n      movement.resizing = false;\n      for (const itemId in movementState) {\n        movementState[itemId].moving = false;\n        movementState[itemId].resizing = false;\n        destroyGhost(itemId);\n      }\n    }\n    element.addEventListener('mousedown', labelMouseDown);\n    resizerEl.addEventListener('mousedown', resizerMouseDown, { capture: true });\n    document.addEventListener('mousemove', documentMouseMove, { capture: true, passive: true });\n    document.addEventListener('mouseup', documentMouseUp, { capture: true, passive: true });\n\n    return {\n      update(node, changedData) {\n        if (!isResizeable(data) && resizerEl.style.visibility === 'visible') {\n          resizerEl.style.visibility = 'hidden';\n        } else if (isResizeable(data) && resizerEl.style.visibility === 'hidden') {\n          resizerEl.style.visibility = 'visible';\n        }\n      },\n      destroy(node, data) {\n        element.removeEventListener('mousedown', labelMouseDown);\n        resizerEl.removeEventListener('mousedown', resizerMouseDown);\n        document.removeEventListener('mousemove', documentMouseMove);\n        document.removeEventListener('mouseup', documentMouseUp);\n        resizerEl.remove();\n      }\n    };\n  }\n\n  return function initialize(vido) {\n    vido.state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n","/**\n * SaveAsImage plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\n// @ts-nocheck\nexport default function SaveAsImage(options = {}) {\n  const defaultOptions = {\n    style: 'font-family: sans-serif;',\n    filename: 'gantt-schedule-timeline-calendar.jpeg'\n  };\n  options = { ...defaultOptions, options };\n  function downloadImage(data, filename) {\n    const a = document.createElement('a');\n    a.href = data;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  function saveAsImage(ev) {\n    const element = ev.target;\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n    const html = unescape(encodeURIComponent(element.outerHTML));\n    let style = '';\n    for (const styleSheet of document.styleSheets) {\n      if (styleSheet.title === 'gstc') {\n        for (const rule of styleSheet.rules) {\n          style += rule.cssText;\n        }\n      }\n    }\n    style = `<style>* {${options.style}} ${style}</style>`;\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\">\n      <foreignObject x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\">\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          ${style}\n          ${html}\n        </div>\n      </foreignObject>\n    </svg>`;\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n    const svg64 = 'data:image/svg+xml;base64,' + btoa(svg);\n    const img = new Image();\n    img.onload = function onLoad() {\n      ctx.drawImage(img, 0, 0);\n      const jpeg = canvas.toDataURL('image/jpeg', 1.0);\n      downloadImage(jpeg, options.filename);\n    };\n    img.src = svg64;\n  }\n\n  return function initialize(vido) {\n    vido.state.subscribe('_internal.elements.main', main => {\n      if (main) {\n        main.addEventListener('save-as-image', saveAsImage);\n      }\n    });\n  };\n}\n","/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface RectStyle {\n  [key: string]: any;\n}\n\nexport interface Options {\n  grid?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  horizontal?: boolean;\n  vertical?: boolean;\n  rectStyle?: RectStyle;\n  selecting?: (data, type: string) => void;\n  deselecting?: (data, type: string) => void;\n  selected?: (data, type) => void;\n  deselected?: (data, type) => void;\n  canSelect?: (type, state, all) => any[];\n  canDeselect?: (type, state, all) => any[];\n  getApi?: (api: any) => void;\n}\n\nexport interface Items {\n  [key: string]: string[];\n}\n\ninterface SelectingData {\n  fromX?: number;\n  fromY?: number;\n  toX?: number;\n  toY?: number;\n  startX?: number;\n  startY?: number;\n  startCell?: any;\n  selecting?: boolean;\n  selected?: Items;\n}\n\nexport interface SelectState {\n  selecting?: Items;\n  selected?: Items;\n}\n\nexport default function Selection(options: Options = {}) {\n  let vido, state, api, schedule;\n  const path = 'config.plugin.selection';\n  const rectClassName = 'gantt-schedule-timeline-caledar__plugin-selection-rect';\n  const rect = document.createElement('div');\n  rect.classList.add(rectClassName);\n  rect.style.visibility = 'hidden';\n  rect.style.left = '0px';\n  rect.style.top = '0px';\n  rect.style.width = '0px';\n  rect.style.height = '0px';\n  rect.style.background = 'rgba(0, 119, 192, 0.2)';\n  rect.style.border = '2px dashed rgba(0, 119, 192, 0.75)';\n  rect.style.position = 'absolute';\n  rect.style['user-select'] = 'none';\n  rect.style['pointer-events'] = 'none';\n\n  const defaultOptions: Options = {\n    grid: false,\n    items: true,\n    rows: false,\n    horizontal: true,\n    vertical: true,\n    rectStyle: {},\n    selecting() {},\n    deselecting() {},\n    selected() {},\n    deselected() {},\n    canSelect(type, currently, all) {\n      return currently;\n    },\n    canDeselect(type, currently, all) {\n      return [];\n    },\n    getApi() {}\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  for (const styleProp in options.rectStyle) {\n    rect.style[styleProp] = options.rectStyle[styleProp];\n  }\n  let selecting: SelectingData = {\n    fromX: -1,\n    fromY: -1,\n    toX: -1,\n    toY: -1,\n    startX: -1,\n    startY: -1,\n    startCell: false,\n    selecting: false\n  };\n  const selectionTypesIdGetters = {\n    'chart-timeline-grid-row': props => props.row.id,\n    'chart-timeline-grid-row-block': props => props.id,\n    'chart-timeline-items-row': props => props.row.id,\n    'chart-timeline-items-row-item': props => props.item.id\n  };\n\n  /**\n   * Selection action class\n   */\n  class SelectionAction {\n    chartTimeline: Element;\n    mouseDown: (ev: MouseEvent) => void;\n    mouseMove: (ev: MouseEvent) => void;\n    mouseUp: (ev: MouseEvent) => void;\n    left: number;\n    top: number;\n\n    /**\n     * Selection action constructor\n     * @param {Element} element\n     * @param {object|any} data\n     */\n    constructor(element: Element, data: any) {\n      let previousSelect,\n        api = {} as any;\n      this.chartTimeline = state.get('_internal.elements.chart-timeline');\n      if (!this.chartTimeline.querySelector('.' + rectClassName)) {\n        this.chartTimeline.insertAdjacentElement('beforeend', rect);\n        const bounding = this.chartTimeline.getBoundingClientRect();\n        this.left = bounding.left;\n        this.top = bounding.top;\n      }\n\n      /**\n       * Clear selection\n       * @param {boolean} force\n       */\n      function clearSelection(force: boolean = false) {\n        let selectingState;\n        state.update(path, currently => {\n          selectingState = {\n            selecting: {\n              'chart-timeline-grid-rows': [],\n              'chart-timeline-grid-row-blocks': [],\n              'chart-timeline-items-rows': [],\n              'chart-timeline-items-row-items': []\n            },\n            selected: {\n              'chart-timeline-grid-rows': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-grid-rows',\n                    currently.selected['chart-timeline-grid-rows'],\n                    currently\n                  ),\n              'chart-timeline-grid-row-blocks': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-grid-row-blocks',\n                    currently.selected['chart-timeline-grid-row-blocks'],\n                    currently\n                  ),\n              'chart-timeline-items-rows': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-items-rows',\n                    currently.selected['chart-timeline-items-rows'],\n                    currently\n                  ),\n              'chart-timeline-items-row-items': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-items-rows',\n                    currently.selected['chart-timeline-items-rows'],\n                    currently\n                  )\n            }\n          };\n          return selectingState;\n        });\n        state.update('_internal.chart.grid.rowsWithBlocks', function clearRowsWithBlocks(rowsWithBlocks) {\n          for (const row of rowsWithBlocks) {\n            for (const block of row.blocks) {\n              block.selected = selectingState.selected['chart-timeline-grid-row-blocks'].includes(block.id);\n              block.selecting = false;\n            }\n          }\n          return rowsWithBlocks;\n        });\n      }\n      api.clearSelection = clearSelection;\n\n      /**\n       * Clone current selection state\n       * @param {object} currentSelect\n       * @returns {object} currentSelect cloned\n       */\n      function cloneSelection(currentSelect) {\n        const result: SelectingData = {};\n        result.selecting = { ...currentSelect.selecting };\n        result.selecting['chart-timeline-grid-rows'] = currentSelect.selecting['chart-timeline-grid-rows'].slice();\n        result.selecting['chart-timeline-grid-row-blocks'] = currentSelect.selecting[\n          'chart-timeline-grid-row-blocks'\n        ].slice();\n        result.selecting['chart-timeline-items-rows'] = currentSelect.selecting['chart-timeline-items-rows'].slice();\n        result.selecting['chart-timeline-items-row-items'] = currentSelect.selecting[\n          'chart-timeline-items-row-items'\n        ].slice();\n        result.selected = { ...currentSelect.selected };\n        result.selected['chart-timeline-grid-rows'] = currentSelect.selected['chart-timeline-grid-rows'].slice();\n        result.selected['chart-timeline-grid-row-blocks'] = currentSelect.selected[\n          'chart-timeline-grid-row-blocks'\n        ].slice();\n        result.selected['chart-timeline-items-rows'] = currentSelect.selected['chart-timeline-items-rows'].slice();\n        result.selected['chart-timeline-items-row-items'] = currentSelect.selected[\n          'chart-timeline-items-row-items'\n        ].slice();\n        return result;\n      }\n\n      /**\n       * Save and swap coordinates if needed\n       * @param {MouseEvent} ev\n       */\n      const saveAndSwapIfNeeded = (ev: MouseEvent) => {\n        const currentX = ev.x - this.left;\n        const currentY = ev.y - this.top;\n        if (currentX <= selecting.startX) {\n          selecting.fromX = currentX;\n          selecting.toX = selecting.startX;\n        } else {\n          selecting.fromX = selecting.startX;\n          selecting.toX = currentX;\n        }\n        if (currentY <= selecting.startY) {\n          selecting.fromY = currentY;\n          selecting.toY = selecting.startY;\n        } else {\n          selecting.fromY = selecting.startY;\n          selecting.toY = currentY;\n        }\n      };\n\n      /**\n       * Is rectangle inside other rectangle ?\n       * @param {DOMRect} boundingRect\n       * @param {DOMRect} rectBoundingRect\n       * @returns {boolean}\n       */\n      const isInside = (boundingRect: DOMRect, rectBoundingRect: DOMRect) => {\n        let horizontal = false;\n        let vertical = false;\n        if (\n          (boundingRect.left > rectBoundingRect.left && boundingRect.left < rectBoundingRect.right) ||\n          (boundingRect.right > rectBoundingRect.left && boundingRect.right < rectBoundingRect.right) ||\n          (boundingRect.left <= rectBoundingRect.left && boundingRect.right >= rectBoundingRect.right)\n        ) {\n          horizontal = true;\n        }\n        if (\n          (boundingRect.top > rectBoundingRect.top && boundingRect.top < rectBoundingRect.bottom) ||\n          (boundingRect.bottom > rectBoundingRect.top && boundingRect.bottom < rectBoundingRect.bottom) ||\n          (boundingRect.top <= rectBoundingRect.top && boundingRect.bottom >= rectBoundingRect.bottom)\n        ) {\n          vertical = true;\n        }\n        return horizontal && vertical;\n      };\n\n      /**\n       * Get selecting elements\n       * @param {DOMRect} rectBoundingRect\n       * @param {Element[]} elements\n       * @param {string} type\n       * @returns {string[]}\n       */\n      const getSelecting = (rectBoundingRect: DOMRect, elements: Element[], type: string, getId: (any) => string) => {\n        const selectingResult = [];\n        const currentlySelectingData = [];\n        const all = elements[type + 's'];\n        const currentAll = state.get(path);\n        const currentSelecting = currentAll.selecting[type + 's'];\n        for (const element of all) {\n          const boundingRect = element.getBoundingClientRect();\n          if (isInside(boundingRect, rectBoundingRect)) {\n            currentlySelectingData.push(element.vido);\n            const canSelect = options.canSelect(type, currentlySelectingData, currentAll);\n            if (canSelect.includes(element.vido)) {\n              if (!currentSelecting.includes(getId(element.vido))) {\n                options.selecting(element.vido, type);\n              }\n              selectingResult.push(getId(element.vido));\n            } else {\n              currentlySelectingData.unshift();\n            }\n          } else {\n            if (currentSelecting.includes(getId(element.vido))) {\n              options.deselecting(element.vido, type);\n            }\n          }\n        }\n        return selectingResult;\n      };\n\n      /**\n       * Select\n       * @param {Event} ev\n       */\n      const select = ev => {\n        if (!selecting.selecting) {\n          return;\n        }\n        clearSelection();\n        saveAndSwapIfNeeded(ev);\n        rect.style.left = selecting.fromX + 'px';\n        rect.style.top = selecting.fromY + 'px';\n        rect.style.visibility = 'visible';\n        rect.style.width = selecting.toX - selecting.fromX + 'px';\n        rect.style.height = selecting.toY - selecting.fromY + 'px';\n        const rectBoundingRect = rect.getBoundingClientRect();\n        const elements = state.get('_internal.elements');\n        const nowSelecting = {};\n        for (const type in selectionTypesIdGetters) {\n          nowSelecting[type + 's'] = getSelecting(rectBoundingRect, elements, type, selectionTypesIdGetters[type]);\n        }\n\n        state.update(`${path}.selecting`, nowSelecting);\n\n        state.update(\n          'config.chart.items',\n          function updateItems(items) {\n            const now = nowSelecting['chart-timeline-items-row-items'];\n            for (const itemId in items) {\n              const item = items[itemId];\n              if (now.includes(item.id)) {\n                item.selecting = true;\n              } else {\n                item.selecting = false;\n              }\n            }\n            return items;\n          },\n          { only: ['selecting'] }\n        );\n\n        state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n          const nowBlocks = nowSelecting['chart-timeline-grid-row-blocks'];\n          const nowRows = nowSelecting['chart-timeline-grid-rows'];\n          for (const row of rowsWithBlocks) {\n            if (nowRows.includes(row.id)) {\n              row.selecting = true;\n            } else {\n              row.selecting = false;\n            }\n            for (const block of row.blocks) {\n              if (nowBlocks.includes(block.id)) {\n                block.selecting = true;\n              } else {\n                block.selecting = false;\n              }\n            }\n          }\n          return rowsWithBlocks;\n        });\n      };\n\n      /**\n       * End select\n       * @param {Event} ev\n       */\n      const endSelect = ev => {\n        if (selecting.selecting) {\n          ev.stopPropagation();\n          if (selecting.fromX === ev.x - this.left && selecting.fromY === ev.y - this.top) {\n            selecting.selecting = false;\n            rect.style.visibility = 'hidden';\n            return;\n          }\n        } else {\n          clearSelection();\n          return;\n        }\n\n        selecting.selecting = false;\n        rect.style.visibility = 'hidden';\n        const currentSelect = state.get(path);\n        const select: SelectState = {};\n        state.update(path, value => {\n          select.selected = { ...value.selecting };\n          select.selecting = {\n            'chart-timeline-grid-rows': [],\n            'chart-timeline-grid-row-blocks': [],\n            'chart-timeline-items-rows': [],\n            'chart-timeline-items-row-items': []\n          } as Items;\n          return select;\n        });\n        const elements = state.get('_internal.elements');\n        for (const type in selectionTypesIdGetters) {\n          for (const element of elements[type + 's']) {\n            if (currentSelect.selecting[type + 's'].includes(element.vido.id)) {\n              options.deselecting(element.vido, type);\n            }\n          }\n        }\n        state.update('config.chart.items', function updateItems(items) {\n          const now = currentSelect.selecting['chart-timeline-items-row-items'];\n          for (const itemId in items) {\n            const item = items[itemId];\n            if (now.includes(item.id)) {\n              item.selecting = true;\n            } else {\n              item.selecting = false;\n            }\n          }\n          return items;\n        });\n        state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n          for (const row of rowsWithBlocks) {\n            for (const block of row.blocks) {\n              if (currentSelect.selecting['chart-timeline-grid-row-blocks'].includes(block.id)) {\n                if (typeof block.selected === 'undefined' || !block.selected) {\n                  options.selected(block, 'chart-timeline-grid-row-block');\n                }\n                block.selected = true;\n              } else {\n                if (previousSelect.selected['chart-timeline-grid-row-blocks'].includes(block.id)) {\n                  options.deselected(block, 'chart-timeline-grid-row-block');\n                }\n                block.selected = false;\n              }\n            }\n          }\n          return rowsWithBlocks;\n        });\n      };\n\n      /**\n       * Mouse down event handler\n       * @param {MouseEvent} ev\n       */\n      this.mouseDown = ev => {\n        if (ev.button !== 0) {\n          return;\n        }\n        selecting.selecting = true;\n        selecting.fromX = ev.x - this.left;\n        selecting.fromY = ev.y - this.top;\n        selecting.startX = selecting.fromX;\n        selecting.startY = selecting.fromY;\n        previousSelect = cloneSelection(state.get(path));\n        clearSelection();\n      };\n\n      /**\n       * Mouse move event handler\n       * @param {MouseEvent} ev\n       */\n      this.mouseMove = ev => {\n        select(ev);\n      };\n\n      /**\n       * Mouse up event handler\n       * @param {MouseEvent} ev\n       */\n      this.mouseUp = ev => {\n        if (selecting.selecting) {\n          endSelect(ev);\n        }\n      };\n\n      element.addEventListener('mousedown', this.mouseDown);\n      document.addEventListener('mousemove', schedule(this.mouseMove));\n      document.addEventListener('mouseup', this.mouseUp);\n      options.getApi(api);\n    }\n    update() {\n      const bounding = this.chartTimeline.getBoundingClientRect();\n      this.left = bounding.left;\n      this.top = bounding.top;\n    }\n    destroy(element) {\n      document.removeEventListener('mouseup', this.mouseUp);\n      document.removeEventListener('mousemove', this.mouseMove);\n      element.removeEventListener('mousedown', this.mouseDown);\n    }\n  }\n\n  /**\n   * Update selection\n   * @param {any} data\n   * @param {HTMLElement} element\n   * @param {string[]} selecting\n   * @param {string[]} selected\n   * @param {string} classNameSelecting\n   * @param {string} classNameSelected\n   */\n  function updateSelection(\n    element: HTMLElement,\n    selecting: string[],\n    selected: string[],\n    classNameSelecting: string,\n    classNameSelected: string\n  ) {\n    if (selecting && !element.classList.contains(classNameSelecting)) {\n      element.classList.add(classNameSelecting);\n    } else if (!selecting && element.classList.contains(classNameSelecting)) {\n      element.classList.remove(classNameSelecting);\n    }\n    if (selected && !element.classList.contains(classNameSelected)) {\n      element.classList.add(classNameSelected);\n    } else if (!selected && element.classList.contains(classNameSelected)) {\n      element.classList.remove(classNameSelected);\n    }\n  }\n\n  /**\n   * Grid row block action\n   * @param {HTMLElement} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  class GridBlockAction {\n    classNameSelecting: string;\n    classNameSelected: string;\n\n    constructor(element: HTMLElement, data: any) {\n      this.classNameSelecting = api.getClass('chart-timeline-grid-row-block') + '--selecting';\n      this.classNameSelected = api.getClass('chart-timeline-grid-row-block') + '--selected';\n      updateSelection(element, data.selecting, data.selected, this.classNameSelecting, this.classNameSelected);\n    }\n\n    update(element: HTMLElement, data: any) {\n      updateSelection(element, data.selecting, data.selected, this.classNameSelecting, this.classNameSelected);\n    }\n\n    destroy(element: Element, changedData: any) {\n      element.classList.remove(this.classNameSelecting);\n      element.classList.remove(this.classNameSelected);\n    }\n  }\n\n  /**\n   * Item action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  class ItemAction {\n    classNameSelecting: string;\n    classNameSelected: string;\n\n    constructor(element: HTMLElement, data: any) {\n      this.classNameSelecting = api.getClass('chart-timeline-items-row-item') + '--selecting';\n      this.classNameSelected = api.getClass('chart-timeline-items-row-item') + '--selected';\n      updateSelection(\n        element,\n        data.item.selecting,\n        data.item.selected,\n        this.classNameSelecting,\n        this.classNameSelected\n      );\n    }\n\n    update(element: HTMLElement, data: any) {\n      updateSelection(\n        element,\n        data.item.selecting,\n        data.item.selected,\n        this.classNameSelecting,\n        this.classNameSelected\n      );\n    }\n\n    destroy(element: HTMLElement, data: any) {\n      element.classList.remove(this.classNameSelecting);\n      element.classList.remove(this.classNameSelected);\n    }\n  }\n\n  /**\n   * On block create handler\n   * @param {object} block\n   * @returns {object} block\n   */\n  function onBlockCreate(block) {\n    const selectedBlocks = state.get('config.plugin.selection.selected.chart-timeline-grid-row-blocks');\n    for (const selectedBlock of selectedBlocks) {\n      if (selectedBlock === block.id) {\n        block.selected = true;\n        return block;\n      }\n    }\n    block.selected = false;\n    block.selecting = false;\n    return block;\n  }\n\n  return function initialize(mainVido) {\n    vido = mainVido;\n    state = vido.state;\n    api = vido.api;\n    schedule = vido.schedule;\n    if (typeof state.get(path) === 'undefined') {\n      state.update(path, {\n        selecting: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        },\n        selected: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        }\n      });\n    }\n    state.update('config.chart.items', items => {\n      for (const itemId in items) {\n        const item = items[itemId];\n        if (typeof item.selecting === 'undefined') {\n          item.selecting = false;\n        }\n        if (typeof item.selected === 'undefined') {\n          item.selected = false;\n        }\n      }\n      return items;\n    });\n    state.update('config.actions.chart-timeline', actions => {\n      actions.push(SelectionAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-grid-row-block', actions => {\n      actions.push(GridBlockAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(ItemAction);\n      return actions;\n    });\n    state.update('config.chart.grid.block.onCreate', onCreate => {\n      onCreate.push(onBlockCreate);\n      return onCreate;\n    });\n  };\n}\n","/**\n * CalendarScroll plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport default function CalendarScroll(options = {}) {\n  let state, api, schedule;\n  const defaultOptions = {\n    speed: 1,\n    hideScroll: false,\n    onChange(time) {}\n  };\n  options = { ...defaultOptions, ...options };\n\n  class CalendarScrollAction {\n    isMoving: boolean = false;\n    lastX: number = 0;\n    mc: any;\n\n    constructor(element: HTMLElement) {\n      this.onPointerStart = this.onPointerStart.bind(this);\n      this.onPointerMove = this.onPointerMove.bind(this);\n      this.onPointerEnd = this.onPointerEnd.bind(this);\n      element.addEventListener('touchstart', this.onPointerStart);\n      document.addEventListener('touchmove', this.onPointerMove);\n      document.addEventListener('touchend', this.onPointerEnd);\n      element.addEventListener('mousedown', this.onPointerStart);\n      document.addEventListener('mousemove', this.onPointerMove);\n      document.addEventListener('mouseup', this.onPointerEnd);\n      element.style.cursor = 'move';\n      const horizontalScroll = state.get('_internal.elements.horizontal-scroll');\n      // @ts-ignore\n      if (options.hideScroll && horizontalScroll) {\n        horizontalScroll.style.visibility = 'hidden';\n      }\n    }\n\n    onPointerStart(ev) {\n      if (ev.type === 'mousedown' && ev.button !== 0) return;\n      ev.stopPropagation();\n      this.isMoving = true;\n      const normalized = api.normalizePointerEvent(ev);\n      this.lastX = normalized.x;\n    }\n\n    onPointerMove(ev) {\n      schedule(() => {\n        if (!this.isMoving) return;\n        const normalized = api.normalizePointerEvent(ev);\n        const movedX = normalized.x - this.lastX;\n        const time = state.get('_internal.chart.time');\n        // @ts-ignore\n        const movedTime = -Math.round(movedX * time.timePerPixel * options.speed);\n        state.update('config.chart.time', configTime => {\n          if (configTime.from === 0) configTime.from = time.from;\n          if (configTime.to === 0) configTime.to = time.to;\n          configTime.from += movedTime;\n          configTime.to += movedTime;\n          // @ts-ignore\n          options.onChange(configTime);\n          return configTime;\n        });\n        this.lastX = normalized.x;\n      })();\n    }\n\n    onPointerEnd(ev) {\n      this.isMoving = false;\n      this.lastX = 0;\n    }\n\n    destroy(element: HTMLElement, data: any) {\n      element.removeEventListener('touchstart', this.onPointerStart);\n      document.removeEventListener('touchmove', this.onPointerMove);\n      document.removeEventListener('touchend', this.onPointerEnd);\n      element.removeEventListener('mousedown', this.onPointerStart);\n      document.removeEventListener('mousemove', this.onPointerMove);\n      document.removeEventListener('mouseup', this.onPointerEnd);\n    }\n  }\n\n  return function initialize(vido) {\n    api = vido.api;\n    state = vido.state;\n    schedule = vido.schedule;\n    state.update('config.actions.chart-calendar', actions => {\n      actions.push(CalendarScrollAction);\n      return actions;\n    });\n  };\n}\n"],"names":["ItemHold","options","api","defaultOptions","time","movementThreshold","[object Object]","element","data","holding","pointer","x","y","onPointerUp","itemId","action","elementPointerDown","event","onPointerDown","item","id","normalized","normalizePointerEvent","stopPropagation","preventDefault","setTimeout","exec","xMovement","Math","abs","yMovement","pointerUp","onPointerMove","addEventListener","document","changedData","removeEventListener","initialize","vido","state","update","actions","push","ItemMovement","moveable","resizeable","resizerContent","collisionDetection","outOfBorders","snapStart","timeStart","startDiff","snapEnd","timeEnd","endDiff","ghostNode","movementState","isResizeable","hasOwnProperty","row","getMovement","moving","resizing","moveGhost","ev","movement","left","ganttLeft","itemLeftCompensation","ghost","style","top","ganttTop","itemTop","parseInt","getComputedStyle","destroyGhost","get","removeChild","getSnapStart","getSnapEnd","resizerHTML","getClass","insertAdjacentHTML","resizerEl","querySelector","labelMouseDown","button","chartLeftTime","timePerPixel","ganttRect","getBoundingClientRect","itemX","round","start","createGhost","cloneNode","compensation","position","offsetTop","width","height","clientHeight","opacity","transform","appendChild","resizerMouseDown","end","isCollision","rowId","from","to","diff","date","sign","rowItem","_internal","items","documentMouseMove","zoom","isMoveable","Array","isArray","includes","movementX","add","originalStart","finalAdd","collision","moveItem","visibleRowsIndex","movementY","visibleRows","index","currentRow","length","newRow","newRowId","resizeX","leftGlobal","originalEnd","documentMouseUp","visibility","capture","passive","node","remove","SaveAsImage","saveAsImage","target","clientWidth","html","unescape","encodeURIComponent","outerHTML","styleSheet","styleSheets","title","rule","rules","cssText","svg","canvas","createElement","ctx","getContext","fillStyle","fillRect","svg64","btoa","img","Image","onload","onLoad","drawImage","downloadImage","filename","a","href","download","body","click","toDataURL","src","subscribe","main","Selection","schedule","path","rectClassName","rect","classList","background","border","grid","rows","horizontal","vertical","rectStyle","canSelect","type","currently","all","canDeselect","Object","styleProp","selecting","fromX","fromY","toX","toY","startX","startY","startCell","selectionTypesIdGetters","chart-timeline-grid-row","props","chart-timeline-grid-row-block","chart-timeline-items-row","chart-timeline-items-row-item","SelectionAction","previousSelect","this","chartTimeline","insertAdjacentElement","bounding","clearSelection","force","selectingState","chart-timeline-grid-rows","chart-timeline-grid-row-blocks","chart-timeline-items-rows","chart-timeline-items-row-items","selected","clearRowsWithBlocks","rowsWithBlocks","block","blocks","saveAndSwapIfNeeded","currentX","currentY","isInside","boundingRect","rectBoundingRect","right","bottom","getSelecting","elements","getId","selectingResult","currentlySelectingData","currentAll","currentSelecting","unshift","deselecting","endSelect","currentSelect","select","value","updateItems","now","updateRowsWithBlocks","deselected","mouseDown","cloneSelection","result","slice","mouseMove","nowSelecting","only","nowBlocks","nowRows","mouseUp","getApi","updateSelection","classNameSelecting","classNameSelected","contains","GridBlockAction","ItemAction","onBlockCreate","selectedBlocks","selectedBlock","mainVido","onCreate","CalendarScroll","speed","hideScroll","CalendarScrollAction","onPointerStart","bind","onPointerEnd","cursor","horizontalScroll","isMoving","lastX","movedX","movedTime","configTime","onChange"],"mappings":"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"}