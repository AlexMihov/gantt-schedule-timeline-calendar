!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).DependencyLines=t()}(this,(function(){"use strict";
/**
   * DependencyLines plugin
   *
   * @copyright Rafal Pospiech <https://neuronet.io>
   * @author    Rafal Pospiech <neuronet.io@gmail.com>
   * @package   gantt-schedule-timeline-calendar
   * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)
   * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
   */let e,t,n;const i=document.createElement("div");i.style.position="absolute",i.style.left="0",i.style.top="0",i.style.width="var(--width)",i.style.height="var(--height)";const s={type:"quadratic",style:{},width:16,height:16};function ItemDependencyLine(t,i){const{state:s,onDestroy:o,onChange:c,html:r,svg:l,Detach:a,update:d,StyleMap:p}=t,h="chart-timeline-items-row-item-dependency";let u,f,m;o(s.subscribe("config.classNames",()=>{u=n.getClass(h+"-line"),f=n.getClass(h+"-handle")})),o(s.subscribe("config.wrappers.DependencyLineRightHandle",e=>{m=e||function DependencyLineRightHandleWrapper(e){return e}}));let g=!1;const y=new a(()=>g),w=new p({}),v=new p({});let b=[];function updateLines(){var e,t;b.length=0;const n=(null===(t=null===(e=i)||void 0===e?void 0:e.item)||void 0===t?void 0:t.lines)||[],o=s.get("config.chart.items"),c=s.get("config.list.rows");for(const e of n){const t=o[e];if(!t)continue;const n=c[t.rowId];if(!n)continue;const s=Math.abs(i.width+(i.item.time.start-t.time.start)/D),r=Math.abs(i.row.top-n.top)+n.height,a=l`<svg xmlns="http://www.w3.org/2000/svg" width="${s}" height="${r}" viewBox="0 0 ${s} ${r}"></svg>`;b.push(a)}}let D=1;return o(s.subscribe("_internal.chart.time.timePerPixel",e=>{D=e||1,updateLines()})),c((function onChange(t,n){if(n.leave||!t)return g=!0,d();g=!1,i=t,w.style.left=i.left+i.width-e.width+"px",w.style.width=e.width+"px",w.style.height=e.height+"px",v.style.left=i.left+i.width+"px",updateLines(),d()})),e=>m(r`
        <div detach=${y} class=${u} style=${v}>${b.map(e=>e)}</div>
      `,{templateProps:e,props:i,vido:t})}function DependencyLinesComponent(e){const{html:t,onDestroy:n,api:i,state:s,reuseComponents:o}=e;let c;n(s.subscribe("config.classNames",()=>{c=i.getClass("chart-timeline-dependency-lines")}));let r=[];return n(s.subscribe("config.chart.items",e=>{const t=Object.values(e);return o(r,t,e=>e,ItemDependencyLine)})),e=>t`
      <div class="${c}">${r.map(e=>e.html())}</div>
    `}return function DependencyLinesPlugin(i=s){return e=Object.assign(Object.assign({},s),i),function initialize(e){t=e.state,n=e.api;const i=e.createComponent(DependencyLinesComponent);return t.update("config.wrappers.ChartTimelineGrid",t=>(function DependencyLinesGridWrapper(n,s){const o=e.html`${n}${i.html()}`;return t(o,s)})),function destroy(){i.destroy()}}}}));
//# sourceMappingURL=DependencyLines.plugin.min.js.map
