!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).ItemMovement={})}(this,(function(t){"use strict";const e="chart-timeline-items-row-item";const i="config.plugin.ItemMovement";class a{constructor(t){this.onDestroy=[],this.cumulations={},this.relativeVerticalPosition={},this.vido=t,this.api=t.api,this.state=t.state,this.merge=this.state.get("config.merge"),this.destroy=this.destroy.bind(this),this.onDestroy.push(this.state.subscribe(i,t=>{this.data=t,t.enabled?document.body.classList.add(this.data.bodyClass):document.body.classList.remove(this.data.bodyClass)})),this.data.className||(this.data.className=this.api.getClass("chart-timeline-items-row-item--moving")),this.onSelectionChange=this.onSelectionChange.bind(this),this.onDestroy.push(this.state.subscribe("config.plugin.Selection",this.onSelectionChange))}destroy(){this.onDestroy.forEach(t=>t())}updateData(){this.state.update(i,Object.assign({},this.data))}clearCumulationsForItems(){this.cumulations={}}setStartCumulationForItem(t,e){this.cumulations[t.id]||(this.cumulations[t.id]={start:0,end:0}),this.cumulations[t.id].start=e}getStartCumulationForItem(t){var e;return(null===(e=this.cumulations[t.id])||void 0===e?void 0:e.start)||0}getItemMovingTimes(t,e){const i=this.data.movement.px.horizontal,a=this.api.time.getViewOffsetPxFromDates(t.$data.time.startDate,!1,e)+i+this.getStartCumulationForItem(t),s=this.api.time.getTimeFromViewOffsetPx(a,e),o=this.data.snapToTime.start({startTime:this.api.time.date(s),item:t,time:e,movement:this.data.movement,vido:this.vido}),n=this.api.time.getDatesDiffPx(o,this.api.time.date(s),e,!0);this.setStartCumulationForItem(t,n);const d=t.$data.time.endDate.diff(t.$data.time.startDate,"millisecond"),m=o.add(d,"millisecond").valueOf(),h=this.api.time.date(m);return{startTime:o,endTime:this.data.snapToTime.end({endTime:h,item:t,time:e,movement:this.data.movement,vido:this.vido})}}findRowAtViewPosition(t,e){const i=this.state.get("$data.list.visibleRows");for(const e of i){const i=e.$data.position.viewTop+e.$data.outerHeight;if(e.$data.position.viewTop<=t&&i>=t)return e}return e}getItemViewTop(t){return this.state.get("config.list.rows")[t.rowId].$data.position.viewTop+t.$data.position.actualTop}saveItemsRelativeVerticalPosition(){for(const t of this.data.moving){const e=this.data.position.y-this.getItemViewTop(t);this.setItemRelativeVerticalPosition(t,e)}}setItemRelativeVerticalPosition(t,e){this.relativeVerticalPosition[t.id]=e}getItemRelativeVerticalPosition(t){return this.relativeVerticalPosition[t.id]}moveItemVertically(t,e){const i=this.state.get("config.list.rows")[t.rowId],a=this.getItemRelativeVerticalPosition(t),s=this.data.position.y+a,o=this.findRowAtViewPosition(s,i);return o.id!==t.rowId&&this.data.onRowChange({item:t,selectedItems:this.data.moving.map(t=>this.merge({},t)),row:o,vido:this.vido,time:this.state.get("$data.chart.time"),state:this.state})&&(e=e.update(`config.chart.items.${t.id}.rowId`,o.id)),e}moveItems(){const t=this.state.get("$data.chart.time");let e=this.state.multi();const i=this.data.moving.map(t=>this.merge({},t));this.data.debug&&console.log("moveItems",i);for(let a of i){const i=this.getItemMovingTimes(a,t);e=this.moveItemVertically(a,e),i.startTime.valueOf()===a.time.start&&i.endTime.valueOf()===a.time.end||(a.time.start=i.startTime.valueOf(),a.time.end=i.endTime.valueOf(),a.$data.time.startDate=i.startTime,a.$data.time.endDate=i.endTime,this.dispatchEvent(a,"move")&&(e=e.update(`config.chart.items.${a.id}.time`,a.time).update(`config.chart.items.${a.id}.$data.time`,a.$data.time)))}e.done()}clearSelection(){this.data.moving=[],this.data.initialItems=[],this.data.movement.px.horizontal=0,this.data.movement.px.vertical=0,this.data.movement.time=0,this.data.pointerState="up",this.data.pointerMoved=!1}onStart(){this.data.initialItems=this.data.moving.map(t=>this.merge({},t)),this.clearCumulationsForItems(),document.body.classList.add(this.data.bodyClassMoving),this.data.position=Object.assign({},this.selection.currentPosition),this.data.lastMovement.time=this.data.moving[0].time.start,this.saveItemsRelativeVerticalPosition();for(const t of this.data.initialItems)this.dispatchEvent(t,"start")}restoreInitialItem(t){const e=this.data.initialItems.find(e=>e.id===t.id);this.data.debug&&console.log("restoreInitialItem",e),this.state.multi().update(`config.chart.items.${t.id}.time`,e.time).update(`config.chart.items.${t.id}.$data`,e.$data).update(`config.chart.items.${t.id}.rowId`,e.rowId).done(),this.clearSelection(),this.updateData()}onEnd(){for(const t of this.data.moving)this.dispatchEvent(t,"end")||this.restoreInitialItem(t);document.body.classList.remove(this.data.bodyClassMoving),this.clearSelection(),this.clearCumulationsForItems()}getCanMoveArgument(t,e){const i={item:t,selectedItems:this.data.moving.map(t=>this.merge({},t)),vido:this.vido,state:this.state,time:this.state.get("$data.chart.time")};return"move"===e&&(i.movement=Object.assign(Object.assign({},this.data.movement),{px:Object.assign({},this.data.movement.px)})),"end"===e&&(i.totalMovement={time:this.data.moving[0].time.start-this.data.initialItems[0].time.start,px:{horizontal:this.data.moving[0].$data.position.left-this.data.initialItems[0].$data.position.left,vertical:this.data.moving[0].$data.position.viewTop-this.data.initialItems[0].$data.position.viewTop}}),i}dispatchEvent(t,e){const i=this.getCanMoveArgument(t,e);switch(e){case"start":return this.data.debug&&console.log("canMove start",e,i,this.data.onStart),this.data.onStart(i);case"move":return this.data.debug&&console.log("canMove move",e,i,this.data.onMove),this.data.onMove(i);case"end":return this.data.debug&&console.log("canMove end",e,i,this.data.onEnd),this.data.onEnd(i)}return!0}onSelectionChange(t){if(this.data.enabled){if(this.selection=Object.assign({},t),this.selection.targetType!==e)return this.clearSelection();if("up"===this.data.pointerState&&"down"===this.selection.pointerState)this.data.state="start";else if("down"!==this.data.pointerState&&"move"!==this.data.pointerState||"up"!==this.selection.pointerState){if("move"!==this.selection.pointerState)return this.data.state="",this.updateData();this.data.state="move"}else this.data.state="end";if(this.selection.events.move&&(this.selection.events.move.preventDefault(),this.selection.events.move.stopPropagation()),this.selection.events.down&&(this.selection.events.down.preventDefault(),this.selection.events.down.stopPropagation()),this.data.pointerState=this.selection.pointerState,"end"===this.data.state&&this.onEnd(),this.data.moving=this.selection.selected[e].map(t=>this.merge({},t)),this.data.debug&&console.log("state",this.data.pointerState),"start"===this.data.state&&this.onStart(),"move"!==this.data.state&&"start"!==this.data.state||(this.data.lastMovement.x=this.data.movement.px.horizontal,this.data.lastMovement.y=this.data.movement.px.vertical,this.data.movement.px.horizontal=this.selection.currentPosition.x-this.data.position.x,this.data.movement.px.vertical=this.selection.currentPosition.y-this.data.position.y,this.data.movement.time=this.data.moving[0].time.start-this.data.lastMovement.time,this.data.position.x=this.selection.currentPosition.x,this.data.position.y=this.selection.currentPosition.y,this.data.lastMovement.time=this.data.moving[0].time.start),"move"===this.data.state&&this.data.lastMovement.x===this.data.movement.px.horizontal&&this.data.lastMovement.y===this.data.movement.px.vertical)return this.updateData();"move"===this.data.state&&this.moveItems(),this.updateData()}}}t.Plugin=function(t={}){return function(e){return e.state.update(i,function(t){const e=Object.assign({debug:!1,moving:[],initialItems:[],pointerState:"up",pointerMoved:!1,state:"",position:{x:0,y:0},movement:{px:{horizontal:0,vertical:0},time:0},lastMovement:{x:0,y:0,time:0},onStart:()=>!0,onMove:()=>!0,onEnd:()=>!0,onRowChange:()=>!0,snapToTime:{start:({startTime:t,time:e})=>t.startOf(e.period),end:({endTime:t,time:e})=>t.endOf(e.period)}},t);return t.snapToTime&&(e.snapToTime=Object.assign(Object.assign({},e.snapToTime),t.snapToTime)),e}(function(t){return Object.assign({enabled:!0,className:"",bodyClass:"gstc-item-movement",bodyClassMoving:"gstc-items-moving"},t)}(t))),new a(e).destroy}},Object.defineProperty(t,"__esModule",{value:!0})}));
