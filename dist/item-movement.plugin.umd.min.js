!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).ItemMovement={})}(this,(function(t){"use strict";function e(t){return t&&"object"==typeof t&&t.constructor&&"Object"===t.constructor.name}function i(t,...s){const a=s.shift();if(e(t)&&e(a))for(const s in a)if(e(a[s]))"function"==typeof a[s].clone?t[s]=a[s].clone():(void 0===t[s]&&(t[s]={}),t[s]=i(t[s],a[s]));else if(Array.isArray(a[s])){t[s]=new Array(a[s].length);let o=0;for(let n of a[s])e(n)?"function"==typeof n.clone?t[s][o]=n.clone():t[s][o]=i({},n):t[s][o]=n,o++}else t[s]=a[s];return s.length?i(t,...s):t}const s="chart-timeline-items-row-item";const a="config.plugin.ItemMovement";class o{constructor(t){this.onDestroy=[],this.cumulations={},this.relativeVerticalPosition={},this.vido=t,this.api=t.api,this.state=t.state,this.merge=this.state.get("config.merge"),this.destroy=this.destroy.bind(this),this.onDestroy.push(this.state.subscribe(a,t=>{this.data=t,t.enabled?document.body.classList.add(this.data.bodyClass):document.body.classList.remove(this.data.bodyClass)})),this.data.className||(this.data.className=this.api.getClass("chart-timeline-items-row-item--moving")),this.onSelectionChange=this.onSelectionChange.bind(this),this.onDestroy.push(this.state.subscribe("config.plugin.Selection",this.onSelectionChange))}destroy(){this.onDestroy.forEach(t=>t())}updateData(){this.state.update(a,Object.assign({},this.data))}clearCumulationsForItems(){this.cumulations={}}setStartCumulationForItem(t,e){this.cumulations[t.id]||(this.cumulations[t.id]={start:0,end:0}),this.cumulations[t.id].start=e}getStartCumulationForItem(t){var e;return(null===(e=this.cumulations[t.id])||void 0===e?void 0:e.start)||0}getItemMovingTimes(t,e){const i=this.data.movement.px.horizontal,s=this.api.time.getViewOffsetPxFromDates(t.$data.time.startDate,!1,e)+i+this.getStartCumulationForItem(t),a=this.api.time.getTimeFromViewOffsetPx(s,e),o=this.data.snapToTime.start({startTime:this.api.time.date(a),item:t,time:e,movement:this.data.movement,vido:this.vido}),n=this.api.time.getDatesDiffPx(o,this.api.time.date(a),e,!0);this.setStartCumulationForItem(t,n);const m=t.$data.time.endDate.diff(t.$data.time.startDate,"millisecond"),r=o.add(m,"millisecond").valueOf(),d=this.api.time.date(r);return{startTime:o,endTime:this.data.snapToTime.end({endTime:d,item:t,time:e,movement:this.data.movement,vido:this.vido})}}findRowAtViewPosition(t,e){const i=this.state.get("$data.list.visibleRows"),s=this.api.getRows(i);for(const e of s){const i=e.$data.position.viewTop+e.$data.outerHeight;if(e.$data.position.viewTop<=t&&i>=t)return e}return e}getItemViewTop(t){return this.api.getAllRows()[t.rowId].$data.position.viewTop+t.$data.position.actualTop}saveItemsRelativeVerticalPosition(){for(const t of this.data.moving){const e=this.data.position.y-this.getItemViewTop(t);this.setItemRelativeVerticalPosition(t,e)}}setItemRelativeVerticalPosition(t,e){this.relativeVerticalPosition[t.id]=e}getItemRelativeVerticalPosition(t){return this.relativeVerticalPosition[t.id]}moveItemVertically(t){const e=this.api.getAllRows()[t.rowId],i=this.getItemRelativeVerticalPosition(t),s=this.data.position.y+i;return this.findRowAtViewPosition(s,e)}getEventArgument(t){const e=this.state.get("config.chart.items"),i=[];for(const s of t)i.push(this.merge({},e[s.id]));return{items:{initial:this.data.initialItems,before:i,after:t,targetData:this.merge({},this.data.targetData)},vido:this.vido,state:this.state,time:this.state.get("$data.chart.time")}}moveItems(){if(!this.data.enabled)return;const t=this.state.get("$data.chart.time"),e=this.data.moving.map(t=>this.merge({},t));this.data.debug&&console.log("moveItems",e);for(let i of e){i.rowId=this.moveItemVertically(i).id;const e=this.getItemMovingTimes(i,t);e.startTime.valueOf()===i.time.start&&e.endTime.valueOf()===i.time.end||(i.time.start=e.startTime.valueOf(),i.time.end=e.endTime.valueOf(),i.$data.time.startDate=e.startTime,i.$data.time.endDate=e.endTime)}this.dispatchEvent("onMove",e)}clearSelection(){this.data.moving=[],this.data.initialItems=[],this.data.movement.px.horizontal=0,this.data.movement.px.vertical=0,this.data.movement.time=0,this.data.pointerState="up",this.data.pointerMoved=!1}dispatchEvent(t,e){e=e.map(t=>this.merge({},t));const s=this.data.events[t](this.getEventArgument(e));let a=this.state.multi();for(const t of s)a=a.update(`config.chart.items.${t.id}`,e=>(i(e,t),e));a.done(),this.data.moving=s}onStart(){this.data.initialItems=this.data.moving.map(t=>this.merge({},t)),this.clearCumulationsForItems(),document.body.classList.add(this.data.bodyClassMoving),this.data.position=Object.assign({},this.selection.currentPosition),this.data.lastMovement.time=this.data.moving[0].time.start,this.saveItemsRelativeVerticalPosition();const t=this.data.initialItems.map(t=>this.merge({},t));this.dispatchEvent("onStart",t)}onEnd(){const t=this.data.moving.map(t=>this.merge({},t));this.dispatchEvent("onEnd",t),document.body.classList.remove(this.data.bodyClassMoving),this.clearSelection(),this.clearCumulationsForItems()}onSelectionChange(t){if(this.data.enabled){if(this.selection=Object.assign({},t),this.selection.targetType!==s)return this.clearSelection();if("up"===this.data.pointerState&&"down"===this.selection.pointerState)this.data.state="start";else if("down"!==this.data.pointerState&&"move"!==this.data.pointerState||"up"!==this.selection.pointerState){if("move"!==this.selection.pointerState)return this.data.state="",this.updateData();this.data.state="move"}else this.data.state="end";if(this.selection.events.move&&(this.selection.events.move.preventDefault(),this.selection.events.move.stopPropagation()),this.selection.events.down&&(this.selection.events.down.preventDefault(),this.selection.events.down.stopPropagation()),this.data.pointerState=this.selection.pointerState,this.data.targetData=Object.assign({},this.selection.targetData),"end"===this.data.state&&this.onEnd(),this.data.moving=this.selection.selected[s].map(t=>this.merge({},t)),this.data.debug&&console.log("state",this.data.pointerState),"start"===this.data.state&&this.onStart(),"move"!==this.data.state&&"start"!==this.data.state||(this.data.lastMovement.x=this.data.movement.px.horizontal,this.data.lastMovement.y=this.data.movement.px.vertical,this.data.movement.px.horizontal=this.selection.currentPosition.x-this.data.position.x,this.data.movement.px.vertical=this.selection.currentPosition.y-this.data.position.y,this.data.movement.time=this.data.moving[0].time.start-this.data.lastMovement.time,this.data.position.x=this.selection.currentPosition.x,this.data.position.y=this.selection.currentPosition.y,this.data.lastMovement.time=this.data.moving[0].time.start),"move"===this.data.state&&this.data.lastMovement.x===this.data.movement.px.horizontal&&this.data.lastMovement.y===this.data.movement.px.vertical)return this.updateData();"move"===this.data.state&&this.moveItems(),this.updateData()}}}t.Plugin=function(t={}){return function(e){const s=e.state.get(a);return s&&(t=i({},t,s)),e.state.update(a,function(t){const e={onStart:({items:t})=>t.after,onMove:({items:t})=>t.after,onEnd:({items:t})=>t.after},i={start:({startTime:t,time:e})=>t.startOf(e.period),end:({endTime:t,time:e})=>t.endOf(e.period)},s=Object.assign({debug:!1,moving:[],targetData:null,initialItems:[],pointerState:"up",pointerMoved:!1,state:"",position:{x:0,y:0},movement:{px:{horizontal:0,vertical:0},time:0},lastMovement:{x:0,y:0,time:0},events:Object.assign({},e),snapToTime:Object.assign({},i)},t);return t.snapToTime&&(s.snapToTime=Object.assign(Object.assign({},i),t.snapToTime)),t.events&&(s.events=Object.assign(Object.assign({},e),t.events)),s}(function(t){return Object.assign({enabled:!0,className:"",bodyClass:"gstc-item-movement",bodyClassMoving:"gstc-items-moving"},t)}(t))),new o(e).destroy}},Object.defineProperty(t,"__esModule",{value:!0})}));
