!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).ItemMovement={})}(this,(function(t){"use strict";const e="chart-timeline-items-row-item";const i="config.plugin.ItemMovement";class s{constructor(t){this.onDestroy=[],this.vido=t,this.api=t.api,this.state=t.state,this.onDestroy.push(this.state.subscribe(i,t=>this.data=t)),this.data.className||(this.data.className=this.api.getClass("chart-timeline-items-row-item--moving")),this.onSelectionChange=this.onSelectionChange.bind(this),this.onDestroy.push(this.state.subscribe("config.plugin.Selection",this.onSelectionChange))}destroy(){this.onDestroy.forEach(t=>t())}updateData(){this.state.update(i,this.data)}getItemMovingTime(t,e){const i=this.data.movement.px.horizontal,s=t.$data.position.left+i,a=Math.round(this.api.time.getTimeFromViewOffsetPx(s,e));return{time:this.api.time.date(a),position:s}}moveItems(){const t=this.state.get("$data.chart.time");let e=this.state.multi();for(const i of this.data.lastMoved){const s=this.getItemMovingTime(i,t);let a;e=e.update(`config.chart.items.${i.id}.time`,t=>{const e=s.time.valueOf(),i=e-t.start;return t.start=e,t.end+=i,a=Object.assign({},t),t}).update(`config.chart.items.${i.id}.$data`,t=>(t.time.startDate=s.time,t.time.endDate=this.api.time.date(a.end),t.position.left=s.position,t.position.actualLeft=this.api.time.limitOffsetPxToView(s.position),t.position.right=t.position.left+t.width,t.position.actualRight=this.api.time.limitOffsetPxToView(t.position.right),t.actualWidth=t.position.actualRight-t.position.actualLeft,t))}e.done()}clearSelection(){this.data.moving=[],this.data.lastMoved=[],this.data.movement.px.horizontal=0,this.data.movement.px.vertical=0,this.data.movement.time=0,this.data.state="up",this.data.pointerMoved=!1}updatePointerState(){"up"===this.data.state&&"down"===this.selection.pointerState?this.data.onStart(this.data.moving):"down"!==this.data.state&&"move"!==this.data.state||"up"!==this.selection.pointerState?"move"===this.selection.pointerState&&((this.data.movement.px.horizontal||this.data.movement.px.vertical)&&(this.data.pointerMoved=!0),this.data.onMove(this.data.moving)):(this.data.moving=[],this.data.onEnd(this.data.lastMoved),this.clearSelection()),this.data.state=this.selection.pointerState}onStart(){document.body.classList.add(this.data.bodyClass),this.data.lastPosition=Object.assign({},this.selection.currentPosition)}onEnd(){document.body.classList.remove(this.data.bodyClass)}onSelectionChange(t){if(this.data.enabled){if(this.selection=t,this.selection.targetType!==e)return this.clearSelection();this.selection.events.move&&(this.selection.events.move.preventDefault(),this.selection.events.move.stopPropagation()),this.selection.events.down&&(this.selection.events.down.preventDefault(),this.selection.events.down.stopPropagation()),"up"===this.data.state&&"down"===this.selection.pointerState?this.onStart():"down"!==this.data.state&&"move"!==this.data.state||"up"!==this.selection.pointerState||this.onEnd(),this.data.moving=[...this.selection.selected[e]],this.data.moving.length&&(this.data.lastMoved=[...this.data.moving]),this.data.movement.px.horizontal=this.selection.currentPosition.x-this.data.lastPosition.x,this.data.movement.px.vertical=this.selection.currentPosition.y-this.data.lastPosition.y,this.data.lastPosition.x=this.selection.currentPosition.x,this.data.lastPosition.y=this.selection.currentPosition.y,this.updatePointerState(),this.moveItems(),this.updateData()}}}t.Plugin=function(t={}){return function(e){e.state.update(i,function(t){return Object.assign({moving:[],lastMoved:[],state:"up",pointerMoved:!1,lastPosition:{x:0,y:0},movement:{px:{horizontal:0,vertical:0},time:0},onStart(){},onMove(){},onEnd(){},snapStart:({startTime:t,time:e})=>t.startOf(e.period),snapEnd:({endTime:t,time:e})=>t.endOf(e.period)},t)}(function(t){return Object.assign({enabled:!0,className:"",bodyClass:"gstc-items-moving"},t)}(t))),new s(e)}},Object.defineProperty(t,"__esModule",{value:!0})}));
