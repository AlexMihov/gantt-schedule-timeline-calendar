{"version":3,"file":"DependencyLines.plugin.min.js","sources":["../src/plugins/DependencyLines.plugin.ts"],"sourcesContent":["/**\n * DependencyLines plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nlet opts: Options;\nlet state, api;\nconst container = document.createElement('div');\ncontainer.style.position = 'absolute';\ncontainer.style.left = '0';\ncontainer.style.top = '0';\ncontainer.style.width = 'var(--width)';\ncontainer.style.height = 'var(--height)';\n\nexport type Type = 'straight' | 'quadratic' | 'cubic';\nexport interface Style {\n  [name: string]: string;\n}\nexport interface Options {\n  type?: Type;\n  style?: Style;\n  width?: number;\n  height?: number;\n}\n\nconst defaultOptions: Options = {\n  type: 'quadratic',\n  style: {},\n  width: 16,\n  height: 16\n};\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport type Points = Point[];\n\n/**\n * Item dependency line component\n * @param vido\n * @param props\n */\nfunction ItemDependencyLine(vido, props) {\n  const { state, onDestroy, onChange, html, svg, Detach, update, StyleMap } = vido;\n  const componentName = 'chart-timeline-dependency-lines-line';\n\n  let classNameLine;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      classNameLine = api.getClass(componentName + '-line');\n    })\n  );\n\n  let wrapper;\n  onDestroy(\n    state.subscribe('config.wrappers.DependencyLineRightHandle', value => {\n      if (value) {\n        wrapper = value;\n      } else {\n        wrapper = function DependencyLineRightHandleWrapper(input) {\n          return input;\n        };\n      }\n    })\n  );\n\n  let shouldDetach = false;\n  const detach = new Detach(() => shouldDetach);\n\n  const styleMap = new StyleMap({});\n\n  let lines = [];\n  function updateLines() {\n    lines.length = 0;\n    const itemIds = props?.item?.lines || [];\n    const items = state.get('config.chart.items');\n    const rows = state.get('config.list.rows');\n    for (const itemId of itemIds) {\n      const currentItem = items[itemId];\n      if (!currentItem) continue;\n      const currentRow = rows[currentItem.rowId];\n      if (!currentRow) continue;\n      const width = Math.abs(props.width + (props.item.time.start - currentItem.time.start) / timePerPixel);\n      const height = Math.abs(props.row.top - currentRow.top) + currentRow.height;\n      const line = svg`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\"></svg>`;\n      lines.push(line);\n    }\n  }\n\n  let timePerPixel = 1;\n  onDestroy(\n    state.subscribe('_internal.chart.time.timePerPixel', value => {\n      timePerPixel = value || 1;\n      updateLines();\n    })\n  );\n\n  onChange(function onChange(changedProps, options) {\n    if (options.leave || !changedProps) {\n      shouldDetach = true;\n      return update();\n    }\n    shouldDetach = false;\n    props = changedProps;\n    styleMap.style['left'] = props.left + props.width + 'px';\n    updateLines();\n    update();\n  });\n\n  return templateProps =>\n    wrapper(\n      html`\n        <div detach=${detach} class=${classNameLine} style=${styleMap}>${lines.map(line => line)}</div>\n      `,\n      { templateProps, props, vido }\n    );\n}\n\n/**\n * DependencyLines Lines Component\n * @param vido\n */\nfunction DependencyLinesLines(vido) {\n  const { html, onDestroy, api, state, reuseComponents } = vido;\n  const componentName = 'chart-timeline-dependency-lines-lines';\n\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n    })\n  );\n\n  let lines = [];\n  onDestroy(\n    state.subscribe('_internal.chart.visibleItems', visibleItems => {\n      const allRows = state.get('config.list.rows');\n      const rows = {};\n      for (const itemId in visibleItems) {\n        const item = visibleItems[itemId];\n        if (typeof item.rowId === 'string' && allRows[item.rowId]) {\n          rows[item.rowId] = allRows[item.rowId];\n        }\n      }\n    })\n  );\n\n  return templateProps =>\n    html`\n      <div class=\"${className}\">${lines.map(line => line.html())}</div>\n    `;\n}\n\n/**\n * Item dependency line handle\n * @param vido\n * @param props\n */\nfunction ItemDependencyLineHandle(vido, props) {\n  const { html, onDestroy, api, state, StyleMap, onChange, Detach, update, Actions, PointerAction } = vido;\n  const componentName = 'chart-timeline-dependency-lines-handle';\n  const actionProps = { ...props };\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n    })\n  );\n\n  let shouldDetach = false;\n  const detach = new Detach(() => shouldDetach);\n\n  const styleMap = new StyleMap({ left: '0px', top: '0px', width: opts.width + 'px', height: opts.height + 'px' });\n\n  function updatePosition() {\n    styleMap.style.left = api.time.globalTimeToViewPixelOffset(props.item.time.end, true) - opts.width + 'px';\n    styleMap.style.top = props.row.top + 'px';\n  }\n\n  function change(changedProps, options) {\n    if (options.leave) {\n      shouldDetach = true;\n      return update();\n    }\n    shouldDetach = false;\n    props = changedProps;\n    for (const prop in props) {\n      actionProps[prop] = props[prop];\n    }\n    updatePosition();\n    update();\n  }\n  onChange(change);\n\n  onDestroy(\n    state.subscribeAll(['_internal.chart.time', 'config.scroll.compensation'], () => {\n      updatePosition();\n      update();\n    })\n  );\n\n  const componentActions = api.getActions(componentName) || [];\n\n  let moving = false;\n  actionProps.pointerOptions = {\n    axis: 'xy',\n    onDown({ event }) {\n      event.stopPropagation();\n      event.preventDefault();\n      moving = true;\n    },\n    onMove({ event, movementX, movementY }) {\n      if (moving) {\n        event.stopPropagation();\n        event.preventDefault();\n        console.log('move?', { movementX, movementY });\n      }\n    }\n  };\n  componentActions.push(PointerAction);\n  const actions = Actions.create(componentActions, actionProps);\n\n  return templateProps =>\n    html`\n      <div detach=${detach} class=${className} style=${styleMap} data-actions=${actions}></div>\n    `;\n}\n\n/**\n * DependencyLines Handles Component\n * @param vido\n */\nfunction DependencyLinesHandles(vido) {\n  const { html, onDestroy, api, state, reuseComponents } = vido;\n  const componentName = 'chart-timeline-dependency-lines-handles';\n\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n    })\n  );\n\n  const handles = [];\n  onDestroy(\n    state.subscribe('_internal.chart.visibleItems', visibleItems => {\n      const handlesProps = [];\n      const allRows = state.get('config.list.rows');\n      for (const item of visibleItems) {\n        // @ts-ignore\n        const row = allRows[item.rowId];\n        if (!row) continue;\n        handlesProps.push({\n          item: item,\n          row\n        });\n      }\n      return reuseComponents(handles, handlesProps, prop => prop, ItemDependencyLineHandle);\n    })\n  );\n\n  return templateProps =>\n    html`\n      <div class=\"${className}\">${handles.map(handle => handle.html())}</div>\n    `;\n}\n\nexport default function DependencyLinesPlugin(options: Options = defaultOptions) {\n  opts = { ...defaultOptions, ...options };\n\n  return function initialize(vido) {\n    state = vido.state;\n    api = vido.api;\n\n    const Lines = vido.createComponent(DependencyLinesLines);\n    state.update('config.wrappers.ChartTimelineGrid', gridWrapper => {\n      return function DependencyLinesGridWrapper(input, data) {\n        const output = vido.html`${input}${Lines.html()}`;\n        return gridWrapper(output, data);\n      };\n    });\n\n    const Handles = vido.createComponent(DependencyLinesHandles);\n    state.update('config.wrappers.ChartTimelineItems', itemsWrapper => {\n      return function DependencyLinesItemsWrapper(input, data) {\n        const output = vido.html`${input}${Handles.html()}`;\n        return itemsWrapper(output, data);\n      };\n    });\n\n    return function destroy() {\n      Lines.destroy();\n      Handles.destroy();\n    };\n  };\n}\n"],"names":["opts","state","api","container","document","createElement","style","position","left","top","width","height","defaultOptions","type","DependencyLinesLines","vido","html","onDestroy","reuseComponents","className","subscribe","getClass","lines","visibleItems","allRows","get","rows","itemId","item","rowId","templateProps","map","line","ItemDependencyLineHandle","props","StyleMap","onChange","Detach","update","Actions","PointerAction","actionProps","shouldDetach","detach","styleMap","updatePosition","time","globalTimeToViewPixelOffset","end","row","change","changedProps","options","leave","prop","subscribeAll","componentActions","getActions","moving","pointerOptions","axis","[object Object]","event","stopPropagation","preventDefault","movementX","movementY","console","log","push","actions","create","DependencyLinesHandles","handles","handlesProps","handle","DependencyLinesPlugin","initialize","Lines","createComponent","gridWrapper","DependencyLinesGridWrapper","input","data","output","Handles","itemsWrapper","DependencyLinesItemsWrapper","destroy"],"mappings":"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"}