{"version":3,"file":"index.esm.js","sources":["../node_modules/@neuronet.io/vido/vido.esm.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/components/Main.ts","../src/components/List/List.ts","../src/components/List/ListColumn.ts","../src/components/List/ListColumnHeader.ts","../src/components/List/ListColumnHeaderResizer.ts","../src/components/List/ListColumnRow.ts","../src/components/List/ListExpander.ts","../src/components/List/ListToggle.ts","../src/components/Chart/Chart.ts","../src/components/Chart/Calendar/ChartCalendar.ts","../src/components/Chart/Calendar/ChartCalendarDate.ts","../src/components/Chart/Timeline/ChartTimeline.ts","../src/components/Chart/Timeline/ChartTimelineGrid.ts","../src/components/Chart/Timeline/ChartTimelineGridBlock.ts","../src/components/Chart/Timeline/ChartTimelineGridRow.ts","../src/components/Chart/Timeline/ChartTimelineItems.ts","../src/components/Chart/Timeline/ChartTimelineItemsRow.ts","../src/components/Chart/Timeline/ChartTimelineItemsRowItem.ts","../src/default-config.ts","../node_modules/dayjs/dayjs.min.js","../src/api/Time.js","../node_modules/deep-state-observer/stringMatcher.ts","../node_modules/deep-state-observer/wildcard-object-scan.ts","../node_modules/deep-state-observer/ObjectPath.ts","../node_modules/deep-state-observer/index.ts","../src/api/Api.js","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nconst directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nconst isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nconst isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nconst reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nconst removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nconst nothing = {};\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nconst boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nclass Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nconst isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nconst createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nclass TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nclass TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nclass SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nconst isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nclass AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nclass AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nclass NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nclass BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nclass PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nclass EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Creates Parts when a template is instantiated.\n */\nclass DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nconst defaultTemplateProcessor = new DefaultTemplateProcessor();\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nfunction templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nconst templateCaches = new Map();\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nconst render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nconst html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nconst svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst templateCaches$1 = new WeakMap();\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nconst cache = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('cache can only be used in text bindings');\n    }\n    let templateCache = templateCaches$1.get(part);\n    if (templateCache === undefined) {\n        templateCache = new WeakMap();\n        templateCaches$1.set(part, templateCache);\n    }\n    const previousValue = part.value;\n    // First, can we update the current TemplateInstance, or do we need to move\n    // the current nodes into the cache?\n    if (previousValue instanceof TemplateInstance) {\n        if (value instanceof TemplateResult &&\n            previousValue.template === part.options.templateFactory(value)) {\n            // Same Template, just trigger an update of the TemplateInstance\n            part.setValue(value);\n            return;\n        }\n        else {\n            // Not the same Template, move the nodes from the DOM into the cache.\n            let cachedTemplate = templateCache.get(previousValue.template);\n            if (cachedTemplate === undefined) {\n                cachedTemplate = {\n                    instance: previousValue,\n                    nodes: document.createDocumentFragment(),\n                };\n                templateCache.set(previousValue.template, cachedTemplate);\n            }\n            reparentNodes(cachedTemplate.nodes, part.startNode.nextSibling, part.endNode);\n        }\n    }\n    // Next, can we reuse nodes from the cache?\n    if (value instanceof TemplateResult) {\n        const template = part.options.templateFactory(value);\n        const cachedTemplate = templateCache.get(template);\n        if (cachedTemplate !== undefined) {\n            // Move nodes out of cache\n            part.setValue(cachedTemplate.nodes);\n            part.commit();\n            // Set the Part value to the TemplateInstance so it'll update it.\n            part.value = cachedTemplate.instance;\n        }\n    }\n    part.setValue(value);\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nconst classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    // handle static classes\n    if (!classMapCache.has(part)) {\n        element.className = committer.strings.join(' ');\n    }\n    const { classList } = element;\n    // remove old classes that no longer apply\n    const oldInfo = classMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n        }\n    }\n    // add new classes\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (!oldInfo || value !== oldInfo[name]) {\n            // We explicitly want a loose truthy check here because\n            // it seems more convenient that '' and 0 are skipped.\n            const method = value ? 'add' : 'remove';\n            classList[method](name);\n        }\n    }\n    classMapCache.set(part, classInfo);\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nconst guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nconst ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nconst repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n\n/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap();\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nconst styleMap = directive((styleInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'style' || part.committer.parts.length > 1) {\n        throw new Error('The `styleMap` directive must be used in the style attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { style } = committer.element;\n    // Handle static styles the first time we see a Part\n    if (!styleMapCache.has(part)) {\n        style.cssText = committer.strings.join(' ');\n    }\n    // Remove old properties that no longer exist in styleInfo\n    const oldInfo = styleMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in styleInfo)) {\n            if (name.indexOf('-') === -1) {\n                // tslint:disable-next-line:no-any\n                style[name] = null;\n            }\n            else {\n                style.removeProperty(name);\n            }\n        }\n    }\n    // Add or update properties\n    for (const name in styleInfo) {\n        if (name.indexOf('-') === -1) {\n            // tslint:disable-next-line:no-any\n            style[name] = styleInfo[name];\n        }\n        else {\n            style.setProperty(name, styleInfo[name]);\n        }\n    }\n    styleMapCache.set(part, styleInfo);\n});\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues$1 = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nconst unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues$1.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues$1.set(part, { value, fragment });\n});\n\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nconst until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processsing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n\nfunction Vido(state, api) {\n    let componentId = 0;\n    const components = {};\n    let actions = [];\n    let app, element;\n    let shouldUpdateCount = 0;\n    const resolved = Promise.resolve();\n    function getActions(instance) {\n        return directive(function actionsDirective(createFunctions, props) {\n            return function partial(part) {\n                const element = part.committer.element;\n                for (const create of createFunctions) {\n                    if (typeof create === 'function') {\n                        const exists = actions.find(action => action.instance === instance && action.componentAction.create === create && action.element === element);\n                        if (!exists) {\n                            if (typeof element.__vido__ !== 'undefined')\n                                delete element.__vido__;\n                            const componentAction = { create, update() { }, destroy() { } };\n                            actions.push({ instance, componentAction, element, props });\n                        }\n                        else {\n                            exists.props = props;\n                        }\n                    }\n                }\n            };\n        });\n    }\n    const vido = {\n        state,\n        api,\n        html,\n        svg,\n        directive,\n        //asyncAppend,\n        //asyncReplace,\n        cache,\n        classMap,\n        guard,\n        ifDefined,\n        repeat,\n        styleMap,\n        unsafeHTML,\n        until,\n        actions(componentActions, props) { },\n        createComponent(component, props) {\n            const instance = component.name + ':' + componentId++;\n            const componentInstance = getComponentInstance(instance);\n            function update() {\n                vido.updateTemplate();\n            }\n            const destroyable = [];\n            function onDestroy(fn) {\n                destroyable.push(fn);\n            }\n            const vidoInstance = Object.assign(Object.assign({}, vido), { update, onDestroy, instance, actions: getActions(instance) });\n            let firstMethods, methods;\n            if (props) {\n                firstMethods = component(props, vidoInstance);\n            }\n            else {\n                firstMethods = component(vidoInstance);\n            }\n            if (typeof firstMethods === 'function') {\n                const destroy = () => {\n                    destroyable.forEach(d => d());\n                };\n                methods = { update: firstMethods, destroy };\n            }\n            else {\n                const originalDestroy = methods.destroy;\n                const destroy = () => {\n                    destroyable.forEach(d => d());\n                    originalDestroy();\n                };\n                methods = Object.assign(Object.assign({}, firstMethods), { destroy });\n            }\n            components[instance] = methods;\n            return componentInstance;\n        },\n        destroyComponent(instance) {\n            if (typeof components[instance].destroy === 'function') {\n                components[instance].destroy();\n            }\n            actions = actions.filter(action => {\n                if (action.instance === instance && typeof action.componentAction.destroy === 'function') {\n                    action.componentAction.destroy(action.element, action.props);\n                }\n                return action.instance !== instance;\n            });\n            delete components[instance];\n        },\n        updateTemplate() {\n            shouldUpdateCount++;\n            const currentShouldUpdateCount = shouldUpdateCount;\n            const self = this;\n            resolved.then(function flush() {\n                if (currentShouldUpdateCount === shouldUpdateCount) {\n                    self.render();\n                    shouldUpdateCount = 0;\n                }\n            });\n        },\n        createApp(instance, el) {\n            element = el;\n            const App = this.createComponent(instance);\n            app = App.instance;\n            this.render();\n            return App;\n        },\n        executeActions() {\n            for (const action of actions) {\n                if (typeof action.element.__vido__ === 'undefined') {\n                    if (typeof action.componentAction.create === 'function') {\n                        const result = action.componentAction.create(action.element, action.props);\n                        if (typeof result !== 'undefined') {\n                            if (typeof result.update === 'function') {\n                                action.componentAction.update = result.update;\n                            }\n                            if (typeof result.destroy === 'function') {\n                                action.componentAction.destroy = result.destroy;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (typeof action.componentAction.update === 'function') {\n                        action.componentAction.update(action.element, action.props);\n                    }\n                }\n            }\n            for (const action of actions) {\n                action.element.__vido__ = { instance: action.instance, props: action.props };\n            }\n        },\n        render() {\n            render(components[app].update(), element);\n            vido.executeActions();\n        }\n    };\n    function getComponentInstance(instance) {\n        return {\n            instance,\n            destroy() {\n                return vido.destroyComponent(instance);\n            },\n            update() {\n                return vido.updateTemplate();\n            },\n            html(props = {}) {\n                return components[instance].update(props);\n            }\n        };\n    }\n    return vido;\n}\n\nexport default Vido;\n//# sourceMappingURL=vido.esm.js.map\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nimport ResizeObserver from 'resize-observer-polyfill';\nexport default function Main(vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html } = vido;\n  const componentName = api.name;\n\n  const periods = ['second', 'minute', 'hour', 'day', 'month', 'year'];\n\n  let ListComponent;\n  onDestroy(state.subscribe('config.components.List', value => (ListComponent = value)));\n  let ChartComponent;\n  onDestroy(state.subscribe('config.components.Chart', value => (ChartComponent = value)));\n\n  const List = createComponent(ListComponent);\n  onDestroy(List.destroy);\n  const Chart = createComponent(ChartComponent);\n  onDestroy(Chart.destroy);\n\n  onDestroy(\n    state.subscribe('config.plugins', plugins => {\n      if (typeof plugins !== 'undefined' && Array.isArray(plugins)) {\n        for (const plugin of plugins) {\n          plugin(state, api);\n        }\n      }\n    })\n  );\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.Main', value => (wrapper = value)));\n\n  const componentActions = api.getActions('');\n  let className, classNameVerticalScroll, style, styleVerticalScroll, styleVerticalScrollArea;\n  let verticalScrollBarElement;\n  let rowsHeight = 0;\n  let resizerActive = false;\n\n  onDestroy(\n    state.subscribe('config.classNames', classNames => {\n      const config = state.get('config');\n      className = api.getClass(componentName, { config });\n      if (resizerActive) {\n        className += ` ${componentName}__list-column-header-resizer--active`;\n      }\n      classNameVerticalScroll = api.getClass('vertical-scroll', { config });\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(['config.height', 'config.headerHeight', '_internal.scrollBarHeight'], () => {\n      const config = state.get('config');\n      const scrollBarHeight = state.get('_internal.scrollBarHeight');\n      const height = config.height - config.headerHeight - scrollBarHeight;\n      state.update('_internal.height', height);\n      style = `--height: ${config.height}px`;\n      styleVerticalScroll = `height: ${height}px; width: ${scrollBarHeight}px; margin-top: ${config.headerHeight}px;`;\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribe('_internal.list.columns.resizer.active', active => {\n      resizerActive = active;\n      className = api.getClass(api.name);\n      if (resizerActive) {\n        className += ` ${api.name}__list-column-header-resizer--active`;\n      }\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(\n      ['config.list.rows;', 'config.chart.items;', 'config.list.rows.*.parentId', 'config.chart.items.*.rowId'],\n      (bulk, eventInfo) => {\n        if (state.get('_internal.flatTreeMap').length && eventInfo.type === 'subscribe') {\n          return;\n        }\n        const configRows = state.get('config.list.rows');\n        const rows = [];\n        for (const rowId in configRows) {\n          rows.push(configRows[rowId]);\n        }\n        api.fillEmptyRowValues(rows);\n        const configItems = state.get('config.chart.items');\n        const items = [];\n        for (const itemId in configItems) {\n          items.push(configItems[itemId]);\n        }\n        const treeMap = api.makeTreeMap(rows, items);\n        state.update('_internal.treeMap', treeMap);\n        state.update('_internal.flatTreeMapById', api.getFlatTreeMapById(treeMap));\n        state.update('_internal.flatTreeMap', api.flattenTreeMap(treeMap));\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  onDestroy(\n    state.subscribeAll(\n      ['config.list.rows.*.expanded', '_internal.treeMap;'],\n      bulk => {\n        const configRows = state.get('config.list.rows');\n        const rowsWithParentsExpanded = api.getRowsFromIds(\n          api.getRowsWithParentsExpanded(\n            state.get('_internal.flatTreeMap'),\n            state.get('_internal.flatTreeMapById'),\n            configRows\n          ),\n          configRows\n        );\n        rowsHeight = api.getRowsHeight(rowsWithParentsExpanded);\n        state.update('_internal.list.rowsHeight', rowsHeight);\n        state.update('_internal.list.rowsWithParentsExpanded', rowsWithParentsExpanded);\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  onDestroy(\n    state.subscribeAll(['_internal.list.rowsWithParentsExpanded', 'config.scroll.top'], () => {\n      const visibleRows = api.getVisibleRows(state.get('_internal.list.rowsWithParentsExpanded'));\n      state.update('_internal.list.visibleRows', visibleRows);\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(['config.scroll.top', '_internal.list.visibleRows'], () => {\n      const top = state.get('config.scroll.top');\n      styleVerticalScrollArea = `height: ${rowsHeight}px; width: 1px`;\n      if (verticalScrollBarElement && verticalScrollBarElement.scrollTop !== top) {\n        verticalScrollBarElement.scrollTop = top;\n      }\n      update();\n    })\n  );\n\n  function generateAndAddPeriodDates(period, internalTime, chartWidth) {\n    const dates = [];\n    let leftGlobal = internalTime.leftGlobal;\n    const rightGlobal = internalTime.rightGlobal;\n    const timePerPixel = internalTime.timePerPixel;\n    let sub = leftGlobal - api.time.date(leftGlobal).startOf(period);\n    let subPx = sub / timePerPixel;\n    let leftPx = 0;\n    let maxWidth = 0;\n    let id = 0;\n    while (leftGlobal < rightGlobal) {\n      const date = {\n        id: id++,\n        sub,\n        subPx,\n        leftGlobal,\n        rightGlobal: api.time\n          .date(leftGlobal)\n          .endOf(period)\n          .valueOf(),\n        width: 0,\n        leftPx: 0,\n        rightPx: 0\n      };\n      date.width = (date.rightGlobal - date.leftGlobal + sub) / timePerPixel;\n      if (date.width > chartWidth) {\n        date.width = chartWidth;\n      }\n      maxWidth = date.width > maxWidth ? date.width : maxWidth;\n      date.leftPx = leftPx;\n      leftPx += date.width;\n      date.rightPx = leftPx;\n      dates.push(date);\n      leftGlobal = date.rightGlobal + 1;\n      sub = 0;\n      subPx = 0;\n    }\n    internalTime.maxWidth[period] = maxWidth;\n    internalTime.dates[period] = dates;\n  }\n\n  onDestroy(\n    state.subscribeAll(\n      [\n        'config.chart.time',\n        '_internal.dimensions.width',\n        'config.scroll.left',\n        '_internal.scrollBarHeight',\n        '_internal.list.width'\n      ],\n      function recalculateTimesAction() {\n        const chartWidth = state.get('_internal.dimensions.width') - state.get('_internal.list.width');\n        const chartInnerWidth = chartWidth - state.get('_internal.scrollBarHeight');\n        const chartHeight = state.get('_internal.dimensions.height') - state.get('config.headerHeight');\n        state.update('_internal.chart.dimensions', {\n          width: chartWidth,\n          innerWidth: chartInnerWidth,\n          height: chartHeight\n        });\n        let time = api.mergeDeep({}, state.get('config.chart.time'));\n        time = api.time.recalculateFromTo(time);\n        const period = time.period;\n        const zoomPercent = time.zoom * 0.01;\n        let scrollLeft = state.get('config.scroll.left');\n        time.timePerPixel = zoomPercent + Math.pow(2, time.zoom);\n        time.totalViewDurationMs = api.time.date(time.to).diff(time.from, 'milliseconds');\n        time.totalViewDurationPx = time.totalViewDurationMs / time.timePerPixel;\n        if (scrollLeft > time.totalViewDurationPx) {\n          scrollLeft = time.totalViewDurationPx - chartWidth;\n        }\n        time.leftGlobal = scrollLeft * time.timePerPixel + time.from;\n        time.rightGlobal = time.leftGlobal + chartWidth * time.timePerPixel;\n        time.leftInner = time.leftGlobal - time.from;\n        time.rightInner = time.rightGlobal - time.from;\n        time.leftPx = time.leftInner / time.timePerPixel;\n        time.rightPx = time.rightInner / time.timePerPixel;\n        const pixelGlobal = Math.round(time.rightGlobal / time.timePerPixel);\n        const pixelTo = Math.round(time.to / time.timePerPixel);\n        if (pixelGlobal > pixelTo) {\n          const diff = time.rightGlobal - time.to;\n          const diffPercent = diff / (time.rightGlobal - time.from);\n          time.timePerPixel = time.timePerPixel - time.timePerPixel * diffPercent;\n          time.leftGlobal = scrollLeft * time.timePerPixel + time.from;\n          time.rightGlobal = time.to;\n          time.rightInner = time.rightGlobal - time.from;\n          time.totalViewDurationMs = time.to - time.from;\n          time.totalViewDurationPx = time.totalViewDurationMs / time.timePerPixel;\n          time.rightInner = time.rightGlobal - time.from;\n          time.rightPx = time.rightInner / time.timePerPixel;\n          time.leftPx = time.leftInner / time.timePerPixel;\n        }\n        generateAndAddPeriodDates(period, time, chartWidth);\n        state.update(`_internal.chart.time`, time);\n        update();\n      }\n    )\n  );\n\n  state.update('_internal.scrollBarHeight', api.getScrollBarHeight());\n\n  const onScroll = {\n    handleEvent(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      state.update(\n        'config.scroll',\n        scroll => {\n          scroll.top = event.target.scrollTop;\n          const scrollInner = state.get('_internal.elements.verticalScrollInner');\n          if (scrollInner) {\n            const scrollHeight = scrollInner.clientHeight;\n            scroll.percent.top = scroll.top / scrollHeight;\n          }\n          return scroll;\n        },\n        { only: ['top', 'percent.top'] }\n      );\n    },\n    passive: false\n  };\n\n  const dimensions = { width: 0, height: 0 };\n  let ro;\n  componentActions.push(element => {\n    ro = new ResizeObserver((entries, observer) => {\n      const width = element.clientWidth;\n      const height = element.clientHeight;\n      if (dimensions.width !== width || dimensions.height !== height) {\n        dimensions.width = width;\n        dimensions.height = height;\n        state.update('_internal.dimensions', dimensions);\n      }\n    });\n    ro.observe(element);\n    state.update('_internal.elements.main', element);\n  });\n\n  onDestroy(() => {\n    ro.disconnect();\n  });\n\n  function bindScrollElement(element) {\n    verticalScrollBarElement = element;\n    state.update('_internal.elements.verticalScroll', element);\n  }\n  function bindScrollInnerElement(element) {\n    state.update('_internal.elements.verticalScrollInner', element);\n  }\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} style=${style} @scroll=${onScroll} data-actions=${actions(componentActions)}>\n          ${List.html()}${Chart.html()}\n          <div\n            class=${classNameVerticalScroll}\n            style=${styleVerticalScroll}\n            @scroll=${onScroll}\n            data-action=${actions([bindScrollElement])}\n          >\n            <div style=${styleVerticalScrollArea} data-actions=${actions([bindScrollInnerElement])} />\n          </div>\n        </div>\n      `,\n      { props: {}, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function List(vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html, repeat } = vido;\n\n  const componentName = 'list';\n  const componentActions = api.getActions(componentName);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.List', value => (wrapper = value)));\n\n  let ListColumnComponent;\n  onDestroy(state.subscribe('config.components.ListColumn', value => (ListColumnComponent = value)));\n\n  let className;\n  let list, percent;\n  onDestroy(\n    state.subscribe('config.list', () => {\n      list = state.get('config.list');\n      percent = list.columns.percent;\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { list });\n      update();\n    })\n  );\n\n  let columns,\n    listColumns = [];\n  onDestroy(\n    state.subscribe('config.list.columns.data;', data => {\n      // only 'config.list.columns.data;' because listcolumn component will watch nested values\n      listColumns.forEach(ls => ls.component.destroy());\n      columns = Object.keys(data);\n      listColumns = columns.map(columnId => {\n        const component = createComponent(ListColumnComponent, {\n          columnId\n        });\n        return { id: columnId, component };\n      });\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    listColumns.forEach(c => c.component.destroy());\n  });\n\n  let style;\n  onDestroy(\n    state.subscribe('config.height', height => {\n      style = `height: ${height}px`;\n      update();\n    })\n  );\n\n  function onScroll(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    if (event.type === 'scroll') {\n      state.update('config.scroll.top', event.target.scrollTop);\n    } else {\n      const wheel = api.normalizeMouseWheelEvent(event);\n      state.update('config.scroll.top', top => {\n        return api.limitScroll('top', (top += wheel.y * state.get('config.scroll.yMultiplier')));\n      });\n    }\n  }\n\n  let width;\n  function getWidth(element) {\n    if (!width) {\n      width = element.clientWidth;\n      if (percent === 0) {\n        width = 0;\n      }\n      state.update('_internal.list.width', width);\n      state.update('_internal.elements.list', element);\n    }\n  }\n\n  componentActions.push(element => {\n    state.update('_internal.elements.list', element);\n    getWidth(element);\n    return {\n      update: getWidth\n    };\n  });\n\n  return props =>\n    wrapper(\n      list.columns.percent > 0\n        ? html`\n            <div\n              class=${className}\n              data-actions=${actions(componentActions)}\n              style=${style}\n              @scroll=${onScroll}\n              @wheel=${onScroll}\n            >\n              ${listColumns.map(c => c.component.html())}\n            </div>\n          `\n        : null,\n      { vido, props: {}, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ListColumnComponent({ columnId }, vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html, repeat } = vido;\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ListColumn', value => (wrapper = value)));\n\n  let ListColumnRowComponent;\n  onDestroy(state.subscribe('config.components.ListColumnRow', value => (ListColumnRowComponent = value)));\n  let ListColumnHeaderComponent;\n  onDestroy(state.subscribe('config.components.ListColumnHeader', value => (ListColumnHeaderComponent = value)));\n\n  let column,\n    columnPath = `config.list.columns.data.${columnId}`;\n  onDestroy(\n    state.subscribe(columnPath, val => {\n      column = val;\n      update();\n    })\n  );\n\n  const componentName = 'list-column';\n  const rowsComponentName = componentName + '-rows';\n  const componentActions = api.getActions(componentName);\n  const rowsActions = api.getActions(rowsComponentName);\n  let className, classNameContainer, calculatedWidth, width, styleContainer;\n\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { column });\n      classNameContainer = api.getClass(rowsComponentName, { column });\n      update();\n    })\n  );\n\n  let visibleRows = [];\n  onDestroy(\n    state.subscribe('_internal.list.visibleRows;', val => {\n      visibleRows.forEach(row => row.component.destroy());\n      visibleRows = val.map(row => ({\n        id: row.id,\n        component: createComponent(ListColumnRowComponent, { columnId, rowId: row.id })\n      }));\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    visibleRows.forEach(row => row.component.destroy());\n  });\n\n  onDestroy(\n    state.subscribeAll(\n      [\n        'config.list.columns.percent',\n        'config.list.columns.resizer.width',\n        `config.list.columns.data.${column.id}.width`,\n        'config.height',\n        'config.headerHeight'\n      ],\n      bulk => {\n        const list = state.get('config.list');\n        calculatedWidth = list.columns.data[column.id].width * list.columns.percent * 0.01;\n        width = `width: ${calculatedWidth + list.columns.resizer.width}px`;\n        styleContainer = `height: ${state.get('config.height')}px`;\n      },\n      { bulk: true }\n    )\n  );\n\n  const ListColumnHeader = createComponent(ListColumnHeaderComponent, { columnId });\n  onDestroy(ListColumnHeader.destroy);\n\n  return props =>\n    wrapper(\n      html`\n        <div\n          class=${className}\n          data-actions=${actions(componentActions, { column, state: state, api: api })}\n          style=${width}\n        >\n          ${ListColumnHeader.html()}\n          <div class=${classNameContainer} style=${styleContainer} data-actions=${actions(rowsActions, { api, state })}>\n            ${visibleRows.map(row => row.component.html())}\n          </div>\n        </div>\n      `,\n      { vido, props: { columnId }, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ListColumnHeader({ columnId }, vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html } = vido;\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ListColumnHeader', value => (wrapper = value)));\n\n  const componentName = 'list-column-header';\n  const componentActions = api.getActions(componentName);\n\n  let ListColumnHeaderResizerComponent;\n  onDestroy(\n    state.subscribe('config.components.ListColumnHeaderResizer', value => (ListColumnHeaderResizerComponent = value))\n  );\n  const ListColumnHeaderResizer = createComponent(ListColumnHeaderResizerComponent, { columnId });\n  onDestroy(ListColumnHeaderResizer.destroy);\n\n  let ListExpanderComponent;\n  onDestroy(state.subscribe('config.components.ListExpander', value => (ListExpanderComponent = value)));\n  const ListExpander = createComponent(ListExpanderComponent, {});\n  onDestroy(ListExpander.destroy);\n\n  let column;\n  onDestroy(\n    state.subscribe(`config.list.columns.data.${columnId}`, val => {\n      column = val;\n      update();\n    })\n  );\n\n  let className, contentClass, style;\n  onDestroy(\n    state.subscribeAll(['config.classNames', 'config.headerHeight'], () => {\n      const value = state.get('config');\n      className = api.getClass(componentName, { column });\n      contentClass = api.getClass(componentName + '-content', { column });\n      style = `--height: ${value.headerHeight}px;`;\n      update();\n    })\n  );\n\n  function withExpander() {\n    return html`\n      <div class=${contentClass}>\n        ${ListExpander.html()}${ListColumnHeaderResizer.html(column)}\n      </div>\n    `;\n  }\n\n  function withoutExpander() {\n    return html`\n      <div class=${contentClass}>\n        ${ListColumnHeaderResizer.html(column)}\n      </div>\n    `;\n  }\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} style=${style} data-actions=${actions(componentActions, { column, api, state })}>\n          ${typeof column.expander === 'boolean' && column.expander ? withExpander() : withoutExpander()}\n        </div>\n      `,\n      { vido, props: { columnId }, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ListColumnHeaderResizer({ columnId }, vido) {\n  const { api, state, onDestroy, update, html, actions } = vido;\n\n  const componentName = 'list-column-header-resizer';\n  const componentActions = api.getActions(componentName);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ListColumnHeaderResizer', value => (wrapper = value)));\n\n  let column;\n  onDestroy(\n    state.subscribe(`config.list.columns.data.${columnId}`, val => {\n      column = val;\n      update();\n    })\n  );\n\n  let className, containerClass, dotsClass, dotClass, lineClass, calculatedWidth, width, dotsWidth;\n  let inRealTime = false;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { column });\n      containerClass = api.getClass(componentName + '-container', { column });\n      dotsClass = api.getClass(componentName + '-dots', { column });\n      dotClass = api.getClass(componentName + '-dots-dot', { column });\n      lineClass = api.getClass(componentName + '-line', { column });\n      update();\n    })\n  );\n  onDestroy(\n    state.subscribeAll(\n      [\n        `config.list.columns.data.${column.id}.width`,\n        'config.list.columns.percent',\n        'config.list.columns.resizer.width',\n        'config.list.columns.resizer.inRealTime'\n      ],\n      (value, path) => {\n        const list = state.get('config.list');\n        calculatedWidth = column.width * list.columns.percent * 0.01;\n        width = 'width:' + calculatedWidth + 'px';\n        dotsWidth = `width: ${list.columns.resizer.width}px`;\n        inRealTime = list.columns.resizer.inRealTime;\n        update();\n      }\n    )\n  );\n\n  let dots = [1, 2, 3, 4, 5, 6, 7, 8];\n  onDestroy(\n    state.subscribe('config.list.columns.resizer.dots', value => {\n      dots = [];\n      for (let i = 0; i < value; i++) {\n        dots.push(i);\n      }\n      update();\n    })\n  );\n\n  let isMoving = false;\n  let left = calculatedWidth;\n  let lineStyle = `--display: none; --left: ${left}px;`;\n  const columnWidthPath = `config.list.columns.data.${column.id}.width`;\n\n  function onMouseDown(event) {\n    isMoving = true;\n    state.update('_internal.list.columns.resizer.active', true);\n    if (isMoving) {\n      lineStyle = `--display:block; --left: ${left}px;`;\n    } else {\n      lineStyle = `--display:none; --left: 0px;`;\n    }\n  }\n\n  function onMouseMove(event) {\n    if (isMoving) {\n      left += event.movementX;\n      if (left < 0) {\n        left = 0;\n      }\n      if (inRealTime) {\n        state.update(columnWidthPath, left);\n      }\n    }\n  }\n\n  function onMouseUp(event) {\n    if (isMoving) {\n      state.update('_internal.list.columns.resizer.active', false);\n      state.update(columnWidthPath, left);\n      isMoving = false;\n    }\n  }\n\n  document.body.addEventListener('mousemove', onMouseMove);\n  onDestroy(() => document.body.removeEventListener('mousemove', onMouseMove));\n  document.body.addEventListener('mouseup', onMouseUp);\n  onDestroy(() => document.body.removeEventListener('mouseup', onMouseUp));\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} data-actions=${actions(componentActions, { column, api, state })}>\n          <div class=${containerClass}>\n            ${column.header.html\n              ? html`\n                  ${column.header.html}\n                `\n              : column.header.content}\n          </div>\n          <div class=${dotsClass} style=${'--' + dotsWidth} @mousedown=${onMouseDown}>\n            ${dots.map(\n              dot =>\n                html`\n                  <div class=${dotClass} />\n                `\n            )}\n          </div>\n        </div>\n      `,\n      { vido, props: { columnId }, temlateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ListColumnRow({ rowId, columnId }, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ListColumnRow', value => (wrapper = value)));\n\n  let ListExpanderComponent;\n  onDestroy(state.subscribe('config.components.ListExpander', value => (ListExpanderComponent = value)));\n\n  let row,\n    rowPath = `_internal.flatTreeMapById.${rowId}`;\n  let style;\n  onDestroy(\n    state.subscribe(rowPath, value => {\n      row = value;\n      style = `--height: ${row.height}px;`;\n      for (let parentId of row._internal.parents) {\n        const parent = state.get(`_internal.flatTreeMapById.${parentId}`);\n        if (typeof parent.style === 'object' && parent.style.constructor.name === 'Object') {\n          if (typeof parent.style.children === 'string') {\n            style += parent.style.children;\n          }\n        }\n      }\n      if (\n        typeof row.style === 'object' &&\n        row.style.constructor.name === 'Object' &&\n        typeof row.style.current === 'string'\n      ) {\n        style += row.style.current;\n      }\n      update();\n    })\n  );\n\n  const ListExpander = createComponent(ListExpanderComponent, { row });\n  onDestroy(ListExpander.destroy);\n\n  let column,\n    columnPath = `config.list.columns.data.${columnId}`;\n  onDestroy(\n    state.subscribe(columnPath, val => {\n      column = val;\n      update();\n    })\n  );\n\n  const componentName = 'list-column-row';\n  const componentActions = api.getActions(componentName);\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { row, column });\n      update();\n    })\n  );\n\n  function getHtml() {\n    if (typeof column.data === 'function')\n      return html`\n        ${column.data(row)}\n      `;\n    return html`\n      ${row[column.data]}\n    `;\n  }\n\n  function getText() {\n    if (typeof column.data === 'function') return column.data(row);\n    return row[column.data];\n  }\n\n  return props =>\n    wrapper(\n      html`\n        <div\n          class=${className}\n          style=${style}\n          data-actions=${actions(componentActions, {\n            column,\n            row,\n            api,\n            state\n          })}\n        >\n          ${typeof column.expander === 'boolean' && column.expander ? ListExpander.html() : ''}\n          ${typeof column.html === 'string' ? getHtml() : getText()}\n        </div>\n      `,\n      { vido, props: { rowId, columnId }, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ListExpander(props, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n  const componentName = 'list-expander';\n  const componentActions = api.getActions(componentName);\n  let className,\n    padding,\n    width,\n    paddingClass,\n    children = [];\n\n  let ListToggleComponent;\n  onDestroy(state.subscribe('config.components.ListToggle', value => (ListToggleComponent = value)));\n  const ListToggle = createComponent(ListToggleComponent, props.row ? { row: props.row } : {});\n  onDestroy(ListToggle.destroy);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ListExpander', value => (wrapper = value)));\n\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      if (props.row) {\n        className = api.getClass(componentName, { row: props.row });\n        paddingClass = api.getClass(componentName + '-padding', { row: props.row });\n      } else {\n        className = api.getClass(componentName);\n        paddingClass = api.getClass(componentName + '-padding');\n      }\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(['config.list.expander.padding'], value => {\n      padding = value;\n      update();\n    })\n  );\n  if (props.row) {\n    onDestroy(\n      state.subscribe(`_internal.list.rows.${props.row.id}.parentId`, parentId => {\n        width = 'width:' + props.row._internal.parents.length * padding + 'px';\n        children = props.row._internal.children;\n        update();\n      })\n    );\n  } else {\n    width = 'width:0px';\n    children = [];\n  }\n\n  return templateProps =>\n    wrapper(\n      html`\n        <div class=${className} data-action=${actions(componentActions, { row: props.row, api, state })}>\n          <div class=${paddingClass} style=${width}></div>\n          ${children.length || !props.row ? ListToggle.html() : ''}\n        </div>\n      `,\n      { vido, props, templateProps }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ListToggle(props, vido) {\n  const { api, state, onDestroy, actions, update, html, unsafeHTML } = vido;\n  const componentName = 'list-expander-toggle';\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ListToggle', value => (wrapper = value)));\n\n  const componentActions = api.getActions(componentName);\n  let className, style;\n  let classNameOpen, classNameClosed;\n  let expanded = false;\n  let iconOpen, iconClosed;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      if (props.row) {\n        className = api.getClass(componentName, { row: props.row });\n        classNameOpen = api.getClass(componentName + '-open', { row: props.row });\n        classNameClosed = api.getClass(componentName + '-closed', { row: props.row });\n      } else {\n        className = api.getClass(componentName);\n        classNameOpen = api.getClass(componentName + '-open');\n        classNameClosed = api.getClass(componentName + '-closed');\n      }\n\n      update();\n    })\n  );\n  onDestroy(\n    state.subscribeAll(['config.list.expander.size', 'config.list.expander.icons'], () => {\n      const expander = state.get('config.list.expander');\n      style = `--size: ${expander.size}px`;\n      iconOpen = expander.icons.open;\n      iconClosed = expander.icons.closed;\n      update();\n    })\n  );\n\n  if (props.row) {\n    onDestroy(\n      state.subscribe(`config.list.rows.${props.row.id}.expanded`, isExpanded => {\n        expanded = isExpanded;\n        update();\n      })\n    );\n  } else {\n    onDestroy(\n      state.subscribe(\n        'config.list.rows.*.expanded',\n        bulk => {\n          for (const rowExpanded of bulk) {\n            if (rowExpanded.value) {\n              expanded = true;\n              break;\n            }\n          }\n          update();\n        },\n        { bulk: true }\n      )\n    );\n  }\n\n  function toggle() {\n    expanded = !expanded;\n    if (props.row) {\n      state.update(`config.list.rows.${props.row.id}.expanded`, expanded);\n    } else {\n      state.update(\n        `config.list.rows`,\n        rows => {\n          for (const rowId in rows) {\n            rows[rowId].expanded = expanded;\n          }\n          return rows;\n        },\n        { only: ['*.expanded'] }\n      );\n    }\n  }\n\n  return templateProps =>\n    wrapper(\n      html`\n        <div\n          class=${className}\n          data-actions=${actions(componentActions, { row: props.row, api, state })}\n          style=${style}\n          @click=${toggle}\n        >\n          ${expanded\n            ? html`\n                <div class=${classNameOpen}>\n                  ${unsafeHTML(iconOpen)}\n                </div>\n              `\n            : html`\n                <div class=${classNameClosed}>\n                  ${unsafeHTML(iconClosed)}\n                </div>\n              `}\n        </div>\n      `,\n      { vido, props, templateProps }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function Chart(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n  const componentName = 'chart';\n\n  const ChartCalendarComponent = state.get('config.components.ChartCalendar');\n  const ChartTimelineComponent = state.get('config.components.ChartTimeline');\n\n  const Calendar = createComponent(ChartCalendarComponent);\n  onDestroy(Calendar.destroy);\n  const Timeline = createComponent(ChartTimelineComponent);\n  onDestroy(Timeline.destroy);\n\n  let className,\n    classNameScroll,\n    classNameScrollInner,\n    scrollElement,\n    styleScroll = '',\n    styleScrollInner = '',\n    componentActions = api.getActions(componentName);\n\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName);\n      classNameScroll = api.getClass('horizontal-scroll');\n      classNameScrollInner = api.getClass('horizontal-scroll-inner');\n      update();\n    })\n  );\n  onDestroy(\n    state.subscribe('config.scroll.left', left => {\n      if (scrollElement && scrollElement.scrollLeft !== left) {\n        scrollElement.scrollLeft = left;\n      }\n      update();\n    })\n  );\n\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.dimensions.width', '_internal.chart.time.totalViewDurationPx'],\n      function horizontalScroll(value, eventInfo) {\n        styleScroll = `width: ${state.get('_internal.chart.dimensions.width')}px`;\n        styleScrollInner = `width: ${state.get('_internal.chart.time.totalViewDurationPx')}px; height:1px`;\n        update();\n      }\n    )\n  );\n\n  const onScroll = {\n    handleEvent(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      let scrollLeft, scrollTop;\n      if (event.type === 'scroll') {\n        state.update('config.scroll.left', event.target.scrollLeft);\n        scrollLeft = event.target.scrollLeft;\n      } else {\n        const wheel = api.normalizeMouseWheelEvent(event);\n        const xMultiplier = state.get('config.scroll.xMultiplier');\n        const yMultiplier = state.get('config.scroll.yMultiplier');\n        if (event.shiftKey && wheel.y) {\n          state.update('config.scroll.left', left => {\n            return (scrollLeft = api.limitScroll('left', (left += wheel.y * xMultiplier)));\n          });\n        } else if (wheel.x) {\n          state.update('config.scroll.left', left => {\n            return (scrollLeft = api.limitScroll('left', (left += wheel.x * xMultiplier)));\n          });\n        } else {\n          state.update('config.scroll.top', top => {\n            return (scrollTop = api.limitScroll('top', (top += wheel.y * yMultiplier)));\n          });\n        }\n      }\n      const chart = state.get('_internal.elements.chart');\n      const scrollInner = state.get('_internal.elements.horizontalScrollInner');\n      if (chart) {\n        const scrollLeft = state.get('config.scroll.left');\n        let percent = 0;\n        if (scrollLeft) {\n          percent = Math.round((scrollLeft / (scrollInner.clientWidth - chart.clientWidth)) * 100);\n          if (percent > 100) percent = 100;\n        }\n        state.update('config.scroll.percent.left', percent);\n      }\n    },\n    passive: false\n  };\n\n  function bindElement(element) {\n    scrollElement = element;\n    state.update('_internal.elements.horizontalScroll', element);\n  }\n\n  function bindInnerScroll(element) {\n    state.update('_internal.elements.horizontalScrollInner', element);\n  }\n\n  componentActions.push(element => {\n    state.update('_internal.elements.chart', element);\n  });\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { api, state })} @wheel=${onScroll}>\n      ${Calendar.html()}${Timeline.html()}\n      <div class=${classNameScroll} style=${styleScroll} data-actions=${actions([bindElement])} @scroll=${onScroll}>\n        <div class=${classNameScrollInner} style=${styleScrollInner} data-actions=${actions([bindInnerScroll])} />\n      </div>\n    </div>\n  `;\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function Calendar(vido) {\n  const { api, state, onDestroy, actions, update, createComponent, html, repeat } = vido;\n  const componentName = 'chart-calendar';\n  const componentActions = api.getActions(componentName);\n\n  const ChartCalendarDateComponent = state.get('config.components.ChartCalendarDate');\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartCalendar', value => (wrapper = value)));\n\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName);\n      update();\n    })\n  );\n\n  let headerHeight,\n    style = '';\n  onDestroy(\n    state.subscribe('config.headerHeight', value => {\n      headerHeight = value;\n      style = `height: ${headerHeight}px;`;\n      update();\n    })\n  );\n\n  let period;\n  onDestroy(state.subscribe('config.chart.time.period', value => (period = value)));\n\n  let periodDates,\n    periodDatesComponents = [];\n  onDestroy(\n    state.subscribe(`_internal.chart.time.dates.${period}`, value => {\n      if (value) {\n        periodDates = value;\n        periodDatesComponents.forEach(date => date.component.destroy());\n        periodDatesComponents = [];\n        for (const date of periodDates) {\n          periodDatesComponents.push({ id: date.id, component: createComponent(ChartCalendarDateComponent, { date }) });\n        }\n        update();\n      }\n    })\n  );\n  onDestroy(() => {\n    periodDatesComponents.forEach(date => date.component.destroy());\n  });\n\n  componentActions.push(element => {\n    state.update('_internal.elements.calendar', element);\n  });\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} data-actions=${actions(componentActions)} style=${style}>\n          ${repeat(periodDatesComponents, d => d.id, d => d.component.html())}\n        </div>\n      `,\n      { props: {}, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function CalendarDate({ date }, vido) {\n  const { api, state, onDestroy, actions, update, html } = vido;\n\n  const componentName = 'chart-calendar-date';\n  const componentActions = api.getActions(componentName);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartCalendarDate', value => (wrapper = value)));\n\n  let className,\n    formattedClassName,\n    formattedYearClassName,\n    formattedMonthClassName,\n    formattedDayClassName,\n    formattedDayWordClassName;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { date });\n      if (api.time.date(date.leftGlobal).format('YYYY-MM-DD') === api.time.date().format('YYYY-MM-DD')) {\n        className += ' current';\n      }\n      if (\n        api.time\n          .date(date.leftGlobal)\n          .subtract(1, 'day')\n          .format('YYYY-MM-DD') === api.time.date().format('YYYY-MM-DD')\n      ) {\n        className += ' next';\n      }\n      if (\n        api.time\n          .date(date.leftGlobal)\n          .add(1, 'day')\n          .format('YYYY-MM-DD') === api.time.date().format('YYYY-MM-DD')\n      ) {\n        className += ' previous';\n      }\n      formattedClassName = api.getClass(`${componentName}-formatted`, { date });\n      formattedYearClassName = api.getClass(`${componentName}-formatted-year`, { date });\n      formattedMonthClassName = api.getClass(`${componentName}-formatted-month`, { date });\n      formattedDayClassName = api.getClass(`${componentName}-formatted-day`, { date });\n      formattedDayWordClassName = api.getClass(`${componentName}-formatted-day-word`, { date });\n      update();\n    })\n  );\n\n  let time, small, smallFormatted, year, month, day, dayWord, style, daySize;\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.time', 'config.chart.calendar.vertical.smallFormat'],\n      function updateDate() {\n        time = state.get('_internal.chart.time');\n        daySize = time.zoom <= 22 ? 18 : 13;\n        const dateMod = api.time.date(date.leftGlobal);\n        const maxWidth = time.maxWidth[time.period];\n        small = maxWidth <= 40;\n        const smallFormat = state.get('config.chart.calendar.vertical.smallFormat');\n        smallFormatted = dateMod.format(smallFormat);\n        year = dateMod.format('YYYY');\n        month = dateMod.format('MMMM');\n        day = dateMod.format('DD');\n        dayWord = dateMod.format('dddd');\n        if (maxWidth <= 70) {\n          year = dateMod.format('YY');\n          month = dateMod.format('MMM');\n          day = dateMod.format('DD');\n          dayWord = dateMod.format('ddd');\n        } else if (maxWidth <= 150) {\n          dayWord = dateMod.format('ddd');\n        }\n        style = `width: ${date.width}px; margin-left:-${date.subPx}px; --day-size: ${daySize}px`;\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} style=${style} data-actions=${actions(componentActions, { date, api, state })}>\n          ${small\n            ? html`\n                <div class=${formattedClassName} style=\"transform: rotate(90deg);\">${smallFormatted}</div>\n              `\n            : html`\n                <div class=${formattedClassName}>\n                  <div class=${formattedYearClassName}>${year}</div>\n                  <div class=${formattedMonthClassName}>${month}</div>\n                  <div class=${formattedDayClassName}>${day}</div>\n                  <div class=${formattedDayWordClassName}>${dayWord}</div>\n                </div>\n              `}\n        </div>\n      `,\n      { props: {}, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function Gantt(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent } = vido;\n  const componentName = 'chart-timeline';\n  const componentActions = api.getActions(componentName);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimeline', value => (wrapper = value)));\n\n  const GridComponent = state.get('config.components.ChartTimelineGrid');\n  const ItemsComponent = state.get('config.components.ChartTimelineItems');\n\n  const Grid = createComponent(GridComponent);\n  onDestroy(Grid.destroy);\n  const Items = createComponent(ItemsComponent);\n  onDestroy(Items.destroy);\n\n  let className, classNameInner;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName);\n      classNameInner = api.getClass(componentName + '-inner');\n      update();\n    })\n  );\n\n  let style = '',\n    styleInner = '';\n  onDestroy(\n    state.subscribeAll(['_internal.height', '_internal.list.rowsHeight'], () => {\n      style = `height: ${state.get('_internal.height')}px`;\n      styleInner = `height: ${state.get('_internal.list.rowsHeight')}px;`;\n      update();\n    })\n  );\n\n  componentActions.push(element => {\n    state.update('_internal.elements.gantt', element);\n  });\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} style=${style} data-actions=${actions(componentActions)} @wheel=${api.onScroll}>\n          <div class=${classNameInner} style=${styleInner}>\n            ${Grid.html()}${Items.html()}\n          </div>\n        </div>\n      `,\n      { props: {}, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function GanttGrid(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  const componentName = 'chart-timeline-grid';\n  const componentActions = api.getActions(componentName);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimelineGrid', value => (wrapper = value)));\n\n  const GridRowComponent = state.get('config.components.ChartTimelineGridRow');\n\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n      update();\n    })\n  );\n\n  let height, style;\n  onDestroy(\n    state.subscribe('_internal.height', h => {\n      height = h;\n      style = `height: ${height}px`;\n      update();\n    })\n  );\n\n  let period;\n  onDestroy(state.subscribe('config.chart.time.period', value => (period = value)));\n\n  let rows,\n    rowsComponents = [];\n  onDestroy(\n    state.subscribeAll(\n      [`_internal.chart.time.dates.${period}`, '_internal.list.visibleRows', 'config.chart.grid.block'],\n      function generateBlocks() {\n        const rowsData = state.get('_internal.list.visibleRows');\n        const periodDates = state.get(`_internal.chart.time.dates.${period}`);\n        if (!periodDates) {\n          return;\n        }\n        rowsComponents.forEach(row => row.component.destroy());\n        rowsComponents = [];\n        let top = 0;\n        rows = [];\n        for (const rowId in rowsData) {\n          const rowData = rowsData[rowId];\n          const blocks = [];\n          let index = 0;\n          for (const date of periodDates) {\n            blocks.push({ id: index++, date, row: rowData, top });\n          }\n          const row = { id: rowData.id, blocks, rowData, top };\n          rows.push(row);\n          rowsComponents.push({ id: rowData.id, component: createComponent(GridRowComponent, { row }) });\n          top += rowData.height;\n          update();\n        }\n      },\n      { bulk: true }\n    )\n  );\n\n  componentActions.push(element => {\n    state.update('_internal.elements.grid');\n  });\n\n  onDestroy(() => {\n    rowsComponents.forEach(row => row.component.destroy());\n  });\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} data-actions=${actions(componentActions, { api, state })} style=${style}>\n          ${rowsComponents.map(r => r.component.html())}\n        </div>\n      `,\n      { props: {}, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function GanttGridBlock({ row, time, top }, vido) {\n  const { api, state, onDestroy, actions, update, html } = vido;\n  const componentName = 'chart-timeline-grid-block';\n  const componentActions = api.getActions(componentName, { row, time, top });\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimelineGridBlock', value => (wrapper = value)));\n\n  let className = api.getClass(componentName, { row });\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n      if (\n        time.leftGlobal ===\n        api.time\n          .date()\n          .startOf('day')\n          .valueOf()\n      ) {\n        className += ' current';\n      }\n      update();\n    })\n  );\n\n  let style = `width: ${time.width}px;height: 100%;margin-left:-${time.subPx}px;`;\n  for (const parentId of row.rowData._internal.parents) {\n    const parent = state.get('config.list.rows.' + parentId);\n    if (typeof parent.style === 'object' && parent.style.constructor.name === 'Object') {\n      if (typeof parent.style.gridBlock === 'object' && parent.style.gridBlock.constructor.name === 'Object') {\n        if (typeof parent.style.gridBlock.children === 'string') {\n          style += parent.style.gridBlock.children;\n        }\n      }\n    }\n  }\n  if (typeof row.rowData.style === 'object' && row.rowData.style.constructor.name === 'Object') {\n    if (typeof row.rowData.style.gridBlock === 'object' && row.rowData.style.gridBlock.constructor.name === 'Object') {\n      if (typeof row.rowData.style.gridBlock.current === 'string') {\n        style += row.rowData.style.gridBlock.current;\n      }\n    }\n  }\n  return props =>\n    wrapper(\n      html`\n        <div\n          class=${className}\n          data-actions=${actions(componentActions, { row, time, top, api, state })}\n          style=${style}\n        />\n      `,\n      { props: { row, time, top }, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function GanttGridRow({ row }, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  const componentName = 'chart-timeline-grid-row';\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimelineGridRow', value => (wrapper = value)));\n\n  const GridBlockComponent = state.get('config.components.ChartTimelineGridBlock');\n\n  const componentActions = api.getActions(componentName);\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', value => {\n      className = api.getClass(componentName, { row });\n      update();\n    })\n  );\n\n  let rowsBlocksComponents = [];\n  for (const block of row.blocks) {\n    rowsBlocksComponents.push({\n      id: block.id,\n      component: createComponent(GridBlockComponent, { row, time: block.date, top: block.top })\n    });\n  }\n\n  onDestroy(() => {\n    rowsBlocksComponents.forEach(row => row.component.destroy());\n  });\n\n  let style = `height: ${row.rowData.height}px;`;\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} data-actions=${actions(componentActions, { row, api, state })} style=${style}>\n          ${rowsBlocksComponents.map(r => r.component.html())}\n        </div>\n      `,\n      { vido, props: { row }, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function GnattItems(vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n  const componentName = 'chart-timeline-items';\n  const componentActions = api.getActions(componentName);\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimelineItems', value => (wrapper = value)));\n\n  const ItemsRowComponent = state.get('config.components.ChartTimelineItemsRow');\n\n  let className;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName);\n      update();\n    })\n  );\n\n  let rows = [],\n    rowsComponents = [];\n  onDestroy(\n    state.subscribe('_internal.list.visibleRows;', visibleRows => {\n      rows = visibleRows;\n      rowsComponents.forEach(row => row.component.destroy());\n      rowsComponents = [];\n      for (const row of rows) {\n        rowsComponents.push({ id: row.id, component: createComponent(ItemsRowComponent, { rowId: row.id }) });\n      }\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    rowsComponents.forEach(row => row.component.destroy());\n  });\n\n  return props => html`\n    <div class=${className} data-actions=${actions(componentActions, { api, state })}>\n      ${rowsComponents.map(r => r.component.html())}\n    </div>\n  `;\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function GanttItemsRow({ rowId }, vido) {\n  const { api, state, onDestroy, actions, update, html, createComponent, repeat } = vido;\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimelineItemsRow', value => (wrapper = value)));\n\n  const ItemComponent = state.get('config.components.ChartTimelineItemsRowItem');\n\n  let rowPath = `_internal.flatTreeMapById.${rowId}`;\n  let row, element, style, styleInner;\n  onDestroy(\n    state.subscribeAll([rowPath, '_internal.chart'], bulk => {\n      row = state.get(rowPath);\n      const chart = state.get('_internal.chart');\n      style = `width:${chart.dimensions.width}px;height:${row.height}px;--row-height:${row.height}px;`;\n      styleInner = `width: ${chart.time.totalViewDurationPx}px;height: 100%;`;\n      if (element) {\n        element.scrollLeft = chart.time.leftPx;\n      }\n      update();\n    })\n  );\n\n  let items,\n    itemComponents = [];\n  onDestroy(\n    state.subscribe(`_internal.flatTreeMapById.${rowId}._internal.items;`, value => {\n      items = value;\n      itemComponents.forEach(item => item.component.destroy());\n      itemComponents = [];\n      for (const item of items) {\n        itemComponents.push({ id: item.id, component: createComponent(ItemComponent, { rowId, itemId: item.id }) });\n      }\n      update();\n    })\n  );\n\n  onDestroy(() => {\n    itemComponents.forEach(item => item.component.destroy());\n  });\n\n  const componentName = 'chart-timeline-items-row';\n  const componentNameInner = componentName + '-inner';\n  const componentActions = api.getActions(componentName);\n  let className, classNameInner;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { row });\n      classNameInner = api.getClass(componentNameInner, { row });\n      update();\n    })\n  );\n\n  return props =>\n    wrapper(\n      html`\n        <div class=${className} data-actions=${actions(componentActions)} style=${style}>\n          <div class=${classNameInner} style=${styleInner}>\n            ${repeat(itemComponents, i => i.id, i => i.component.html())}\n          </div>\n        </div>\n      `,\n      { props: { rowId }, vido, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function GanttItemsRowItem({ rowId, itemId }, vido) {\n  const { api, state, onDestroy, actions, update, html } = vido;\n\n  let wrapper;\n  onDestroy(state.subscribe('config.wrappers.ChartTimelineItemsRowItem', value => (wrapper = value)));\n\n  let row,\n    rowPath = `config.list.rows.${rowId}`;\n  onDestroy(\n    state.subscribe(rowPath, value => {\n      row = value;\n      update();\n    })\n  );\n  let item,\n    itemPath = `config.chart.items.${itemId}`;\n  onDestroy(\n    state.subscribe(itemPath, value => {\n      item = value;\n      update();\n    })\n  );\n\n  const componentName = 'chart-timeline-items-row-item';\n  const componentActions = api.getActions(componentName);\n  let className, contentClassName, labelClassName;\n  onDestroy(\n    state.subscribe('config.classNames', () => {\n      className = api.getClass(componentName, { row, item });\n      contentClassName = api.getClass(componentName + '-content', { row, item });\n      labelClassName = api.getClass(componentName + '-content-label', { row, item });\n      update();\n    })\n  );\n\n  let style,\n    contentStyle = '',\n    itemLeftPx = 0,\n    itemWidthPx = 0;\n  onDestroy(\n    state.subscribeAll(\n      ['_internal.chart.time', 'config.scroll', itemPath],\n      bulk => {\n        item = state.get(itemPath);\n        let time = state.get('_internal.chart.time');\n        itemLeftPx = (item.time.start - time.leftGlobal) / time.timePerPixel;\n        itemWidthPx = (item.time.end - item.time.start) / time.timePerPixel;\n        itemWidthPx -= state.get('config.chart.spacing');\n        const inViewPort = api.isItemInViewport(item, time.leftGlobal, time.rightGlobal);\n        style = `left:${itemLeftPx}px;width:${itemWidthPx}px;`;\n        if (typeof item.style === 'object' && item.style.constructor.name === 'Object') {\n          if (typeof item.style.current === 'string') {\n            contentStyle += item.style.current;\n          }\n        }\n        update();\n      },\n      { bulk: true }\n    )\n  );\n\n  return props =>\n    wrapper(\n      html`\n    <div\n      class=${className}\n      data-actions=${actions(componentActions, { item, row, left: itemLeftPx, width: itemWidthPx, api, state })}\n      style=${style}\n    >\n      <div class=${contentClassName} style=${contentStyle}>\n        <div class=${labelClassName}\">${item.label}</div>\n      </div>\n    </div>\n  `,\n      { vido, props: { rowId, itemId }, templateProps: props }\n    );\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nimport Main from './components/Main';\nimport List from './components/List/List';\nimport ListColumn from './components/List/ListColumn';\nimport ListColumnHeader from './components/List/ListColumnHeader';\nimport ListColumnHeaderResizer from './components/List/ListColumnHeaderResizer';\nimport ListColumnRow from './components/List/ListColumnRow';\nimport ListExpander from './components/List/ListExpander';\nimport ListToggle from './components/List/ListToggle';\nimport Chart from './components/Chart/Chart';\nimport ChartCalendar from './components/Chart/Calendar/ChartCalendar';\nimport ChartCalendarDate from './components/Chart/Calendar/ChartCalendarDate';\nimport ChartTimeline from './components/Chart/Timeline/ChartTimeline';\nimport ChartTimelineGrid from './components/Chart/Timeline/ChartTimelineGrid';\nimport ChartTimelineGridBlock from './components/Chart/Timeline/ChartTimelineGridBlock';\nimport ChartTimelineGridRow from './components/Chart/Timeline/ChartTimelineGridRow';\nimport ChartTimelineItems from './components/Chart/Timeline/ChartTimelineItems';\nimport ChartTimelineItemsRow from './components/Chart/Timeline/ChartTimelineItemsRow';\nimport ChartTimelineItemsRowItem from './components/Chart/Timeline/ChartTimelineItemsRowItem';\n\nexport const actionNames = [\n  '',\n  'list',\n  'list-column',\n  'list-column-header',\n  'list-expander',\n  'list-expander-toggle',\n  'list-column-header-resizer',\n  'list-column-row',\n  'chart',\n  'chart-calendar',\n  'chart-calendar-date',\n  'chart-timeline',\n  'chart-timeline-grid',\n  'chart-timeline-grid-row',\n  'chart-timeline-items',\n  'chart-timeline-items-row',\n  'chart-timeline-items-row-item',\n  'chart-timeline-grid-column',\n  'chart-timeline-grid-block'\n];\n\nfunction generateEmptyActions() {\n  const actions = {};\n  actionNames.forEach(name => (actions[name] = []));\n  return actions;\n}\n\n// default configuration\nfunction defaultConfig() {\n  const actions = generateEmptyActions();\n  return {\n    height: 740,\n    headerHeight: 86,\n    components: {\n      Main,\n      List,\n      ListColumn,\n      ListColumnHeader,\n      ListColumnHeaderResizer,\n      ListColumnRow,\n      ListExpander,\n      ListToggle,\n      Chart,\n      ChartCalendar,\n      ChartCalendarDate,\n      ChartTimeline,\n      ChartTimelineGrid,\n      ChartTimelineGridBlock,\n      ChartTimelineGridRow,\n      ChartTimelineItems,\n      ChartTimelineItemsRow,\n      ChartTimelineItemsRowItem\n    },\n    wrappers: {\n      Main(input) {\n        return input;\n      },\n      List(input) {\n        return input;\n      },\n      ListColumn(input) {\n        return input;\n      },\n      ListColumnHeader(input) {\n        return input;\n      },\n      ListColumnHeaderResizer(input) {\n        return input;\n      },\n      ListColumnRow(input) {\n        return input;\n      },\n      ListExpander(input) {\n        return input;\n      },\n      ListToggle(input) {\n        return input;\n      },\n      Chart(input) {\n        return input;\n      },\n      ChartCalendar(input) {\n        return input;\n      },\n      ChartCalendarDate(input) {\n        return input;\n      },\n      ChartTimeline(input) {\n        return input;\n      },\n      ChartTimelineGrid(input) {\n        return input;\n      },\n      ChartTimelineGridBlock(input) {\n        return input;\n      },\n      ChartTimelineGridRow(input) {\n        return input;\n      },\n      ChartTimelineItems(input) {\n        return input;\n      },\n      ChartTimelineItemsRow(input) {\n        return input;\n      },\n      ChartTimelineItemsRowItem(input) {\n        return input;\n      }\n    },\n    list: {\n      rows: {},\n      rowHeight: 40,\n      columns: {\n        percent: 100,\n        resizer: {\n          width: 10,\n          inRealTime: true,\n          dots: 6\n        },\n        data: {}\n      },\n      expander: {\n        padding: 20,\n        size: 20,\n        icons: {\n          open:\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"/><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/></svg>',\n          closed:\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"/><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/></svg>'\n        }\n      }\n    },\n    scroll: {\n      top: 0,\n      left: 0,\n      xMultiplier: 1.5,\n      yMultiplier: 1,\n      percent: {\n        top: 0,\n        left: 0\n      }\n    },\n    chart: {\n      time: {\n        from: 0,\n        to: 0,\n        zoom: 21,\n        period: 'day',\n        dates: {},\n        maxWidth: {}\n      },\n      calendar: {\n        vertical: {\n          smallFormat: 'YYYY-MM-DD'\n        }\n      },\n      grid: {},\n      items: {}\n    },\n    classNames: {},\n    actions,\n    locale: {\n      name: 'en',\n      weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n      weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n      weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n      months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n      monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n      weekStart: 1,\n      relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n      },\n      formats: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n      },\n      ordinal: n => {\n        const s = ['th', 'st', 'nd', 'rd'];\n        const v = n % 100;\n        return `[${n}${s[(v - 20) % 10] || s[v] || s[0]}]`;\n      }\n    }\n  };\n}\n\nexport default defaultConfig;\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",a=\"quarter\",o=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,h:r,m:e,s:n,ms:t,Q:a}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return l;if(\"string\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\"$y\",o)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",e)},d.second=function(t){return this.$g(t,\"$s\",n)},d.millisecond=function(n){return this.$g(n,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,a){var h=this,f=!!D.u(a)||a,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case o:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,a){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[o]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(a-this.$W):a;if(f===u||f===o){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,a){var h,f=this;t=Number(t);var c=D.p(a),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,n,e){var r=t<12?\"AM\":\"PM\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:D.s(a+1,2,\"0\"),MMM:c(i.monthsShort,a,h,3),MMMM:h[a]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,o,2),ddd:c(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[o]=y/12,c[u]=y,c[a]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nimport dayjs from 'dayjs';\n\nexport default function timeApi(state, getApi) {\n  const locale = state.get('config.locale');\n  dayjs.locale(locale, null, true);\n  return {\n    date(time) {\n      return time ? dayjs(time).locale(locale.name) : dayjs().locale(locale.name);\n    },\n    recalculateFromTo(time) {\n      time = { ...time };\n      if (time.from !== 0) {\n        time.from = this.date(time.from)\n          .startOf('day')\n          .valueOf();\n      }\n      if (time.to !== 0) {\n        time.to = this.date(time.to)\n          .endOf('day')\n          .valueOf();\n      }\n\n      let from = Number.MAX_SAFE_INTEGER,\n        to = 0;\n      const items = state.get('config.chart.items');\n      if (Object.keys(items).length === 0) {\n        return time;\n      }\n      if (time.from === 0 || time.to === 0) {\n        for (let itemId in items) {\n          const item = items[itemId];\n          if (from > item.time.start) {\n            from = item.time.start;\n          }\n          if (to < item.time.end) {\n            to = item.time.end;\n          }\n        }\n        if (time.from === 0) {\n          time.from = this.date(from)\n            .startOf('day')\n            .valueOf();\n        }\n        if (time.to === 0) {\n          time.to = this.date(to)\n            .endOf('day')\n            .valueOf();\n        }\n      }\n      return time;\n    }\n  };\n}\n","// forked from https://github.com/joonhocho/superwild\n\nexport default class Matcher {\n  wchar: string;\n  pattern: string;\n  minLength: number;\n  maxLength: number;\n  segments: string[];\n  starCount: number;\n  segStartIndex: number;\n\n  constructor(pattern: string, wchar: string = '*') {\n    this.wchar = wchar;\n    this.pattern = pattern;\n    this.segments = [];\n    this.starCount = 0;\n    this.minLength = 0;\n    this.maxLength = 0;\n\n    this.segStartIndex = 0;\n    for (let i = 0, len = pattern.length; i < len; i += 1) {\n      const char = pattern[i];\n      if (char === wchar) {\n        this.starCount += 1;\n        if (i > this.segStartIndex) {\n          this.segments.push(pattern.substring(this.segStartIndex, i));\n        }\n        this.segments.push(char);\n        this.segStartIndex = i + 1;\n      }\n    }\n\n    if (this.segStartIndex < pattern.length) {\n      this.segments.push(pattern.substring(this.segStartIndex));\n    }\n\n    if (this.starCount) {\n      this.minLength = pattern.length - this.starCount;\n      this.maxLength = Infinity;\n    } else {\n      this.maxLength = this.minLength = pattern.length;\n    }\n  }\n\n  match(match: string): boolean {\n    if (this.pattern === this.wchar) {\n      return true;\n    }\n    if (this.segments.length === 0) {\n      return this.pattern === match;\n    }\n    const { length } = match;\n    if (length < this.minLength || length > this.maxLength) {\n      return false;\n    }\n\n    let segLeftIndex = 0;\n    let segRightIndex = this.segments.length - 1;\n    let rightPos = match.length - 1;\n    let rightIsStar = false;\n\n    while (true) {\n      const segment = this.segments[segRightIndex];\n      segRightIndex -= 1;\n      if (segment === this.wchar) {\n        rightIsStar = true;\n      } else {\n        const lastIndex = rightPos + 1 - segment.length;\n        const index = match.lastIndexOf(segment, lastIndex);\n        if (index === -1 || index > lastIndex) {\n          return false;\n        }\n        if (rightIsStar) {\n          rightPos = index - 1;\n          rightIsStar = false;\n        } else {\n          if (index !== lastIndex) {\n            return false;\n          }\n          rightPos -= segment.length;\n        }\n      }\n      if (segLeftIndex > segRightIndex) {\n        break;\n      }\n    }\n    return true;\n  }\n}\n","import Matcher from './stringMatcher';\nexport interface wildcardApi {\n  get: (wildcard: string) => {};\n  match: (first: string, second: string) => boolean;\n  simpleMatch: (first: string, second: string) => boolean;\n}\n\nexport interface wildcardResult {\n  [key: string]: any;\n}\n\nexport default class WildcardObject {\n  private obj: any;\n  private delimeter: string;\n  private wildcard: string;\n\n  constructor(obj, delimeter, wildcard) {\n    this.obj = obj;\n    this.delimeter = delimeter;\n    this.wildcard = wildcard;\n  }\n\n  simpleMatch(first: string, second: string): boolean {\n    if (first === second) return true;\n    if (first === this.wildcard) return true;\n    const index = first.indexOf(this.wildcard);\n    if (index > -1) {\n      const end = first.substr(index + 1);\n      if (index === 0 || second.substring(0, index) === first.substring(0, index)) {\n        const len = end.length;\n        if (len > 0) {\n          return second.substr(-len) === end;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  match(first: string, second: string) {\n    return (\n      first === second ||\n      first === this.wildcard ||\n      second === this.wildcard ||\n      this.simpleMatch(first, second) ||\n      new Matcher(first).match(second)\n    );\n  }\n\n  private handleArray(wildcard: string, currentArr: any, partIndex: number, path: string, result = {}) {\n    let nextPartIndex = wildcard.indexOf(this.delimeter, partIndex);\n    let end = false;\n    if (nextPartIndex === -1) {\n      end = true;\n      nextPartIndex = wildcard.length;\n    }\n    const currentWildcardPath = wildcard.substring(partIndex, nextPartIndex);\n    let index = 0;\n    for (const item of currentArr) {\n      const key = index.toString();\n      const currentPath = path === '' ? key : path + this.delimeter + index;\n      if (\n        currentWildcardPath === this.wildcard ||\n        currentWildcardPath === key ||\n        this.simpleMatch(currentWildcardPath, key)\n      ) {\n        end ? (result[currentPath] = item) : this.goFurther(wildcard, item, nextPartIndex + 1, currentPath, result);\n      }\n      index++;\n    }\n    return result;\n  }\n\n  private handleObject(wildcard: string, currentObj: any, partIndex: number, path: string, result = {}) {\n    let nextPartIndex = wildcard.indexOf(this.delimeter, partIndex);\n    let end = false;\n    if (nextPartIndex === -1) {\n      end = true;\n      nextPartIndex = wildcard.length;\n    }\n    const currentWildcardPath = wildcard.substring(partIndex, nextPartIndex);\n    for (let key in currentObj) {\n      key = key.toString();\n      const currentPath = path === '' ? key : path + this.delimeter + key;\n      if (\n        currentWildcardPath === this.wildcard ||\n        currentWildcardPath === key ||\n        this.simpleMatch(currentWildcardPath, key)\n      ) {\n        end\n          ? (result[currentPath] = currentObj[key])\n          : this.goFurther(wildcard, currentObj[key], nextPartIndex + 1, currentPath, result);\n      }\n    }\n    return result;\n  }\n\n  private goFurther(wildcard: string, currentObj, partIndex: number, currentPath: string, result = {}) {\n    if (Array.isArray(currentObj)) {\n      return this.handleArray(wildcard, currentObj, partIndex, currentPath, result);\n    }\n    return this.handleObject(wildcard, currentObj, partIndex, currentPath, result);\n  }\n\n  public get(wildcard: string): any {\n    return this.goFurther(wildcard, this.obj, 0, '');\n  }\n}\n","export default class ObjectPath {\n  static get(path: string[], obj, copiedPath: string[] = null) {\n    if (copiedPath === null) {\n      copiedPath = path.slice();\n    }\n    if (copiedPath.length === 0 || typeof obj === 'undefined') {\n      return obj;\n    }\n    const currentPath = copiedPath.shift();\n    if (!obj.hasOwnProperty(currentPath)) {\n      return undefined;\n    }\n    if (copiedPath.length === 0) {\n      return obj[currentPath];\n    }\n    return ObjectPath.get(path, obj[currentPath], copiedPath);\n  }\n\n  static set(path: string[], newValue, obj, copiedPath: string[] = null) {\n    if (copiedPath === null) {\n      copiedPath = path.slice();\n    }\n    if (copiedPath.length === 0) {\n      for (const key in obj) {\n        delete obj[key];\n      }\n      for (const key in newValue) {\n        obj[key] = newValue[key];\n      }\n      return;\n    }\n    const currentPath = copiedPath.shift();\n    if (copiedPath.length === 0) {\n      obj[currentPath] = newValue;\n      return;\n    }\n    if (!obj.hasOwnProperty(currentPath)) {\n      obj[currentPath] = {};\n    }\n    ObjectPath.set(path, newValue, obj[currentPath], copiedPath);\n  }\n}\n","import WildcardObject, { wildcardApi } from './wildcard-object-scan';\nimport Path from './ObjectPath';\n\nexport interface PathInfo {\n  listener: string;\n  update: string | undefined;\n  resolved: string | undefined;\n}\n\nexport interface ListenerFunctionEventInfo {\n  type: string;\n  listener: Listener;\n  listenersCollection: ListenersCollection;\n  path: PathInfo;\n  params: Params;\n  options: ListenerOptions | UpdateOptions | undefined;\n}\n\nexport type ListenerFunction = (value: any, eventInfo: ListenerFunctionEventInfo) => {};\nexport type Match = (path: string) => boolean;\n\nexport interface Options {\n  delimeter: string;\n  notRecursive: string;\n  param: string;\n  wildcard: string;\n  log: (message: string, info: any) => void;\n}\n\nexport interface ListenerOptions {\n  bulk: boolean;\n  debug: boolean;\n  source: string;\n  data: any;\n}\n\nexport interface Listener {\n  fn: ListenerFunction;\n  options: ListenerOptions;\n}\n\nexport interface GroupedListener {\n  listener: Listener;\n  listenersCollection: ListenersCollection;\n  eventInfo: ListenerFunctionEventInfo;\n  value: any;\n}\n\nexport interface GroupedListenerContainer {\n  single: GroupedListener[];\n  bulk: GroupedListener[];\n}\n\nexport interface GroupedListeners {\n  [path: string]: GroupedListenerContainer;\n}\n\nexport type Updater = (value: any) => {};\n\nexport interface ListenersObject {\n  [key: string]: Listener;\n  [key: number]: Listener;\n}\n\nexport interface ListenersCollection {\n  path: string;\n  listeners: ListenersObject;\n  isWildcard: boolean;\n  isRecursive: boolean;\n  hasParams: boolean;\n  paramsInfo: ParamsInfo | undefined;\n  match: Match;\n  count: number;\n}\n\nexport interface Listeners {\n  [path: string]: ListenersCollection;\n}\n\nexport interface ParamInfo {\n  name: string;\n  replaced: string;\n  original: string;\n}\n\nexport interface Parameters {\n  [part: number]: ParamInfo;\n}\n\nexport interface Params {\n  [key: string]: any;\n}\n\nexport interface ParamsInfo {\n  params: Parameters;\n  replaced: string;\n  original: string;\n}\n\nexport interface UpdateOptions {\n  only: string[];\n  source: string;\n  debug: boolean;\n  data: any;\n}\n\nfunction log(message: string, info: any) {\n  console.debug(message, info);\n}\n\nconst defaultOptions: Options = { delimeter: `.`, notRecursive: `;`, param: `:`, wildcard: `*`, log };\nconst defaultListenerOptions: ListenerOptions = { bulk: false, debug: false, source: '', data: undefined };\nconst defaultUpdateOptions: UpdateOptions = { only: [], source: '', debug: false, data: undefined };\n\nexport default class DeepState {\n  private listeners: Listeners;\n  private data: any;\n  public options: any;\n  private id: number;\n  public pathGet: (path: string[], obj) => {};\n  public pathSet: (path: string[], value, obj) => void;\n  private scan: wildcardApi;\n\n  constructor(data = {}, options: Options = defaultOptions) {\n    this.listeners = {};\n    this.data = data;\n    this.options = { ...defaultOptions, ...options };\n    this.id = 0;\n    this.pathGet = Path.get;\n    this.pathSet = Path.set;\n    this.scan = new WildcardObject(this.data, this.options.delimeter, this.options.wildcard);\n  }\n\n  public getListeners(): Listeners {\n    return this.listeners;\n  }\n\n  public destroy() {\n    this.data = undefined;\n    this.listeners = {};\n  }\n\n  public match(first: string, second: string): boolean {\n    if (first === second) return true;\n    if (first === this.options.wildcard || second === this.options.wildcard) return true;\n    return this.scan.match(first, second);\n  }\n\n  private cutPath(longer: string, shorter: string): string {\n    return this.split(this.cleanNotRecursivePath(longer))\n      .slice(0, this.split(this.cleanNotRecursivePath(shorter)).length)\n      .join(this.options.delimeter);\n  }\n\n  private trimPath(path: string): string {\n    return this.cleanNotRecursivePath(path).replace(new RegExp(`^\\\\${this.options.delimeter}{1}`), ``);\n  }\n\n  public split(path: string) {\n    return path === '' ? [] : path.split(this.options.delimeter);\n  }\n\n  private isWildcard(path: string): boolean {\n    return path.includes(this.options.wildcard);\n  }\n\n  private isNotRecursive(path: string): boolean {\n    return path.endsWith(this.options.notRecursive);\n  }\n\n  private cleanNotRecursivePath(path: string): string {\n    return this.isNotRecursive(path) ? path.slice(0, -this.options.notRecursive.length) : path;\n  }\n\n  private hasParams(path: string) {\n    return path.includes(this.options.param);\n  }\n\n  private getParamsInfo(path: string): ParamsInfo {\n    let paramsInfo: ParamsInfo = { replaced: '', original: path, params: {} };\n    let partIndex = 0;\n    let fullReplaced = [];\n    for (const part of this.split(path)) {\n      paramsInfo.params[partIndex] = {\n        original: part,\n        replaced: '',\n        name: ''\n      };\n      const reg = new RegExp(`\\\\${this.options.param}([^\\\\${this.options.delimeter}\\\\${this.options.param}]+)`, 'g');\n      let param = reg.exec(part);\n      if (param) {\n        paramsInfo.params[partIndex].name = param[1];\n      } else {\n        delete paramsInfo.params[partIndex];\n        fullReplaced.push(part);\n        partIndex++;\n        continue;\n      }\n      reg.lastIndex = 0;\n      paramsInfo.params[partIndex].replaced = part.replace(reg, this.options.wildcard);\n      fullReplaced.push(paramsInfo.params[partIndex].replaced);\n      partIndex++;\n    }\n    paramsInfo.replaced = fullReplaced.join(this.options.delimeter);\n    return paramsInfo;\n  }\n\n  private getParams(paramsInfo: ParamsInfo | undefined, path: string): Params {\n    if (!paramsInfo) {\n      return undefined;\n    }\n    const split = this.split(path);\n    const result = {};\n    for (const partIndex in paramsInfo.params) {\n      const param = paramsInfo.params[partIndex];\n      result[param.name] = split[partIndex];\n    }\n    return result;\n  }\n\n  public subscribeAll(userPaths: string[], fn: ListenerFunction, options: ListenerOptions = defaultListenerOptions) {\n    let unsubscribers = [];\n    for (const userPath of userPaths) {\n      unsubscribers.push(this.subscribe(userPath, fn, options));\n    }\n    return () => {\n      for (const unsubscribe of unsubscribers) {\n        unsubscribe();\n      }\n      unsubscribers = [];\n    };\n  }\n\n  private getCleanListenersCollection(values = {}): ListenersCollection {\n    return {\n      ...{\n        listeners: {},\n        isRecursive: false,\n        isWildcard: false,\n        hasParams: false,\n        match: undefined,\n        paramsInfo: undefined,\n        path: undefined,\n        count: 0\n      },\n      ...values\n    };\n  }\n\n  private getCleanListener(fn: ListenerFunction, options: ListenerOptions = defaultListenerOptions): Listener {\n    return {\n      fn,\n      options: { ...defaultListenerOptions, ...options }\n    };\n  }\n\n  private getListenerCollectionMatch(listenerPath: string, isRecursive: boolean, isWildcard: boolean) {\n    listenerPath = this.cleanNotRecursivePath(listenerPath);\n    return (path) => {\n      if (isRecursive) path = this.cutPath(path, listenerPath);\n      if (isWildcard && this.match(listenerPath, path)) return true;\n      return listenerPath === path;\n    };\n  }\n\n  private getListenersCollection(listenerPath: string, listener: Listener): ListenersCollection {\n    if (typeof this.listeners[listenerPath] !== 'undefined') {\n      let listenersCollection = this.listeners[listenerPath];\n      this.id++;\n      listenersCollection.listeners[this.id] = listener;\n      return listenersCollection;\n    }\n    let collCfg = {\n      isRecursive: true,\n      isWildcard: false,\n      hasParams: false,\n      paramsInfo: undefined,\n      originalPath: listenerPath,\n      path: listenerPath\n    };\n    if (this.hasParams(collCfg.path)) {\n      collCfg.paramsInfo = this.getParamsInfo(collCfg.path);\n      collCfg.path = collCfg.paramsInfo.replaced;\n      collCfg.hasParams = true;\n    }\n    collCfg.isWildcard = this.isWildcard(collCfg.path);\n    if (this.isNotRecursive(collCfg.path)) {\n      collCfg.isRecursive = false;\n    }\n    let listenersCollection = (this.listeners[collCfg.path] = this.getCleanListenersCollection({\n      ...collCfg,\n      match: this.getListenerCollectionMatch(collCfg.path, collCfg.isRecursive, collCfg.isWildcard)\n    }));\n    this.id++;\n    listenersCollection.listeners[this.id] = listener;\n    return listenersCollection;\n  }\n\n  public subscribe(\n    listenerPath: string,\n    fn: ListenerFunction,\n    options: ListenerOptions = defaultListenerOptions,\n    type: string = 'subscribe'\n  ) {\n    let listener = this.getCleanListener(fn, options);\n    const listenersCollection = this.getListenersCollection(listenerPath, listener);\n    listenersCollection.count++;\n    listenerPath = listenersCollection.path;\n    if (!listenersCollection.isWildcard) {\n      fn(this.pathGet(this.split(this.cleanNotRecursivePath(listenerPath)), this.data), {\n        type,\n        listener,\n        listenersCollection,\n        path: {\n          listener: listenerPath,\n          update: undefined,\n          resolved: this.cleanNotRecursivePath(listenerPath)\n        },\n        params: this.getParams(listenersCollection.paramsInfo, listenerPath),\n        options\n      });\n    } else {\n      const paths = this.scan.get(this.cleanNotRecursivePath(listenerPath));\n      if (options.bulk) {\n        const bulkValue = [];\n        for (const path in paths) {\n          bulkValue.push({\n            path,\n            params: this.getParams(listenersCollection.paramsInfo, path),\n            value: paths[path]\n          });\n        }\n        fn(bulkValue, {\n          type,\n          listener,\n          listenersCollection,\n          path: {\n            listener: listenerPath,\n            update: undefined,\n            resolved: undefined\n          },\n          options,\n          params: undefined\n        });\n      } else {\n        for (const path in paths) {\n          fn(paths[path], {\n            type,\n            listener,\n            listenersCollection,\n            path: {\n              listener: listenerPath,\n              update: undefined,\n              resolved: this.cleanNotRecursivePath(path)\n            },\n            params: this.getParams(listenersCollection.paramsInfo, path),\n            options\n          });\n        }\n      }\n    }\n    this.debugSubscribe(listener, listenersCollection, listenerPath);\n    return this.unsubscribe(listenerPath, this.id);\n  }\n\n  private unsubscribe(path: string, id: number) {\n    const listeners = this.listeners;\n    const listenersCollection = listeners[path];\n    return function unsub() {\n      delete listenersCollection.listeners[id];\n      listenersCollection.count--;\n      if (listenersCollection.count === 0) {\n        delete listeners[path];\n      }\n    };\n  }\n\n  private same(newValue, oldValue): boolean {\n    return (\n      (['number', 'string', 'undefined', 'boolean'].includes(typeof newValue) || newValue === null) &&\n      oldValue === newValue\n    );\n  }\n\n  private notifyListeners(\n    listeners: GroupedListeners,\n    exclude: GroupedListener[] = [],\n    returnNotified: boolean = true\n  ): GroupedListener[] {\n    const alreadyNotified = [];\n    for (const path in listeners) {\n      let { single, bulk } = listeners[path];\n      for (const singleListener of single) {\n        if (exclude.includes(singleListener)) continue;\n        const time = this.debugTime(singleListener);\n        singleListener.listener.fn(singleListener.value(), singleListener.eventInfo);\n        if (returnNotified) alreadyNotified.push(singleListener);\n        this.debugListener(time, singleListener);\n      }\n      for (const bulkListener of bulk) {\n        if (exclude.includes(bulkListener)) continue;\n        const time = this.debugTime(bulkListener);\n        const bulkValue = bulkListener.value.map((bulk) => ({ ...bulk, value: bulk.value() }));\n        bulkListener.listener.fn(bulkValue, bulkListener.eventInfo);\n        if (returnNotified) alreadyNotified.push(bulkListener);\n        this.debugListener(time, bulkListener);\n      }\n    }\n    return alreadyNotified;\n  }\n\n  private getSubscribedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListeners {\n    options = { ...defaultUpdateOptions, ...options };\n    const listeners = {};\n    for (let listenerPath in this.listeners) {\n      const listenersCollection = this.listeners[listenerPath];\n      listeners[listenerPath] = { single: [], bulk: [], bulkData: [] };\n      if (listenersCollection.match(updatePath)) {\n        const params = listenersCollection.paramsInfo\n          ? this.getParams(listenersCollection.paramsInfo, updatePath)\n          : undefined;\n        const value =\n          listenersCollection.isRecursive || listenersCollection.isWildcard\n            ? () => this.get(this.cutPath(updatePath, listenerPath))\n            : () => newValue;\n        const bulkValue = [{ value, path: updatePath, params }];\n        for (const listenerId in listenersCollection.listeners) {\n          const listener = listenersCollection.listeners[listenerId];\n          if (listener.options.bulk) {\n            listeners[listenerPath].bulk.push({\n              listener,\n              listenersCollection,\n              eventInfo: {\n                type,\n                listener,\n                path: {\n                  listener: listenerPath,\n                  update: originalPath ? originalPath : updatePath,\n                  resolved: undefined\n                },\n                params,\n                options\n              },\n              value: bulkValue\n            });\n          } else {\n            listeners[listenerPath].single.push({\n              listener,\n              listenersCollection,\n              eventInfo: {\n                type,\n                listener,\n                path: {\n                  listener: listenerPath,\n                  update: originalPath ? originalPath : updatePath,\n                  resolved: this.cleanNotRecursivePath(updatePath)\n                },\n                params,\n                options\n              },\n              value\n            });\n          }\n        }\n      }\n    }\n    return listeners;\n  }\n\n  private notifySubscribedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListener[] {\n    return this.notifyListeners(this.getSubscribedListeners(updatePath, newValue, options, type, originalPath));\n  }\n\n  private getNestedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListeners {\n    const listeners: GroupedListeners = {};\n    for (let listenerPath in this.listeners) {\n      listeners[listenerPath] = { single: [], bulk: [] };\n      const listenersCollection = this.listeners[listenerPath];\n      const currentCuttedPath = this.cutPath(listenerPath, updatePath);\n      if (this.match(currentCuttedPath, updatePath)) {\n        const restPath = this.trimPath(listenerPath.substr(currentCuttedPath.length));\n        const values = new WildcardObject(newValue, this.options.delimeter, this.options.wildcard).get(restPath);\n        const params = listenersCollection.paramsInfo\n          ? this.getParams(listenersCollection.paramsInfo, updatePath)\n          : undefined;\n        const bulk = [];\n        const bulkListeners = {};\n        for (const currentRestPath in values) {\n          const value = () => values[currentRestPath];\n          const fullPath = [updatePath, currentRestPath].join(this.options.delimeter);\n          for (const listenerId in listenersCollection.listeners) {\n            const listener = listenersCollection.listeners[listenerId];\n            const eventInfo = {\n              type,\n              listener,\n              listenersCollection,\n              path: {\n                listener: listenerPath,\n                update: originalPath ? originalPath : updatePath,\n                resolved: this.cleanNotRecursivePath(fullPath)\n              },\n              params,\n              options\n            };\n            if (listener.options.bulk) {\n              bulk.push({ value, path: fullPath, params });\n              bulkListeners[listenerId] = listener;\n            } else {\n              listeners[listenerPath].single.push({ listener, listenersCollection, eventInfo, value });\n            }\n          }\n        }\n        for (const listenerId in bulkListeners) {\n          const listener = bulkListeners[listenerId];\n          const eventInfo = {\n            type,\n            listener,\n            listenersCollection,\n            path: {\n              listener: listenerPath,\n              update: updatePath,\n              resolved: undefined\n            },\n            options,\n            params\n          };\n          listeners[listenerPath].bulk.push({ listener, listenersCollection, eventInfo, value: bulk });\n        }\n      }\n    }\n    return listeners;\n  }\n\n  private notifyNestedListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    alreadyNotified: GroupedListener[],\n    originalPath: string = null\n  ) {\n    return this.notifyListeners(\n      this.getNestedListeners(updatePath, newValue, options, type, originalPath),\n      alreadyNotified,\n      false\n    );\n  }\n\n  private getNotifyOnlyListeners(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): GroupedListeners {\n    const listeners = {};\n    if (\n      typeof options.only !== 'object' ||\n      !Array.isArray(options.only) ||\n      typeof options.only[0] === 'undefined' ||\n      !this.canBeNested(newValue)\n    ) {\n      return listeners;\n    }\n    for (const notifyPath of options.only) {\n      const wildcardScan = new WildcardObject(newValue, this.options.delimeter, this.options.wildcard).get(notifyPath);\n      listeners[notifyPath] = { bulk: [], single: [] };\n      for (const wildcardPath in wildcardScan) {\n        const fullPath = updatePath + this.options.delimeter + wildcardPath;\n        for (const listenerPath in this.listeners) {\n          const listenersCollection = this.listeners[listenerPath];\n          const params = listenersCollection.paramsInfo\n            ? this.getParams(listenersCollection.paramsInfo, fullPath)\n            : undefined;\n          if (this.match(listenerPath, fullPath)) {\n            const value = () => wildcardScan[wildcardPath];\n            const bulkValue = [{ value, path: fullPath, params }];\n            for (const listenerId in listenersCollection.listeners) {\n              const listener = listenersCollection.listeners[listenerId];\n              const eventInfo = {\n                type,\n                listener,\n                listenersCollection,\n                path: {\n                  listener: listenerPath,\n                  update: originalPath ? originalPath : updatePath,\n                  resolved: this.cleanNotRecursivePath(fullPath)\n                },\n                params,\n                options\n              };\n              if (listener.options.bulk) {\n                if (!listeners[notifyPath].bulk.some((bulkListener) => bulkListener.listener === listener)) {\n                  listeners[notifyPath].bulk.push({ listener, listenersCollection, eventInfo, value: bulkValue });\n                }\n              } else {\n                listeners[notifyPath].single.push({\n                  listener,\n                  listenersCollection,\n                  eventInfo,\n                  value\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n    return listeners;\n  }\n\n  private notifyOnly(\n    updatePath: string,\n    newValue,\n    options: UpdateOptions,\n    type: string = 'update',\n    originalPath: string = null\n  ): boolean {\n    return (\n      typeof this.notifyListeners(this.getNotifyOnlyListeners(updatePath, newValue, options, type, originalPath))[0] !==\n      'undefined'\n    );\n  }\n\n  private canBeNested(newValue): boolean {\n    return typeof newValue === 'object' && newValue !== null;\n  }\n\n  private getUpdateValues(oldValue, split, fn) {\n    if (typeof oldValue === 'object' && oldValue !== null) {\n      Array.isArray(oldValue) ? (oldValue = oldValue.slice()) : (oldValue = { ...oldValue });\n    }\n    let newValue = fn;\n    if (typeof fn === 'function') {\n      newValue = fn(this.pathGet(split, this.data));\n    }\n    return { newValue, oldValue };\n  }\n\n  private wildcardUpdate(updatePath: string, fn: Updater, options: UpdateOptions = defaultUpdateOptions) {\n    options = { ...defaultUpdateOptions, ...options };\n    const scanned = this.scan.get(updatePath);\n    const bulk = {};\n    for (const path in scanned) {\n      const split = this.split(path);\n      const { oldValue, newValue } = this.getUpdateValues(scanned[path], split, fn);\n      if (!this.same(newValue, oldValue)) bulk[path] = newValue;\n    }\n    const groupedListenersPack = [];\n    for (const path in bulk) {\n      const newValue = bulk[path];\n      if (options.only.length) {\n        groupedListenersPack.push(this.getNotifyOnlyListeners(path, newValue, options, 'update', updatePath));\n      } else {\n        groupedListenersPack.push(this.getSubscribedListeners(path, newValue, options, 'update', updatePath));\n        this.canBeNested(newValue) &&\n          groupedListenersPack.push(this.getNestedListeners(path, newValue, options, 'update', updatePath));\n      }\n      options.debug && this.options.log('Wildcard update', { path, newValue });\n      this.pathSet(this.split(path), newValue, this.data);\n    }\n    let alreadyNotified = [];\n    for (const groupedListeners of groupedListenersPack) {\n      alreadyNotified = [...alreadyNotified, ...this.notifyListeners(groupedListeners, alreadyNotified)];\n    }\n  }\n\n  public update(updatePath: string, fn: Updater, options: UpdateOptions = defaultUpdateOptions) {\n    if (this.isWildcard(updatePath)) {\n      return this.wildcardUpdate(updatePath, fn, options);\n    }\n    const split = this.split(updatePath);\n    const { oldValue, newValue } = this.getUpdateValues(this.pathGet(split, this.data), split, fn);\n    if (options.debug) {\n      this.options.log(`Updating ${updatePath} ${options.source ? `from ${options.source}` : ''}`, oldValue, newValue);\n    }\n    if (this.same(newValue, oldValue)) {\n      return newValue;\n    }\n    this.pathSet(split, newValue, this.data);\n    options = { ...defaultUpdateOptions, ...options };\n    if (this.notifyOnly(updatePath, newValue, options)) {\n      return newValue;\n    }\n    const alreadyNotified = this.notifySubscribedListeners(updatePath, newValue, options);\n    if (this.canBeNested(newValue)) {\n      this.notifyNestedListeners(updatePath, newValue, options, 'update', alreadyNotified);\n    }\n    return newValue;\n  }\n\n  public get(userPath: string | undefined = undefined) {\n    if (typeof userPath === 'undefined' || userPath === '') {\n      return this.data;\n    }\n    return this.pathGet(this.split(userPath), this.data);\n  }\n\n  private debugSubscribe(listener: Listener, listenersCollection: ListenersCollection, listenerPath: string) {\n    if (listener.options.debug) {\n      this.options.log('listener subscribed', listenerPath, listener, listenersCollection);\n    }\n  }\n\n  private debugListener(time: number, groupedListener: GroupedListener) {\n    if (groupedListener.eventInfo.options.debug || groupedListener.listener.options.debug) {\n      this.options.log('Listener fired', {\n        time: Date.now() - time,\n        info: groupedListener\n      });\n    }\n  }\n\n  private debugTime(groupedListener: GroupedListener): number {\n    return groupedListener.listener.options.debug || groupedListener.eventInfo.options.debug ? Date.now() : 0;\n  }\n}\n\nexport const State = DeepState;\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nimport defaultConfigFn from '../default-config';\nimport timeApi from './Time';\nimport State from 'deep-state-observer';\nimport dayjs from 'dayjs';\nconst lib = 'gantt-schedule-timeline-calendar';\n\n/**\n * Helper function to determine if specified variable is an object\n *\n * @param {any} item\n *\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\n/**\n * Helper function which will merge objects recursively - creating brand new one - like clone\n *\n * @param {object} target\n * @params {object} sources\n *\n * @returns {object}\n */\nexport function mergeDeep(target, ...sources) {\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof target[key] === 'undefined') {\n          target[key] = {};\n        }\n        target[key] = mergeDeep(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        target[key] = [];\n        for (let item of source[key]) {\n          if (isObject(item)) {\n            target[key].push(mergeDeep({}, item));\n            continue;\n          }\n          target[key].push(item);\n        }\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n  if (!sources.length) {\n    return target;\n  }\n  return mergeDeep(target, ...sources);\n}\n\nfunction mergeActions(userConfig, defaultConfig) {\n  const defaultConfigActions = mergeDeep({}, defaultConfig.actions);\n  const userActions = mergeDeep({}, userConfig.actions);\n  let allActionNames = [...Object.keys(defaultConfigActions), ...Object.keys(userActions)];\n  allActionNames = allActionNames.filter(i => allActionNames.includes(i));\n  const actions = {};\n  for (const actionName of allActionNames) {\n    actions[actionName] = [];\n    if (typeof defaultConfigActions[actionName] !== 'undefined' && Array.isArray(defaultConfigActions[actionName])) {\n      actions[actionName] = [...defaultConfigActions[actionName]];\n    }\n    if (typeof userActions[actionName] !== 'undefined' && Array.isArray(userActions[actionName])) {\n      actions[actionName] = [...actions[actionName], ...userActions[actionName]];\n    }\n  }\n  delete userConfig.actions;\n  delete defaultConfig.actions;\n  return actions;\n}\n\nexport function stateFromConfig(userConfig) {\n  const defaultConfig = defaultConfigFn();\n  const actions = mergeActions(userConfig, defaultConfig);\n  const state = { config: mergeDeep({}, defaultConfig, userConfig) };\n  state.config.actions = actions;\n  // @ts-ignore\n  return new State(state, { delimeter: '.' });\n}\n\nconst publicApi = {\n  name: lib,\n  stateFromConfig,\n  mergeDeep,\n  date(time) {\n    return time ? dayjs(time) : dayjs();\n  },\n  dayjs\n};\nexport default publicApi;\n\nexport function getInternalApi(state) {\n  let $state = state.get();\n  let unsubscribers = [];\n  const api = {\n    name: lib,\n    debug: false,\n\n    log(...args) {\n      if (this.debug) {\n        console.log.call(console, ...args);\n      }\n    },\n\n    mergeDeep,\n\n    getComponentData(componentName, attrs) {\n      const componentData = {};\n      componentData.componentName = componentName;\n      componentData.className = this.getClass(componentName, attrs);\n      componentData.action = this.getAction(componentName);\n      return componentData;\n    },\n\n    getClass(name, attrs) {\n      let simple = `${lib}__${name}`;\n      if (name === this.name) {\n        simple = this.name;\n      }\n      let className = `${simple} `;\n      let postfix = '-';\n      if (typeof attrs !== 'undefined') {\n        for (const key in attrs) {\n          if (attrs[key].constructor.name === 'Object' && typeof attrs[key].id !== 'undefined') {\n            postfix += `-${key}_${attrs[key].id}`;\n            return className + className.trim() + postfix;\n          }\n          if (typeof attrs[key] === 'string' || typeof attrs[key] === 'number') {\n            postfix += `-${key}_${attrs[key]}`;\n          }\n        }\n      }\n      if (postfix != '-') {\n        className += simple + postfix + ' ';\n      }\n      if (typeof $state.config.classNames[name] !== 'undefined') {\n        state.get(`config.classNames.${name}`).forEach(customClass => (className += customClass + ' '));\n      }\n      if (typeof $state.config.classNames[name + postfix] !== 'undefined') {\n        state.get(`config.classNames.${name + postfix}`).forEach(customClass => (className += customClass + ' '));\n      }\n      return className.trim();\n    },\n\n    allActions: [],\n\n    getActions(name) {\n      if (!this.allActions.includes(name)) this.allActions.push(name);\n      let actions = state.get('config.actions.' + name);\n      if (typeof actions === 'undefined') {\n        actions = [];\n      }\n      return actions;\n    },\n\n    isItemInViewport(item, left, right) {\n      return (item.time.start >= left && item.time.start < right) || (item.time.end >= left && item.time.end < right);\n    },\n\n    fillEmptyRowValues(rows) {\n      let top = 0;\n      for (const rowId in rows) {\n        const row = rows[rowId];\n        row._internal = {\n          parents: [],\n          children: [],\n          items: []\n        };\n        if (typeof row.height !== 'number') {\n          row.height = $state.config.list.rowHeight;\n        }\n        if (typeof row.expanded !== 'boolean') {\n          row.expanded = false;\n        }\n        row.top = top;\n        top += row.height;\n      }\n      return rows;\n    },\n\n    generateParents(rows, parentName = 'parentId') {\n      const parents = {};\n      for (const row of rows) {\n        const parentId = typeof row[parentName] !== 'undefined' ? row[parentName] : '';\n        if (typeof parents[parentId] === 'undefined') {\n          parents[parentId] = {};\n        }\n        parents[parentId][row.id] = row;\n      }\n      return parents;\n    },\n\n    fastTree(rowParents, node, parents = []) {\n      const children = rowParents[node.id];\n      node._internal.parents = parents;\n      if (typeof children === 'undefined') {\n        node._internal.children = [];\n        return node;\n      }\n      if (node.id !== '') {\n        parents = [...parents, node.id];\n      }\n      node._internal.children = Object.values(children);\n      for (const childrenId in children) {\n        const child = children[childrenId];\n        this.fastTree(rowParents, child, parents);\n      }\n      return node;\n    },\n\n    makeTreeMap(rows, items) {\n      const itemParents = this.generateParents(items, 'rowId');\n      for (const row of rows) {\n        row._internal.items = typeof itemParents[row.id] !== 'undefined' ? Object.values(itemParents[row.id]) : [];\n      }\n      const rowParents = this.generateParents(rows);\n      const tree = { id: '', _internal: { children: [], parents: [], items: [] } };\n      return this.fastTree(rowParents, tree);\n    },\n\n    getFlatTreeMapById(treeMap, flatTreeMapById = {}) {\n      for (const child of treeMap._internal.children) {\n        flatTreeMapById[child.id] = child;\n        this.getFlatTreeMapById(child, flatTreeMapById);\n      }\n      return flatTreeMapById;\n    },\n\n    flattenTreeMap(treeMap, rows = []) {\n      for (const child of treeMap._internal.children) {\n        rows.push(child.id);\n        this.flattenTreeMap(child, rows);\n      }\n      return rows;\n    },\n\n    getRowsFromMap(flatTreeMap, rows) {\n      return flatTreeMap.map(node => rows[node.id]);\n    },\n\n    getRowsFromIds(ids, rows) {\n      const result = [];\n      for (const id of ids) {\n        result.push(rows[id]);\n      }\n      return result;\n    },\n\n    getRowsWithParentsExpanded(flatTreeMap, flatTreeMapById, rows) {\n      const rowsWithParentsExpanded = [];\n      next: for (const rowId of flatTreeMap) {\n        for (const parentId of flatTreeMapById[rowId]._internal.parents) {\n          const parent = rows[parentId];\n          if (!parent.expanded) {\n            continue next;\n          }\n        }\n        rowsWithParentsExpanded.push(rowId);\n      }\n      return rowsWithParentsExpanded;\n    },\n\n    getRowsHeight(rows) {\n      let height = 0;\n      for (let row of rows) {\n        height += row.height;\n      }\n      return height;\n    },\n\n    /**\n     * Get visible rows - get rows that are inside current viewport (height)\n     *\n     * @param {array} rowsWithParentsExpanded rows that have parent expanded- they are visible\n     */\n    getVisibleRows(rowsWithParentsExpanded) {\n      const rows = [];\n      let currentOffset = 0;\n      let rowOffset = 0;\n      for (const row of rowsWithParentsExpanded) {\n        if (\n          currentOffset + row.height > $state.config.scroll.top &&\n          currentOffset < $state.config.scroll.top + $state._internal.height\n        ) {\n          row.top = rowOffset;\n          rowOffset += row.height;\n          rows.push(row);\n        }\n        if (currentOffset > $state.config.scroll.top + $state._internal.height) {\n          break;\n        }\n        currentOffset += row.height;\n      }\n      return rows;\n    },\n\n    /**\n     * Normalize mouse wheel event to get proper scroll metrics\n     *\n     * @param {Event} event mouse wheel event\n     */\n    normalizeMouseWheelEvent(event) {\n      // @ts-ignore\n      let x = event.deltaX || 0;\n      // @ts-ignore\n      let y = event.deltaY || 0;\n      // @ts-ignore\n      let z = event.deltaZ || 0;\n      // @ts-ignore\n      const mode = event.deltaMode;\n      // @ts-ignore\n      const lineHeight = parseInt(getComputedStyle(event.target).getPropertyValue('line-height'));\n      let scale = 1;\n      switch (mode) {\n        case 1:\n          scale = lineHeight;\n          break;\n        case 2:\n          // @ts-ignore\n          scale = window.height;\n          break;\n      }\n      x *= scale;\n      y *= scale;\n      z *= scale;\n      return { x, y, z };\n    },\n\n    limitScroll(which, scroll) {\n      if (which === 'top') {\n        const height = state.get('_internal.list.rowsHeight') - state.get('_internal.height');\n        if (scroll < 0) {\n          scroll = 0;\n        } else if (scroll > height) {\n          scroll = height;\n        }\n        return scroll;\n      } else {\n        const width =\n          state.get('_internal.chart.time.totalViewDurationPx') - state.get('_internal.chart.dimensions.width');\n        if (scroll < 0) {\n          scroll = 0;\n        } else if (scroll > width) {\n          scroll = width;\n        }\n        return scroll;\n      }\n    },\n\n    time: timeApi(state, () => api),\n\n    /**\n     * Get scrollbar height - compute it from element\n     *\n     * @returns {number}\n     */\n    getScrollBarHeight() {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.height = '100px';\n      outer.style.msOverflowStyle = 'scrollbar';\n      document.body.appendChild(outer);\n      var noScroll = outer.offsetHeight;\n      outer.style.overflow = 'scroll';\n      var inner = document.createElement('div');\n      inner.style.height = '100%';\n      outer.appendChild(inner);\n      var withScroll = inner.offsetHeight;\n      outer.parentNode.removeChild(outer);\n      return noScroll - withScroll + 1; // +1 for scroll area inside scroll container\n    },\n\n    /**\n     * Destroy things to release memory\n     */\n    destroy() {\n      $state = undefined;\n      for (const unsubscribe of unsubscribers) {\n        unsubscribe();\n      }\n      unsubscribers = [];\n      if (api.debug) {\n        // @ts-ignore\n        delete window.state;\n      }\n    }\n  };\n\n  if (api.debug) {\n    // @ts-ignore\n    window.state = state;\n    // @ts-ignore\n    window.api = api;\n  }\n\n  return api;\n}\n","/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nimport Vido from '@neuronet.io/vido';\nimport publicApi, { getInternalApi } from './api/Api';\nimport Main from './components/Main';\n\nconst GSTC = options => {\n  const state = options.state;\n  const api = getInternalApi(state);\n  const _internal = {\n    components: {\n      Main\n    },\n    scrollBarHeight: 17,\n    height: 0,\n    treeMap: {},\n    flatTreeMap: [],\n    flatTreeMapById: {},\n    list: {\n      expandedHeight: 0,\n      visibleRows: [],\n      rows: {},\n      width: 0\n    },\n    dimensions: {\n      width: 0,\n      height: 0\n    },\n    chart: {\n      dimensions: {\n        width: 0,\n        innerWidth: 0\n      },\n      visibleItems: [],\n      time: {\n        dates: {},\n        timePerPixel: 0,\n        firstTaskTime: 0,\n        lastTaskTime: 0,\n        totalViewDurationMs: 0,\n        totalViewDurationPx: 0,\n        leftGlobal: 0,\n        rightGlobal: 0,\n        leftPx: 0,\n        rightPx: 0,\n        leftInner: 0,\n        rightInner: 0,\n        maxWidth: {}\n      }\n    },\n    elements: {}\n  };\n  if (typeof options.debug === 'boolean' && options.debug) {\n    // @ts-ignore\n    window.state = state;\n  }\n\n  state.update('', oldValue => {\n    return {\n      config: oldValue.config,\n      _internal\n    };\n  });\n  // @ts-ignore\n  const vido = Vido(state, api);\n  const app = vido.createApp(Main, options.element);\n  return { state, app };\n};\n\nGSTC.api = publicApi;\nexport default GSTC;\n"],"names":["directives","WeakMap","directive","f","args","d","set","isDirective","o","has","isCEPolyfill","undefined","window","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","n","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","SVGTemplateResult","super","getTemplateElement","svgElement","firstChild","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","key","join","render","Object","assign","appendInto","svg","templateCaches$1","cache","previousValue","cachedTemplate","nodes","createDocumentFragment","classMapCache","classMap","classInfo","className","classList","oldInfo","remove","previousValues","guard","every","from","ifDefined","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","list","map","partListCache","keyListCache","repeat","items","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","styleMapCache","styleMap","styleInfo","style","cssText","removeProperty","setProperty","previousValues$1","unsafeHTML","_state","until","state","lastRenderedIndex","previousLength","then","Promise","resolve","resolvedValue","Vido","api","componentId","components","app","actions","shouldUpdateCount","resolved","getActions","createFunctions","props","create","exists","find","action","componentAction","__vido__","vido","componentActions","component","componentInstance","destroy","destroyComponent","updateTemplate","getComponentInstance","destroyable","vidoInstance","onDestroy","fn","firstMethods","methods","forEach","originalDestroy","filter","currentShouldUpdateCount","self","el","App","createComponent","executeActions","MapShim","getIndex","arr","some","entry","class_1","__entries__","defineProperty","prototype","enumerable","configurable","delete","entries","splice","callback","ctx","_i","_a","isBrowser","global$1","global","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","observe","childList","characterData","subtree","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","ResizeObserver","method","apply","Main","componentName","ListComponent","ChartComponent","subscribe","List","Chart","wrapper","plugins","plugin","classNameVerticalScroll","styleVerticalScroll","styleVerticalScrollArea","verticalScrollBarElement","rowsHeight","resizerActive","classNames","config","getClass","subscribeAll","scrollBarHeight","headerHeight","active","bulk","eventInfo","configRows","rows","rowId","fillEmptyRowValues","configItems","itemId","treeMap","makeTreeMap","getFlatTreeMapById","flattenTreeMap","rowsWithParentsExpanded","getRowsFromIds","getRowsWithParentsExpanded","getRowsHeight","visibleRows","getVisibleRows","scrollTop","chartWidth","chartInnerWidth","chartHeight","innerWidth","time","mergeDeep","period","recalculateFromTo","zoomPercent","zoom","scrollLeft","timePerPixel","pow","totalViewDurationMs","date","to","diff","totalViewDurationPx","leftGlobal","rightGlobal","leftInner","rightInner","leftPx","rightPx","diffPercent","internalTime","dates","sub","startOf","subPx","maxWidth","id","endOf","valueOf","generateAndAddPeriodDates","getScrollBarHeight","onScroll","stopPropagation","preventDefault","scroll","scrollInner","scrollHeight","percent","only","dimensions","ro","bindScrollElement","bindScrollInnerElement","templateProps","ListColumnComponent","columns","listColumns","wheel","normalizeMouseWheelEvent","limitScroll","getWidth","ls","columnId","c","ListColumnRowComponent","ListColumnHeaderComponent","column","columnPath","val","rowsActions","classNameContainer","calculatedWidth","styleContainer","row","resizer","ListColumnHeader","ListColumnHeaderResizerComponent","ListColumnHeaderResizer","ListExpanderComponent","ListExpander","contentClass","expander","containerClass","dotsClass","dotClass","lineClass","dotsWidth","inRealTime","path","dots","isMoving","columnWidthPath","onMouseDown","onMouseMove","movementX","onMouseUp","body","header","dot","temlateProps","ListColumnRow","rowPath","parentId","_internal","parents","constructor","children","current","padding","paddingClass","ListToggleComponent","ListToggle","classNameOpen","classNameClosed","iconOpen","iconClosed","expanded","toggle","icons","open","closed","isExpanded","rowExpanded","ChartCalendarComponent","ChartTimelineComponent","Calendar","Timeline","classNameScroll","classNameScrollInner","scrollElement","styleScroll","styleScrollInner","xMultiplier","yMultiplier","shiftKey","chart","bindElement","bindInnerScroll","ChartCalendarDateComponent","periodDates","periodDatesComponents","CalendarDate","formattedClassName","formattedYearClassName","formattedMonthClassName","formattedDayClassName","formattedDayWordClassName","small","smallFormatted","year","month","day","dayWord","daySize","format","subtract","add","dateMod","smallFormat","Gantt","GridComponent","ItemsComponent","Grid","Items","classNameInner","styleInner","GanttGrid","GridRowComponent","h","rowsComponents","rowsData","rowData","blocks","r","GanttGridBlock","gridBlock","GanttGridRow","GridBlockComponent","rowsBlocksComponents","block","GnattItems","ItemsRowComponent","GanttItemsRow","ItemComponent","itemComponents","GanttItemsRowItem","itemPath","contentClassName","labelClassName","contentStyle","itemLeftPx","itemWidthPx","isItemInViewport","label","actionNames","defaultConfig","ListColumn","ChartCalendar","ChartCalendarDate","ChartTimeline","ChartTimelineGrid","ChartTimelineGridBlock","ChartTimelineGridRow","ChartTimelineItems","ChartTimelineItemsRow","ChartTimelineItemsRowItem","wrappers","input","rowHeight","calendar","vertical","grid","generateEmptyActions","locale","weekdays","weekdaysShort","weekdaysMin","months","monthsShort","weekStart","relativeTime","future","past","m","mm","hh","dd","M","MM","yy","formats","LT","LTS","L","LL","LLL","LLLL","ordinal","module","u","a","z","utcOffset","floor","clone","Number","ceil","p","w","ms","Q","replace","$","g","pl","D","$L","utc","$u","parse","$d","NaN","test","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","isAfter","isBefore","$g","hour","minute","second","millisecond","unix","getTime","toDate","$locale","$set","min","daysInMonth","meridiem","YY","YYYY","MMM","MMMM","DD","ddd","dddd","H","HH","A","ss","SSS","Z","getTimezoneOffset","toJSON","toISOString","toUTCString","extend","isDayjs","en","Ls","timeApi","getApi","dayjs","MAX_SAFE_INTEGER","Matcher","pattern","wchar","segments","starCount","minLength","maxLength","segStartIndex","len","char","substring","Infinity","segRightIndex","rightPos","rightIsStar","segment","WildcardObject","obj","delimeter","wildcard","first","simpleMatch","currentArr","nextPartIndex","currentWildcardPath","currentPath","goFurther","currentObj","handleArray","handleObject","ObjectPath","copiedPath","shift","hasOwnProperty","newValue","defaultOptions","notRecursive","param","log","message","info","console","debug","defaultListenerOptions","source","defaultUpdateOptions","DeepState","listeners","pathGet","Path","pathSet","scan","longer","shorter","cleanNotRecursivePath","includes","isNotRecursive","paramsInfo","replaced","original","params","fullReplaced","reg","userPaths","unsubscribers","userPath","unsubscribe","isRecursive","isWildcard","hasParams","listenerPath","cutPath","listener","listenersCollection","collCfg","originalPath","getParamsInfo","getCleanListenersCollection","getListenerCollectionMatch","getCleanListener","getListenersCollection","paths","bulkValue","getParams","debugSubscribe","oldValue","exclude","returnNotified","alreadyNotified","singleListener","debugTime","debugListener","bulkListener","updatePath","bulkData","listenerId","notifyListeners","getSubscribedListeners","currentCuttedPath","restPath","trimPath","bulkListeners","currentRestPath","fullPath","getNestedListeners","canBeNested","notifyPath","wildcardScan","wildcardPath","getNotifyOnlyListeners","scanned","getUpdateValues","same","groupedListenersPack","groupedListeners","wildcardUpdate","notifyOnly","notifySubscribedListeners","notifyNestedListeners","groupedListener","lib","isObject","sources","GSTC","$state","attrs","componentData","getAction","simple","postfix","trim","customClass","allActions","parentName","rowParents","childrenId","child","fastTree","itemParents","generateParents","flatTreeMapById","getRowsFromMap","flatTreeMap","ids","next","currentOffset","rowOffset","deltaX","deltaY","deltaZ","mode","deltaMode","lineHeight","parseInt","getPropertyValue","scale","which","outer","visibility","msOverflowStyle","noScroll","offsetHeight","overflow","inner","withScroll","getInternalApi","expandedHeight","visibleItems","firstTaskTime","lastTaskTime","elements","createApp","stateFromConfig","userConfig","defaultConfigFn","defaultConfigActions","userActions","allActionNames","actionName","mergeActions","State"],"mappings":"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"}