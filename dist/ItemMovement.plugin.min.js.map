{"version":3,"file":"ItemMovement.plugin.min.js","sources":["../src/plugins/ItemMovement.plugin.ts"],"sourcesContent":["/**\n * ItemMovement plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface Options {\n  moveable?: boolean | string;\n  resizeable?: boolean | string;\n  resizerContent?: string;\n  collisionDetection?: boolean;\n  outOfBorders?: boolean;\n  snapStart?: (timeStart: number, startDiff: number, item: object) => number;\n  snapEnd?: (timeEnd: number, endDiff: number, item: object) => number;\n  ghostNode?: boolean;\n}\n\nconst pointerEventsExists = typeof PointerEvent !== 'undefined';\n\nexport default function ItemMovement(options: Options = {}) {\n  const defaultOptions = {\n    moveable: true,\n    resizeable: true,\n    resizerContent: '',\n    collisionDetection: true,\n    outOfBorders: false,\n    snapStart(timeStart, startDiff) {\n      return timeStart + startDiff;\n    },\n    snapEnd(timeEnd, endDiff) {\n      return timeEnd + endDiff;\n    },\n    ghostNode: true\n  };\n  options = { ...defaultOptions, ...options };\n\n  const movementState = {};\n\n  /**\n   * Add moving functionality to items as action\n   *\n   * @param {HTMLElement} element DOM Node\n   * @param {Object} data\n   */\n  function action(element: HTMLElement, data) {\n    if (!options.moveable && !options.resizeable) {\n      return;\n    }\n    const state = data.state;\n    const api = data.api;\n\n    function isMoveable(data) {\n      let moveable = options.moveable;\n      if (data.item.hasOwnProperty('moveable') && moveable) {\n        moveable = data.item.moveable;\n      }\n      if (data.row.hasOwnProperty('moveable') && moveable) {\n        moveable = data.row.moveable;\n      }\n      return moveable;\n    }\n\n    function isResizeable(data) {\n      let resizeable = options.resizeable && (!data.item.hasOwnProperty('resizeable') || data.item.resizeable === true);\n      if (data.row.hasOwnProperty('resizeable') && resizeable) {\n        resizeable = data.row.resizeable;\n      }\n      return resizeable;\n    }\n\n    function getMovement(data) {\n      const itemId = data.item.id;\n      if (typeof movementState[itemId] === 'undefined') {\n        movementState[itemId] = { moving: false, resizing: false };\n      }\n      return movementState[itemId];\n    }\n\n    function createGhost(data, normalized, ganttLeft, ganttTop) {\n      const movement = getMovement(data);\n      if (!options.ghostNode || typeof movement.ghost !== 'undefined') {\n        return;\n      }\n      const ghost = element.cloneNode(true) as HTMLElement;\n      const style = getComputedStyle(element);\n      const compensationY = state.get('config.scroll.compensation.y');\n      ghost.style.position = 'absolute';\n      ghost.style.left = normalized.clientX - ganttLeft - movement.itemLeftCompensation + 'px';\n      const itemTop = normalized.clientY - ganttTop - element.offsetTop - compensationY + parseInt(style['margin-top']);\n      movement.itemTop = itemTop;\n      ghost.style.top = normalized.clientY - ganttTop - itemTop + 'px';\n      ghost.style.width = style.width;\n      ghost.style['box-shadow'] = '10px 10px 6px #00000020';\n      const height = element.clientHeight + 'px';\n      ghost.style.height = height;\n      ghost.style['line-height'] = element.clientHeight - 18 + 'px';\n      ghost.style.opacity = '0.6';\n      ghost.style.transform = 'scale(1.05, 1.05)';\n      state.get('_internal.elements.chart-timeline').appendChild(ghost);\n      movement.ghost = ghost;\n      return ghost;\n    }\n\n    function moveGhost(data, normalized) {\n      if (options.ghostNode) {\n        const movement = getMovement(data);\n        const left = normalized.clientX - movement.ganttLeft - movement.itemLeftCompensation;\n        movement.ghost.style.left = left + 'px';\n        movement.ghost.style.top =\n          normalized.clientY -\n          movement.ganttTop -\n          movement.itemTop +\n          parseInt(getComputedStyle(element)['margin-top']) +\n          'px';\n      }\n    }\n\n    function destroyGhost(itemId) {\n      if (!options.ghostNode) {\n        return;\n      }\n      if (typeof movementState[itemId] !== 'undefined' && typeof movementState[itemId].ghost !== 'undefined') {\n        state.get('_internal.elements.chart-timeline').removeChild(movementState[itemId].ghost);\n        delete movementState[itemId].ghost;\n      }\n    }\n\n    function getSnapStart(data) {\n      let snapStart = options.snapStart;\n      if (typeof data.item.snapStart === 'function') {\n        snapStart = data.item.snapStart;\n      }\n      return snapStart;\n    }\n\n    function getSnapEnd(data) {\n      let snapEnd = options.snapEnd;\n      if (typeof data.item.snapEnd === 'function') {\n        snapEnd = data.item.snapEnd;\n      }\n      return snapEnd;\n    }\n\n    const resizerHTML = `<div class=\"${api.getClass('chart-timeline-items-row-item-resizer')}\">${\n      options.resizerContent\n    }</div>`;\n    // @ts-ignore\n    element.insertAdjacentHTML('beforeend', resizerHTML);\n    const resizerEl: HTMLElement = element.querySelector(\n      '.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-resizer'\n    );\n    if (!isResizeable(data)) {\n      resizerEl.style.visibility = 'hidden';\n    } else {\n      resizerEl.style.visibility = 'visible';\n    }\n\n    function labelDown(ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n      const normalized = api.normalizePointerEvent(ev);\n      if ((ev.type === 'pointerdown' || ev.type === 'mousedown') && ev.button !== 0) {\n        return;\n      }\n      const movement = getMovement(data);\n      movement.moving = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = Math.round((item.time.start - chartLeftTime) / timePerPixel);\n      movement.itemLeftCompensation = normalized.clientX - movement.ganttLeft - movement.itemX;\n      createGhost(data, normalized, ganttRect.left, ganttRect.top);\n    }\n\n    function resizerDown(ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if ((ev.type === 'pointerdown' || ev.type === 'mousedown') && ev.button !== 0) {\n        return;\n      }\n      const normalized = api.normalizePointerEvent(ev);\n      const movement = getMovement(data);\n      movement.resizing = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = (item.time.end - chartLeftTime) / timePerPixel;\n      movement.itemLeftCompensation = normalized.clientX - movement.ganttLeft - movement.itemX;\n    }\n\n    function isCollision(rowId, itemId, start, end) {\n      if (!options.collisionDetection) {\n        return false;\n      }\n      const time = state.get('_internal.chart.time');\n      if (options.outOfBorders && (start < time.from || end > time.to)) {\n        return true;\n      }\n      let diff = api.time.date(end).diff(start, 'milliseconds');\n      if (Math.sign(diff) === -1) {\n        diff = -diff;\n      }\n      if (diff <= 1) {\n        return true;\n      }\n      const row = state.get('config.list.rows.' + rowId);\n      for (const rowItem of row._internal.items) {\n        if (rowItem.id !== itemId) {\n          if (start >= rowItem.time.start && start <= rowItem.time.end) {\n            return true;\n          }\n          if (end >= rowItem.time.start && end <= rowItem.time.end) {\n            return true;\n          }\n          if (start <= rowItem.time.start && end >= rowItem.time.end) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    function movementX(normalized, row, item, zoom, timePerPixel) {\n      const movement = getMovement(data);\n      const left = normalized.clientX - movement.ganttLeft - movement.itemLeftCompensation;\n      moveGhost(data, normalized);\n      const leftMs = state.get('_internal.chart.time.leftGlobal') + left * timePerPixel;\n      const add = leftMs - item.time.start;\n      const originalStart = item.time.start;\n      const finalStartTime = getSnapStart(data)(item.time.start, add, item);\n      const finalAdd = finalStartTime - originalStart;\n      const collision = isCollision(row.id, item.id, item.time.start + finalAdd, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, function moveItem(time) {\n          time.start += finalAdd;\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function resizeX(normalized, row, item, zoom, timePerPixel) {\n      if (!isResizeable(data)) {\n        return;\n      }\n      const time = state.get('_internal.chart.time');\n      const movement = getMovement(data);\n      const left = normalized.clientX - movement.ganttLeft - movement.itemLeftCompensation;\n      const leftMs = time.leftGlobal + left * timePerPixel;\n      const add = leftMs - item.time.end;\n      if (item.time.end + add < item.time.start) {\n        return;\n      }\n      const originalEnd = item.time.end;\n      const finalEndTime = getSnapEnd(data)(item.time.end, add, item) - 1;\n      const finalAdd = finalEndTime - originalEnd;\n      const collision = isCollision(row.id, item.id, item.time.start, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, time => {\n          time.start = getSnapStart(data)(time.start, 0, item);\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function movementY(normalized, row, item, zoom, timePerPixel) {\n      moveGhost(data, normalized);\n      const movement = getMovement(data);\n      const top = normalized.clientY - movement.ganttTop;\n      const visibleRows = state.get('_internal.list.visibleRows');\n      const compensationY = state.get('config.scroll.compensation.y');\n      let index = 0;\n      for (const currentRow of visibleRows) {\n        if (currentRow.top + compensationY > top) {\n          if (index > 0) {\n            return index - 1;\n          }\n          return 0;\n        }\n        index++;\n      }\n      return index;\n    }\n\n    function documentMove(ev) {\n      const movement = getMovement(data);\n      const normalized = api.normalizePointerEvent(ev);\n      let item, rowId, row, zoom, timePerPixel;\n      if (movement.moving || movement.resizing) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        item = state.get(`config.chart.items.${data.item.id}`);\n        rowId = state.get(`config.chart.items.${data.item.id}.rowId`);\n        row = state.get(`config.list.rows.${rowId}`);\n        zoom = state.get('config.chart.time.zoom');\n        timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      }\n      const moveable = isMoveable(data);\n      if (movement.moving) {\n        if (moveable === true || moveable === 'x' || (Array.isArray(moveable) && moveable.includes(rowId))) {\n          movementX(normalized, row, item, zoom, timePerPixel);\n        }\n        if (!moveable || moveable === 'x') {\n          return;\n        }\n        let visibleRowsIndex = movementY(normalized, row, item, zoom, timePerPixel);\n        const visibleRows = state.get('_internal.list.visibleRows');\n        if (typeof visibleRows[visibleRowsIndex] === 'undefined') {\n          if (visibleRowsIndex > 0) {\n            visibleRowsIndex = visibleRows.length - 1;\n          } else if (visibleRowsIndex < 0) {\n            visibleRowsIndex = 0;\n          }\n        }\n        const newRow = visibleRows[visibleRowsIndex];\n        const newRowId = newRow.id;\n        const collision = isCollision(newRowId, item.id, item.time.start, item.time.end);\n        if (newRowId !== item.rowId && !collision) {\n          if (!Array.isArray(moveable) || moveable.includes(newRowId)) {\n            if (!newRow.hasOwnProperty('moveable') || newRow.moveable) {\n              state.update(`config.chart.items.${item.id}.rowId`, newRowId);\n            }\n          }\n        }\n      } else if (movement.resizing && (typeof item.resizeable === 'undefined' || item.resizeable === true)) {\n        resizeX(normalized, row, item, zoom, timePerPixel);\n      }\n    }\n\n    function documentUp(ev) {\n      const movement = getMovement(data);\n      if (movement.moving || movement.resizing) {\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n      movement.moving = false;\n      movement.resizing = false;\n      for (const itemId in movementState) {\n        movementState[itemId].moving = false;\n        movementState[itemId].resizing = false;\n        destroyGhost(itemId);\n      }\n    }\n\n    if (pointerEventsExists) {\n      element.addEventListener('pointerdown', labelDown);\n      resizerEl.addEventListener('pointerdown', resizerDown);\n      document.addEventListener('pointermove', documentMove);\n      document.addEventListener('pointerup', documentUp);\n    } else {\n      element.addEventListener('touchstart', labelDown);\n      resizerEl.addEventListener('touchstart', resizerDown);\n      document.addEventListener('touchmove', documentMove);\n      document.addEventListener('touchend', documentUp);\n      document.addEventListener('touchcancel', documentUp);\n      element.addEventListener('mousedown', labelDown);\n      resizerEl.addEventListener('mousedown', resizerDown);\n      document.addEventListener('mousemove', documentMove);\n      document.addEventListener('mouseup', documentUp);\n    }\n\n    return {\n      update(node, changedData) {\n        if (!isResizeable(changedData) && resizerEl.style.visibility === 'visible') {\n          resizerEl.style.visibility = 'hidden';\n        } else if (isResizeable(changedData) && resizerEl.style.visibility === 'hidden') {\n          resizerEl.style.visibility = 'visible';\n        }\n        data = changedData;\n      },\n      destroy(node, data) {\n        if (pointerEventsExists) {\n          element.removeEventListener('pointerdown', labelDown);\n          resizerEl.removeEventListener('pointerdown', resizerDown);\n          document.removeEventListener('pointermove', documentMove);\n          document.removeEventListener('pointerup', documentUp);\n        } else {\n          element.removeEventListener('mousedown', labelDown);\n          resizerEl.removeEventListener('mousedown', resizerDown);\n          document.removeEventListener('mousemove', documentMove);\n          document.removeEventListener('mouseup', documentUp);\n          element.removeEventListener('touchstart', labelDown);\n          resizerEl.removeEventListener('touchstart', resizerDown);\n          document.removeEventListener('touchmove', documentMove);\n          document.removeEventListener('touchend', documentUp);\n          document.removeEventListener('touchcancel', documentUp);\n        }\n        resizerEl.remove();\n      }\n    };\n  }\n\n  return function initialize(vido) {\n    vido.state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n"],"names":["pointerEventsExists","PointerEvent","ItemMovement","options","defaultOptions","moveable","resizeable","resizerContent","collisionDetection","outOfBorders","snapStart","timeStart","startDiff","snapEnd","timeEnd","endDiff","ghostNode","movementState","action","element","data","state","api","isResizeable","item","hasOwnProperty","row","getMovement","itemId","id","moving","resizing","moveGhost","normalized","movement","left","clientX","ganttLeft","itemLeftCompensation","ghost","style","top","clientY","ganttTop","itemTop","parseInt","getComputedStyle","destroyGhost","get","removeChild","getSnapStart","getSnapEnd","resizerHTML","getClass","insertAdjacentHTML","resizerEl","querySelector","labelDown","ev","stopPropagation","preventDefault","normalizePointerEvent","type","button","chartLeftTime","timePerPixel","ganttRect","getBoundingClientRect","itemX","Math","round","time","start","createGhost","cloneNode","compensationY","position","offsetTop","width","height","clientHeight","opacity","transform","appendChild","resizerDown","end","isCollision","rowId","from","to","diff","date","sign","rowItem","_internal","items","documentMove","zoom","isMoveable","Array","isArray","includes","movementX","add","originalStart","finalAdd","collision","update","moveItem","visibleRowsIndex","movementY","visibleRows","index","currentRow","length","newRow","newRowId","resizeX","leftGlobal","originalEnd","documentUp","visibility","addEventListener","document","[object Object]","node","changedData","removeEventListener","remove","initialize","vido","actions","push"],"mappings":"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"}