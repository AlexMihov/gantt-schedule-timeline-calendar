{"version":3,"file":"ItemMovement.plugin.min.js","sources":["../src/plugins/ItemMovement.plugin.ts"],"sourcesContent":["/**\n * ItemMovement plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface Options {\n  moveable?: boolean | string;\n  resizeable?: boolean | string;\n  resizerContent?: string;\n  collisionDetection?: boolean;\n  outOfBorders?: boolean;\n  snapStart?: (timeStart: number, startDiff: number, item: object) => number;\n  snapEnd?: (timeEnd: number, endDiff: number, item: object) => number;\n  ghostNode?: boolean;\n}\n\nexport default function ItemMovement(options: Options = {}) {\n  const defaultOptions = {\n    moveable: true,\n    resizeable: true,\n    resizerContent: '',\n    collisionDetection: true,\n    outOfBorders: false,\n    snapStart(timeStart, startDiff) {\n      return timeStart + startDiff;\n    },\n    snapEnd(timeEnd, endDiff) {\n      return timeEnd + endDiff;\n    },\n    ghostNode: true\n  };\n  options = { ...defaultOptions, ...options };\n\n  const movementState = {};\n\n  /**\n   * Add moving functionality to items as action\n   *\n   * @param {HTMLElement} element DOM Node\n   * @param {Object} data\n   */\n  function action(element: HTMLElement, data) {\n    if (!options.moveable && !options.resizeable) {\n      return;\n    }\n    const state = data.state;\n    const api = data.api;\n\n    function isMoveable(data) {\n      let moveable = options.moveable;\n      if (data.item.hasOwnProperty('moveable') && moveable) {\n        moveable = data.item.moveable;\n      }\n      if (data.row.hasOwnProperty('moveable') && moveable) {\n        moveable = data.row.moveable;\n      }\n      return moveable;\n    }\n\n    function isResizeable(data) {\n      let resizeable = options.resizeable && (!data.item.hasOwnProperty('resizeable') || data.item.resizeable === true);\n      if (data.row.hasOwnProperty('resizeable') && resizeable) {\n        resizeable = data.row.resizeable;\n      }\n      return resizeable;\n    }\n\n    function getMovement(data) {\n      const itemId = data.item.id;\n      if (typeof movementState[itemId] === 'undefined') {\n        movementState[itemId] = { moving: false, resizing: false };\n      }\n      return movementState[itemId];\n    }\n\n    function createGhost(data, normalized, ganttLeft, ganttTop) {\n      const movement = getMovement(data);\n      if (!options.ghostNode || typeof movement.ghost !== 'undefined') {\n        return;\n      }\n      const ghost = element.cloneNode(true) as HTMLElement;\n      const style = getComputedStyle(element);\n      const compensation = state.get('config.scroll.compensation');\n      ghost.style.position = 'absolute';\n      ghost.style.left = normalized.clientX - ganttLeft - movement.itemLeftCompensation + 'px';\n      const itemTop = normalized.clientY - ganttTop - element.offsetTop - compensation + parseInt(style['margin-top']);\n      movement.itemTop = itemTop;\n      ghost.style.top = normalized.clientY - ganttTop - itemTop + 'px';\n      ghost.style.width = style.width;\n      ghost.style['box-shadow'] = '10px 10px 6px #00000020';\n      const height = element.clientHeight + 'px';\n      ghost.style.height = height;\n      ghost.style['line-height'] = element.clientHeight - 18 + 'px';\n      ghost.style.opacity = '0.6';\n      ghost.style.transform = 'scale(1.05, 1.05)';\n      state.get('_internal.elements.chart-timeline').appendChild(ghost);\n      movement.ghost = ghost;\n      return ghost;\n    }\n\n    function moveGhost(data, normalized) {\n      if (options.ghostNode) {\n        const movement = getMovement(data);\n        const left = normalized.clientX - movement.ganttLeft - movement.itemLeftCompensation;\n        movement.ghost.style.left = left + 'px';\n        movement.ghost.style.top =\n          normalized.clientY -\n          movement.ganttTop -\n          movement.itemTop +\n          parseInt(getComputedStyle(element)['margin-top']) +\n          'px';\n      }\n    }\n\n    function destroyGhost(itemId) {\n      if (!options.ghostNode) {\n        return;\n      }\n      if (typeof movementState[itemId] !== 'undefined' && typeof movementState[itemId].ghost !== 'undefined') {\n        state.get('_internal.elements.chart-timeline').removeChild(movementState[itemId].ghost);\n        delete movementState[itemId].ghost;\n      }\n    }\n\n    function getSnapStart(data) {\n      let snapStart = options.snapStart;\n      if (typeof data.item.snapStart === 'function') {\n        snapStart = data.item.snapStart;\n      }\n      return snapStart;\n    }\n\n    function getSnapEnd(data) {\n      let snapEnd = options.snapEnd;\n      if (typeof data.item.snapEnd === 'function') {\n        snapEnd = data.item.snapEnd;\n      }\n      return snapEnd;\n    }\n\n    const resizerHTML = `<div class=\"${api.getClass('chart-timeline-items-row-item-resizer')}\">${\n      options.resizerContent\n    }</div>`;\n    // @ts-ignore\n    element.insertAdjacentHTML('beforeend', resizerHTML);\n    const resizerEl: HTMLElement = element.querySelector(\n      '.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-resizer'\n    );\n    if (!isResizeable(data)) {\n      resizerEl.style.visibility = 'hidden';\n    } else {\n      resizerEl.style.visibility = 'visible';\n    }\n\n    function labelDown(ev) {\n      ev.stopPropagation();\n      const normalized = api.normalizePointerEvent(ev);\n      if (ev.type === 'mousedown' && ev.button !== 0) {\n        return;\n      }\n      const movement = getMovement(data);\n      movement.moving = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = Math.round((item.time.start - chartLeftTime) / timePerPixel);\n      movement.itemLeftCompensation = normalized.clientX - movement.ganttLeft - movement.itemX;\n      createGhost(data, normalized, ganttRect.left, ganttRect.top);\n    }\n\n    function resizerDown(ev) {\n      ev.stopPropagation();\n      if (ev.type === 'mousedown' && ev.button !== 0) {\n        return;\n      }\n      const normalized = api.normalizePointerEvent(ev);\n      const movement = getMovement(data);\n      movement.resizing = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.chart-timeline').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = (item.time.end - chartLeftTime) / timePerPixel;\n      movement.itemLeftCompensation = normalized.clientX - movement.ganttLeft - movement.itemX;\n    }\n\n    function isCollision(rowId, itemId, start, end) {\n      if (!options.collisionDetection) {\n        return false;\n      }\n      const time = state.get('_internal.chart.time');\n      if (options.outOfBorders && (start < time.from || end > time.to)) {\n        return true;\n      }\n      let diff = api.time.date(end).diff(start, 'milliseconds');\n      if (Math.sign(diff) === -1) {\n        diff = -diff;\n      }\n      if (diff <= 1) {\n        return true;\n      }\n      const row = state.get('config.list.rows.' + rowId);\n      for (const rowItem of row._internal.items) {\n        if (rowItem.id !== itemId) {\n          if (start >= rowItem.time.start && start <= rowItem.time.end) {\n            return true;\n          }\n          if (end >= rowItem.time.start && end <= rowItem.time.end) {\n            return true;\n          }\n          if (start <= rowItem.time.start && end >= rowItem.time.end) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    function movementX(normalized, row, item, zoom, timePerPixel) {\n      const movement = getMovement(data);\n      const left = normalized.clientX - movement.ganttLeft - movement.itemLeftCompensation;\n      moveGhost(data, normalized);\n      const leftMs = state.get('_internal.chart.time.leftGlobal') + left * timePerPixel;\n      const add = leftMs - item.time.start;\n      const originalStart = item.time.start;\n      const finalStartTime = getSnapStart(data)(item.time.start, add, item);\n      const finalAdd = finalStartTime - originalStart;\n      const collision = isCollision(row.id, item.id, item.time.start + finalAdd, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, function moveItem(time) {\n          time.start += finalAdd;\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function resizeX(normalized, row, item, zoom, timePerPixel) {\n      if (!isResizeable(data)) {\n        return;\n      }\n      const time = state.get('_internal.chart.time');\n      const movement = getMovement(data);\n      const left = normalized.clientX - movement.ganttLeft - movement.itemLeftCompensation;\n      const leftMs = time.leftGlobal + left * timePerPixel;\n      const add = leftMs - item.time.end;\n      if (item.time.end + add < item.time.start) {\n        return;\n      }\n      const originalEnd = item.time.end;\n      const finalEndTime = getSnapEnd(data)(item.time.end, add, item) - 1;\n      const finalAdd = finalEndTime - originalEnd;\n      const collision = isCollision(row.id, item.id, item.time.start, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, time => {\n          time.start = getSnapStart(data)(time.start, 0, item);\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function movementY(normalized, row, item, zoom, timePerPixel) {\n      moveGhost(data, normalized);\n      const movement = getMovement(data);\n      const top = normalized.clientY - movement.ganttTop;\n      const visibleRows = state.get('_internal.list.visibleRows');\n      const compensation = state.get('config.scroll.compensation');\n      let index = 0;\n      for (const currentRow of visibleRows) {\n        if (currentRow.top + compensation > top) {\n          if (index > 0) {\n            return index - 1;\n          }\n          return 0;\n        }\n        index++;\n      }\n      return index;\n    }\n\n    function documentMove(ev) {\n      ev.stopPropagation();\n      const movement = getMovement(data);\n      const normalized = api.normalizePointerEvent(ev);\n      let item, rowId, row, zoom, timePerPixel;\n      if (movement.moving || movement.resizing) {\n        item = state.get(`config.chart.items.${data.item.id}`);\n        rowId = state.get(`config.chart.items.${data.item.id}.rowId`);\n        row = state.get(`config.list.rows.${rowId}`);\n        zoom = state.get('config.chart.time.zoom');\n        timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      }\n      const moveable = isMoveable(data);\n      if (movement.moving) {\n        if (moveable === true || moveable === 'x' || (Array.isArray(moveable) && moveable.includes(rowId))) {\n          movementX(normalized, row, item, zoom, timePerPixel);\n        }\n        if (!moveable || moveable === 'x') {\n          return;\n        }\n        let visibleRowsIndex = movementY(normalized, row, item, zoom, timePerPixel);\n        const visibleRows = state.get('_internal.list.visibleRows');\n        if (typeof visibleRows[visibleRowsIndex] === 'undefined') {\n          if (visibleRowsIndex > 0) {\n            visibleRowsIndex = visibleRows.length - 1;\n          } else if (visibleRowsIndex < 0) {\n            visibleRowsIndex = 0;\n          }\n        }\n        const newRow = visibleRows[visibleRowsIndex];\n        const newRowId = newRow.id;\n        const collision = isCollision(newRowId, item.id, item.time.start, item.time.end);\n        if (newRowId !== item.rowId && !collision) {\n          if (!Array.isArray(moveable) || moveable.includes(newRowId)) {\n            if (!newRow.hasOwnProperty('moveable') || newRow.moveable) {\n              state.update(`config.chart.items.${item.id}.rowId`, newRowId);\n            }\n          }\n        }\n      } else if (movement.resizing && (typeof item.resizeable === 'undefined' || item.resizeable === true)) {\n        resizeX(normalized, row, item, zoom, timePerPixel);\n      }\n    }\n\n    function documentUp(ev) {\n      const movement = getMovement(data);\n      if (movement.moving || movement.resizing) {\n        ev.stopPropagation();\n      }\n      movement.moving = false;\n      movement.resizing = false;\n      for (const itemId in movementState) {\n        movementState[itemId].moving = false;\n        movementState[itemId].resizing = false;\n        destroyGhost(itemId);\n      }\n    }\n    element.addEventListener('mousedown', labelDown);\n    element.addEventListener('touchstart', labelDown);\n    resizerEl.addEventListener('mousedown', resizerDown);\n    resizerEl.addEventListener('touchstart', resizerDown);\n    document.addEventListener('mousemove', documentMove);\n    document.addEventListener('mouseup', documentUp);\n    document.addEventListener('touchmove', documentMove);\n    document.addEventListener('touchend', documentUp);\n    document.addEventListener('touchcancel', documentUp);\n\n    return {\n      update(node, changedData) {\n        if (!isResizeable(data) && resizerEl.style.visibility === 'visible') {\n          resizerEl.style.visibility = 'hidden';\n        } else if (isResizeable(data) && resizerEl.style.visibility === 'hidden') {\n          resizerEl.style.visibility = 'visible';\n        }\n        data = changedData;\n      },\n      destroy(node, data) {\n        element.removeEventListener('mousedown', labelDown);\n        element.removeEventListener('touchstart', labelDown);\n        resizerEl.removeEventListener('mousedown', resizerDown);\n        resizerEl.removeEventListener('touchstart', resizerDown);\n        document.removeEventListener('mousemove', documentMove);\n        document.removeEventListener('mouseup', documentUp);\n        document.removeEventListener('touchmove', documentMove);\n        document.removeEventListener('touchend', documentUp);\n        document.removeEventListener('touchcancel', documentUp);\n        resizerEl.remove();\n      }\n    };\n  }\n\n  return function initialize(vido) {\n    vido.state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n"],"names":["ItemMovement","options","defaultOptions","moveable","resizeable","resizerContent","collisionDetection","outOfBorders","snapStart","timeStart","startDiff","snapEnd","timeEnd","endDiff","ghostNode","movementState","action","element","data","state","api","isResizeable","item","hasOwnProperty","row","getMovement","itemId","id","moving","resizing","moveGhost","normalized","movement","left","clientX","ganttLeft","itemLeftCompensation","ghost","style","top","clientY","ganttTop","itemTop","parseInt","getComputedStyle","destroyGhost","get","removeChild","getSnapStart","getSnapEnd","resizerHTML","getClass","insertAdjacentHTML","resizerEl","querySelector","labelDown","ev","stopPropagation","normalizePointerEvent","type","button","chartLeftTime","timePerPixel","ganttRect","getBoundingClientRect","itemX","Math","round","time","start","createGhost","cloneNode","compensation","position","offsetTop","width","height","clientHeight","opacity","transform","appendChild","resizerDown","end","isCollision","rowId","from","to","diff","date","sign","rowItem","_internal","items","documentMove","zoom","isMoveable","Array","isArray","includes","movementX","add","originalStart","finalAdd","collision","update","moveItem","visibleRowsIndex","movementY","visibleRows","index","currentRow","length","newRow","newRowId","resizeX","leftGlobal","originalEnd","documentUp","visibility","addEventListener","document","[object Object]","node","changedData","removeEventListener","remove","initialize","vido","actions","push"],"mappings":"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"}