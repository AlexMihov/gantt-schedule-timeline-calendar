{"version":3,"file":"ItemMovement.plugin.js","sources":["../src/plugins/ItemMovement.plugin.js"],"sourcesContent":["/**\n * Gantt-Schedule-Timeline-Calendar\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\n// @ts-nocheck\nexport default function ItemMovementPlugin(options = {}) {\n  const defaultOptions = {\n    moveable: true,\n    resizeable: true,\n    resizerContent: '',\n    collisionDetection: true,\n    outOfBorders: false,\n    snapStart: (timeStart, startDiff) => timeStart + startDiff,\n    snapEnd: (timeEnd, endDiff) => timeEnd + endDiff,\n    ghostNode: true\n  };\n  options = { ...defaultOptions, ...options };\n  const movementState = {};\n\n  /**\n   * Add moving functionality to items as action\n   *\n   * @param {Node} node DOM Node\n   * @param {Object} data\n   */\n  function action(node, data) {\n    const element = node.querySelector('.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content');\n    if (!options.moveable && !options.resizeable) {\n      return;\n    }\n    let moveable = options.moveable;\n    if (data.item.hasOwnProperty('moveable') && moveable) {\n      moveable = data.item.moveable;\n    }\n    if (data.row.hasOwnProperty('moveable') && moveable) {\n      moveable = data.row.moveable;\n    }\n    let resizeable = options.resizeable && (!data.item.hasOwnProperty('resizeable') || data.item.resizeable === true);\n    if (data.row.hasOwnProperty('resizeable') && resizeable) {\n      resizeable = data.row.resizeable;\n    }\n    const api = data.api;\n    let snapStart = options.snapStart;\n    if (typeof data.item.snapStart === 'function') {\n      snapStart = item.snapStart;\n    }\n    let snapEnd = options.snapEnd;\n    if (typeof data.item.snapEnd === 'function') {\n      snapEnd = data.item.snapEnd;\n    }\n\n    if (resizeable) {\n      const resizerHTML = `<div class=\"${api.getClass('chart-timeline-items-row-item-content-resizer')}\">${\n        options.resizerContent\n      }</div>`;\n      // @ts-ignore\n      element.insertAdjacentHTML('beforeend', resizerHTML);\n    }\n\n    const el = element;\n    const resizerEl = el.querySelector(\n      '.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content-resizer'\n    );\n    const state = data.state;\n\n    if (typeof movementState[data.item.id] === 'undefined') {\n      movementState[data.item.id] = { moving: false, resizing: false };\n    }\n    const movement = movementState[data.item.id];\n\n    function createGhost(itemId, ev, ganttLeft, ganttTop) {\n      if (!options.ghostNode || typeof movementState[itemId].ghost !== 'undefined') {\n        return;\n      }\n      const ghost = element.cloneNode(true);\n      const style = getComputedStyle(element);\n      ghost.style.position = 'absolute';\n      ghost.style.left = ev.x - ganttLeft - movement.itemLeftCompensation + 'px';\n      const itemTop = ev.y - ganttTop - data.row.top - element.offsetTop;\n      movement.itemTop = itemTop;\n      ghost.style.top = ev.y - ganttTop - itemTop + 'px';\n      ghost.style.width = style.width;\n      ghost.style['box-shadow'] = '10px 10px 6px #00000020';\n      const height = element.clientHeight + 'px';\n      ghost.style.height = height;\n      ghost.style['line-height'] = height;\n      ghost.style.opacity = '0.75';\n      state.get('_internal.elements.gantt').appendChild(ghost);\n      movementState[itemId].ghost = ghost;\n      return ghost;\n    }\n\n    function moveGhost(ev) {\n      if (options.ghostNode) {\n        const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n        movement.ghost.style.left = left + 'px';\n        movement.ghost.style.top = ev.y - movement.ganttTop - movement.itemTop + 'px';\n      }\n    }\n\n    function destroyGhost(itemId) {\n      if (!options.ghostNode) {\n        return;\n      }\n      if (typeof movementState[itemId] !== 'undefined' && typeof movementState[itemId].ghost !== 'undefined') {\n        state.get('_internal.elements.gantt').removeChild(movementState[itemId].ghost);\n        delete movementState[itemId].ghost;\n      }\n      element.style.opacity = '1';\n    }\n\n    function labelMouseDown(ev) {\n      if (ev.button !== 0) {\n        return;\n      }\n      movement.moving = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.gantt').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = Math.round((item.time.start - chartLeftTime) / timePerPixel);\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n      createGhost(data.item.id, ev, ganttRect.left, ganttRect.top);\n    }\n\n    function resizerMouseDown(ev) {\n      if (ev.button !== 0) {\n        return;\n      }\n      ev.stopPropagation();\n      movement.resizing = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.gantt').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = (item.time.end - chartLeftTime) / timePerPixel;\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n    }\n\n    function isCollision(rowId, itemId, start, end) {\n      if (!options.collisionDetection) {\n        return false;\n      }\n      const time = state.get('_internal.chart.time');\n      if (options.outOfBorders && (start < time.from || end > time.to)) {\n        return true;\n      }\n      let diff = api.time.date(end).diff(start, 'milliseconds');\n      if (Math.sign(diff) === -1) {\n        diff = -diff;\n      }\n      if (diff <= 1) {\n        return true;\n      }\n      const row = state.get('config.list.rows.' + rowId);\n      for (const rowItem of row._internal.items) {\n        if (rowItem.id !== itemId) {\n          if (start >= rowItem.time.start && start <= rowItem.time.end) {\n            return true;\n          }\n          if (end >= rowItem.time.start && end <= rowItem.time.end) {\n            return true;\n          }\n          if (start <= rowItem.time.start && end >= rowItem.time.end) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    function movementX(ev, row, item, zoom, timePerPixel) {\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      moveGhost(ev);\n      const leftMs = state.get('_internal.chart.time.leftGlobal') + left * timePerPixel;\n      const add = leftMs - item.time.start;\n      const originalStart = item.time.start;\n      const finalStartTime = snapStart(item.time.start, add, item);\n      const finalAdd = finalStartTime - originalStart;\n      const collision = isCollision(row.id, item.id, item.time.start + finalAdd, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, function moveItem(time) {\n          time.start += finalAdd;\n          time.end = snapEnd(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function resizeX(ev, row, item, zoom, timePerPixel) {\n      const time = state.get('_internal.chart.time');\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      const leftMs = time.leftGlobal + left * timePerPixel;\n      const add = leftMs - item.time.end;\n      if (item.time.end + add < item.time.start) {\n        return;\n      }\n      const originalEnd = item.time.end;\n      const finalEndTime = snapEnd(item.time.end, add, item) - 1;\n      const finalAdd = finalEndTime - originalEnd;\n      const collision = isCollision(row.id, item.id, item.time.start, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, time => {\n          time.start = snapStart(time.start, 0, item);\n          time.end = snapEnd(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function movementY(ev, row, item, zoom, timePerPixel) {\n      moveGhost(ev);\n      const top = ev.y - movement.ganttTop;\n      const visibleRows = state.get('_internal.list.visibleRows');\n      let index = 0;\n      for (const currentRow of visibleRows) {\n        if (currentRow.top > top) {\n          if (index > 0) {\n            return index - 1;\n          }\n          return 0;\n        }\n        index++;\n      }\n      return index;\n    }\n\n    function documentMouseMove(ev) {\n      let item, rowId, row, zoom, timePerPixel;\n      if (movement.moving || movement.resizing) {\n        item = state.get(`config.chart.items.${data.item.id}`);\n        rowId = state.get(`config.chart.items.${data.item.id}.rowId`);\n        row = state.get(`config.list.rows.${rowId}`);\n        zoom = state.get('config.chart.time.zoom');\n        timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      }\n      if (movement.moving) {\n        if (moveable === true || moveable === 'x' || (Array.isArray(moveable) && moveable.includes(rowId))) {\n          movementX(ev, row, item, zoom, timePerPixel);\n        }\n        if (!moveable || moveable === 'x') {\n          return;\n        }\n        let visibleRowsIndex = movementY(ev, row, item, zoom, timePerPixel);\n        const visibleRows = state.get('_internal.list.visibleRows');\n        if (typeof visibleRows[visibleRowsIndex] === 'undefined') {\n          if (visibleRowsIndex > 0) {\n            visibleRowsIndex = visibleRows.length - 1;\n          } else if (visibleRowsIndex < 0) {\n            visibleRowsIndex = 0;\n          }\n        }\n        const newRow = visibleRows[visibleRowsIndex];\n        const newRowId = newRow.id;\n        const collision = isCollision(newRowId, item.id, item.time.start, item.time.end);\n        if (newRowId !== item.rowId && !collision) {\n          if (!Array.isArray(moveable) || moveable.includes(newRowId)) {\n            if (!newRow.hasOwnProperty('moveable') || newRow.moveable) {\n              state.update(`config.chart.items.${item.id}.rowId`, newRowId);\n            }\n          }\n        }\n      } else if (movement.resizing && (typeof item.resizeable === 'undefined' || item.resizeable === true)) {\n        resizeX(ev, row, item, zoom, timePerPixel);\n      }\n    }\n\n    function documentMouseUp(ev) {\n      movement.moving = false;\n      movement.resizing = false;\n      for (const itemId in movementState) {\n        movementState[itemId].moving = false;\n        movementState[itemId].resizing = false;\n        destroyGhost(itemId);\n      }\n    }\n    if (moveable) el.addEventListener('mousedown', labelMouseDown);\n    if (resizeable) resizerEl.addEventListener('mousedown', resizerMouseDown);\n    document.addEventListener('mousemove', documentMouseMove);\n    document.addEventListener('mouseup', documentMouseUp);\n\n    return {\n      destroy(node, data) {\n        if (moveable) el.removeEventListener('mousedown', labelMouseDown);\n        if (resizeable) resizerEl.removeEventListener('mousedown', resizerMouseDown);\n        document.removeEventListener('mousemove', documentMouseMove);\n        document.removeEventListener('mouseup', documentMouseUp);\n        if (resizeable) element.removeChild(resizerEl);\n      }\n    };\n  }\n\n  return function initializePlugin(state, api) {\n    state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n"],"names":["options","moveable","resizeable","resizerContent","collisionDetection","outOfBorders","snapStart","timeStart","startDiff","snapEnd","timeEnd","endDiff","ghostNode","movementState","action","node","data","element","querySelector","item","hasOwnProperty","row","api","resizerHTML","getClass","insertAdjacentHTML","el","resizerEl","state","id","moving","resizing","movement","moveGhost","ev","left","x","ganttLeft","itemLeftCompensation","ghost","style","top","y","ganttTop","itemTop","destroyGhost","itemId","get","removeChild","opacity","labelMouseDown","button","chartLeftTime","timePerPixel","ganttRect","getBoundingClientRect","itemX","Math","round","time","start","cloneNode","getComputedStyle","position","offsetTop","width","height","clientHeight","appendChild","createGhost","resizerMouseDown","stopPropagation","end","isCollision","rowId","from","to","diff","date","sign","rowItem","_internal","items","documentMouseMove","zoom","Array","isArray","includes","add","originalStart","finalAdd","collision","update","movementX","visibleRowsIndex","visibleRows","index","currentRow","movementY","length","newRow","newRowId","leftGlobal","originalEnd","resizeX","documentMouseUp","addEventListener","document","[object Object]","removeEventListener","actions","push"],"mappings":"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"}