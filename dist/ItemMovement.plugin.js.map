{"version":3,"file":"ItemMovement.plugin.js","sources":["../src/plugins/ItemMovement.plugin.js"],"sourcesContent":["/**\n * ItemMovement plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0\n */\n\nexport default function ItemMovement(options = {}) {\n  const defaultOptions = {\n    moveable: true,\n    resizeable: true,\n    resizerContent: '',\n    collisionDetection: true,\n    outOfBorders: false,\n    snapStart: (timeStart, startDiff) => timeStart + startDiff,\n    snapEnd: (timeEnd, endDiff) => timeEnd + endDiff,\n    ghostNode: true\n  };\n  options = { ...defaultOptions, ...options };\n\n  const movementState = {};\n\n  /**\n   * Add moving functionality to items as action\n   *\n   * @param {Node} node DOM Node\n   * @param {Object} data\n   */\n  function action(node, data) {\n    // @ts-ignore\n    let element = node.querySelector('.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content');\n    if (!options.moveable && !options.resizeable) {\n      return;\n    }\n    let state;\n    let api;\n\n    function isMoveable(data) {\n      let moveable = options.moveable;\n      if (data.item.hasOwnProperty('moveable') && moveable) {\n        moveable = data.item.moveable;\n      }\n      if (data.row.hasOwnProperty('moveable') && moveable) {\n        moveable = data.row.moveable;\n      }\n      return moveable;\n    }\n\n    function isResizeable(data) {\n      let resizeable = options.resizeable && (!data.item.hasOwnProperty('resizeable') || data.item.resizeable === true);\n      if (data.row.hasOwnProperty('resizeable') && resizeable) {\n        resizeable = data.row.resizeable;\n      }\n      return resizeable;\n    }\n\n    function getMovement(data) {\n      const itemId = data.item.id;\n      if (typeof movementState[itemId] === 'undefined') {\n        movementState[itemId] = { moving: false, resizing: false };\n      }\n      return movementState[itemId];\n    }\n\n    function createGhost(data, ev, ganttLeft, ganttTop) {\n      const movement = getMovement(data);\n      if (!options.ghostNode || typeof movement.ghost !== 'undefined') {\n        return;\n      }\n      const ghost = element.cloneNode(true);\n      const style = getComputedStyle(element);\n      ghost.style.position = 'absolute';\n      ghost.style.left = ev.x - ganttLeft - movement.itemLeftCompensation + 'px';\n      const itemTop = ev.y - ganttTop - data.row.top - element.offsetTop;\n      movement.itemTop = itemTop;\n      ghost.style.top = ev.y - ganttTop - itemTop + 'px';\n      ghost.style.width = style.width;\n      ghost.style['box-shadow'] = '10px 10px 6px #00000020';\n      const height = element.clientHeight + 'px';\n      ghost.style.height = height;\n      ghost.style['line-height'] = height;\n      ghost.style.opacity = '0.75';\n      state.get('_internal.elements.gantt').appendChild(ghost);\n      movement.ghost = ghost;\n      return ghost;\n    }\n\n    function moveGhost(data, ev) {\n      if (options.ghostNode) {\n        const movement = getMovement(data);\n        const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n        movement.ghost.style.left = left + 'px';\n        movement.ghost.style.top = ev.y - movement.ganttTop - movement.itemTop + 'px';\n      }\n    }\n\n    function destroyGhost(itemId) {\n      if (!options.ghostNode) {\n        return;\n      }\n      if (typeof movementState[itemId] !== 'undefined' && typeof movementState[itemId].ghost !== 'undefined') {\n        state.get('_internal.elements.gantt').removeChild(movementState[itemId].ghost);\n        delete movementState[itemId].ghost;\n      }\n      element.style.opacity = '1';\n    }\n\n    function getSnapStart(data) {\n      let snapStart = options.snapStart;\n      if (typeof data.item.snapStart === 'function') {\n        snapStart = data.item.snapStart;\n      }\n      return snapStart;\n    }\n\n    function getSnapEnd(data) {\n      let snapEnd = options.snapEnd;\n      if (typeof data.item.snapEnd === 'function') {\n        snapEnd = data.item.snapEnd;\n      }\n      return snapEnd;\n    }\n\n    state = data.state;\n    api = data.api;\n\n    const resizerHTML = `<div class=\"${api.getClass('chart-timeline-items-row-item-content-resizer')}\">${\n      options.resizerContent\n    }</div>`;\n    // @ts-ignore\n    element.insertAdjacentHTML('beforeend', resizerHTML);\n    const resizerEl = element.querySelector(\n      '.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content-resizer'\n    );\n    if (!isResizeable(data)) {\n      resizerEl.style.display = 'none';\n    }\n\n    function labelMouseDown(ev) {\n      if (ev.button !== 0) {\n        return;\n      }\n      // @ts-ignore\n      element = node.querySelector('.gantt-schedule-timeline-calendar__chart-timeline-items-row-item-content');\n      const movement = getMovement(data);\n      movement.moving = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.gantt').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = Math.round((item.time.start - chartLeftTime) / timePerPixel);\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n      createGhost(data, ev, ganttRect.left, ganttRect.top);\n    }\n\n    function resizerMouseDown(ev) {\n      if (ev.button !== 0) {\n        return;\n      }\n      ev.stopPropagation();\n      const movement = getMovement(data);\n      movement.resizing = true;\n      const item = state.get(`config.chart.items.${data.item.id}`);\n      const chartLeftTime = state.get('_internal.chart.time.leftGlobal');\n      const timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      const ganttRect = state.get('_internal.elements.gantt').getBoundingClientRect();\n      movement.ganttTop = ganttRect.top;\n      movement.ganttLeft = ganttRect.left;\n      movement.itemX = (item.time.end - chartLeftTime) / timePerPixel;\n      movement.itemLeftCompensation = ev.x - movement.ganttLeft - movement.itemX;\n    }\n\n    function isCollision(rowId, itemId, start, end) {\n      if (!options.collisionDetection) {\n        return false;\n      }\n      const time = state.get('_internal.chart.time');\n      if (options.outOfBorders && (start < time.from || end > time.to)) {\n        return true;\n      }\n      let diff = api.time.date(end).diff(start, 'milliseconds');\n      if (Math.sign(diff) === -1) {\n        diff = -diff;\n      }\n      if (diff <= 1) {\n        return true;\n      }\n      const row = state.get('config.list.rows.' + rowId);\n      for (const rowItem of row._internal.items) {\n        if (rowItem.id !== itemId) {\n          if (start >= rowItem.time.start && start <= rowItem.time.end) {\n            return true;\n          }\n          if (end >= rowItem.time.start && end <= rowItem.time.end) {\n            return true;\n          }\n          if (start <= rowItem.time.start && end >= rowItem.time.end) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    function movementX(ev, row, item, zoom, timePerPixel) {\n      const movement = getMovement(data);\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      moveGhost(data, ev);\n      const leftMs = state.get('_internal.chart.time.leftGlobal') + left * timePerPixel;\n      const add = leftMs - item.time.start;\n      const originalStart = item.time.start;\n      const finalStartTime = getSnapStart(data)(item.time.start, add, item);\n      const finalAdd = finalStartTime - originalStart;\n      const collision = isCollision(row.id, item.id, item.time.start + finalAdd, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, function moveItem(time) {\n          time.start += finalAdd;\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function resizeX(ev, row, item, zoom, timePerPixel) {\n      if (!isResizeable(data)) {\n        return;\n      }\n      const time = state.get('_internal.chart.time');\n      const movement = getMovement(data);\n      const left = ev.x - movement.ganttLeft - movement.itemLeftCompensation;\n      const leftMs = time.leftGlobal + left * timePerPixel;\n      const add = leftMs - item.time.end;\n      if (item.time.end + add < item.time.start) {\n        return;\n      }\n      const originalEnd = item.time.end;\n      const finalEndTime = getSnapEnd(data)(item.time.end, add, item) - 1;\n      const finalAdd = finalEndTime - originalEnd;\n      const collision = isCollision(row.id, item.id, item.time.start, item.time.end + finalAdd);\n      if (finalAdd && !collision) {\n        state.update(`config.chart.items.${data.item.id}.time`, time => {\n          time.start = getSnapStart(data)(time.start, 0, item);\n          time.end = getSnapEnd(data)(time.end, finalAdd, item) - 1;\n          return time;\n        });\n      }\n    }\n\n    function movementY(ev, row, item, zoom, timePerPixel) {\n      moveGhost(data, ev);\n      const movement = getMovement(data);\n      const top = ev.y - movement.ganttTop;\n      const visibleRows = state.get('_internal.list.visibleRows');\n      let index = 0;\n      for (const currentRow of visibleRows) {\n        if (currentRow.top > top) {\n          if (index > 0) {\n            return index - 1;\n          }\n          return 0;\n        }\n        index++;\n      }\n      return index;\n    }\n\n    function documentMouseMove(ev) {\n      const movement = getMovement(data);\n      let item, rowId, row, zoom, timePerPixel;\n      if (movement.moving || movement.resizing) {\n        item = state.get(`config.chart.items.${data.item.id}`);\n        rowId = state.get(`config.chart.items.${data.item.id}.rowId`);\n        row = state.get(`config.list.rows.${rowId}`);\n        zoom = state.get('config.chart.time.zoom');\n        timePerPixel = state.get('_internal.chart.time.timePerPixel');\n      }\n      const moveable = isMoveable(data);\n      if (movement.moving) {\n        if (moveable === true || moveable === 'x' || (Array.isArray(moveable) && moveable.includes(rowId))) {\n          movementX(ev, row, item, zoom, timePerPixel);\n        }\n        if (!moveable || moveable === 'x') {\n          return;\n        }\n        let visibleRowsIndex = movementY(ev, row, item, zoom, timePerPixel);\n        const visibleRows = state.get('_internal.list.visibleRows');\n        if (typeof visibleRows[visibleRowsIndex] === 'undefined') {\n          if (visibleRowsIndex > 0) {\n            visibleRowsIndex = visibleRows.length - 1;\n          } else if (visibleRowsIndex < 0) {\n            visibleRowsIndex = 0;\n          }\n        }\n        const newRow = visibleRows[visibleRowsIndex];\n        const newRowId = newRow.id;\n        const collision = isCollision(newRowId, item.id, item.time.start, item.time.end);\n        if (newRowId !== item.rowId && !collision) {\n          if (!Array.isArray(moveable) || moveable.includes(newRowId)) {\n            if (!newRow.hasOwnProperty('moveable') || newRow.moveable) {\n              state.update(`config.chart.items.${item.id}.rowId`, newRowId);\n            }\n          }\n        }\n      } else if (movement.resizing && (typeof item.resizeable === 'undefined' || item.resizeable === true)) {\n        resizeX(ev, row, item, zoom, timePerPixel);\n      }\n    }\n\n    function documentMouseUp(ev) {\n      const movement = getMovement(data);\n      movement.moving = false;\n      movement.resizing = false;\n      for (const itemId in movementState) {\n        movementState[itemId].moving = false;\n        movementState[itemId].resizing = false;\n        destroyGhost(itemId);\n      }\n    }\n    element.addEventListener('mousedown', labelMouseDown);\n    resizerEl.addEventListener('mousedown', resizerMouseDown);\n    document.addEventListener('mousemove', documentMouseMove);\n    document.addEventListener('mouseup', documentMouseUp);\n    return {\n      update(node, changedData) {\n        data = changedData;\n      },\n      destroy(node, data) {\n        element.removeEventListener('mousedown', labelMouseDown);\n        resizerEl.removeEventListener('mousedown', resizerMouseDown);\n        document.removeEventListener('mousemove', documentMouseMove);\n        document.removeEventListener('mouseup', documentMouseUp);\n        resizerEl.remove();\n      }\n    };\n  }\n\n  return function initializePlugin(state, api) {\n    state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(action);\n      return actions;\n    });\n  };\n}\n"],"names":["options","moveable","resizeable","resizerContent","collisionDetection","outOfBorders","snapStart","timeStart","startDiff","snapEnd","timeEnd","endDiff","ghostNode","movementState","action","node","data","state","api","element","querySelector","isResizeable","item","hasOwnProperty","row","getMovement","itemId","id","moving","resizing","moveGhost","ev","movement","left","x","ganttLeft","itemLeftCompensation","ghost","style","top","y","ganttTop","itemTop","destroyGhost","get","removeChild","opacity","getSnapStart","getSnapEnd","resizerHTML","getClass","insertAdjacentHTML","resizerEl","labelMouseDown","button","chartLeftTime","timePerPixel","ganttRect","getBoundingClientRect","itemX","Math","round","time","start","cloneNode","getComputedStyle","position","offsetTop","width","height","clientHeight","appendChild","createGhost","resizerMouseDown","stopPropagation","end","isCollision","rowId","from","to","diff","date","sign","rowItem","_internal","items","documentMouseMove","zoom","isMoveable","Array","isArray","includes","add","originalStart","finalAdd","collision","update","movementX","visibleRowsIndex","visibleRows","index","currentRow","movementY","length","newRow","newRowId","leftGlobal","originalEnd","resizeX","documentMouseUp","display","addEventListener","document","[object Object]","changedData","removeEventListener","remove","actions","push"],"mappings":"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"}