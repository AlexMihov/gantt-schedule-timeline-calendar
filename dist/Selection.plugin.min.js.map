{"version":3,"file":"Selection.plugin.min.js","sources":["../src/plugins/Selection.plugin.ts"],"sourcesContent":["/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface RectStyle {\n  [key: string]: any;\n}\n\nexport interface Options {\n  grid?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  horizontal?: boolean;\n  vertical?: boolean;\n  rectStyle?: RectStyle;\n  selecting?: (data, type: string) => void;\n  deselecting?: (data, type: string) => void;\n  selected?: (data, type) => void;\n  deselected?: (data, type) => void;\n}\n\nexport interface Items {\n  [key: string]: string[];\n}\n\ninterface SelectingData {\n  fromX?: number;\n  fromY?: number;\n  toX?: number;\n  toY?: number;\n  startX?: number;\n  startY?: number;\n  startCell?: any;\n  selecting?: boolean;\n  selected?: Items;\n}\n\nexport interface SelectState {\n  selecting?: Items;\n  selected?: Items;\n}\n\nexport default function Selection(options: Options = {}) {\n  let vido, state, api, schedule;\n  const defaultOptions: Options = {\n    grid: false,\n    items: true,\n    rows: false,\n    horizontal: true,\n    vertical: true,\n    rectStyle: {},\n    selecting() {},\n    deselecting() {},\n    selected() {},\n    deselected() {}\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  let chartTimeline, top, left;\n  let selecting: SelectingData = {\n    fromX: -1,\n    fromY: -1,\n    toX: -1,\n    toY: -1,\n    startX: -1,\n    startY: -1,\n    startCell: false,\n    selecting: false\n  };\n  const selectionTypesIdGetters = {\n    'chart-timeline-grid-row': props => props.row.id,\n    'chart-timeline-grid-row-block': props => props.id,\n    'chart-timeline-items-row': props => props.row.id,\n    'chart-timeline-items-row-item': props => props.item.id\n  };\n  const path = 'config.plugin.selection';\n  const rectClassName = 'gantt-schedule-timeline-caledar__plugin-selection-rect';\n  const rect = document.createElement('div');\n  rect.classList.add(rectClassName);\n  rect.style.visibility = 'hidden';\n  rect.style.left = '0px';\n  rect.style.top = '0px';\n  rect.style.width = '0px';\n  rect.style.height = '0px';\n  rect.style.background = 'rgba(0, 119, 192, 0.2)';\n  rect.style.border = '2px dashed rgba(0, 119, 192, 0.75)';\n  rect.style.position = 'absolute';\n  rect.style['user-select'] = 'none';\n  rect.style['pointer-events'] = 'none';\n  for (const styleProp in options.rectStyle) {\n    rect.style[styleProp] = options.rectStyle[styleProp];\n  }\n\n  /**\n   * Selection action\n   * @param {Element} element\n   * @param {object|any} data\n   * @returns {object} with update and destroy\n   */\n  function selectionAction(element, data) {\n    let previousSelect;\n    chartTimeline = state.get('_internal.elements.chart-timeline');\n    if (!chartTimeline.querySelector('.' + rectClassName)) {\n      chartTimeline.insertAdjacentElement('beforeend', rect);\n      const bounding = chartTimeline.getBoundingClientRect();\n      left = bounding.left;\n      top = bounding.top;\n    }\n\n    /**\n     * Clear selection\n     */\n    function clearSelection() {\n      state.update(path, {\n        selecting: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        },\n        selected: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        }\n      });\n      state.update('_internal.chart.grid.rowsWithBlocks', function clearRowsWithBlocks(rowsWithBlocks) {\n        for (const row of rowsWithBlocks) {\n          for (const block of row.blocks) {\n            block.selected = false;\n            block.selecting = false;\n          }\n        }\n        return rowsWithBlocks;\n      });\n    }\n\n    /**\n     * Clone current selection state\n     * @param {object} currentSelect\n     * @returns {object} currentSelect cloned\n     */\n    function cloneSelection(currentSelect) {\n      const result: SelectingData = {};\n      result.selecting = { ...currentSelect.selecting };\n      result.selecting['chart-timeline-grid-rows'] = currentSelect.selecting['chart-timeline-grid-rows'].slice();\n      result.selecting['chart-timeline-grid-row-blocks'] = currentSelect.selecting[\n        'chart-timeline-grid-row-blocks'\n      ].slice();\n      result.selecting['chart-timeline-items-rows'] = currentSelect.selecting['chart-timeline-items-rows'].slice();\n      result.selecting['chart-timeline-items-row-items'] = currentSelect.selecting[\n        'chart-timeline-items-row-items'\n      ].slice();\n      result.selected = { ...currentSelect.selected };\n      result.selected['chart-timeline-grid-rows'] = currentSelect.selected['chart-timeline-grid-rows'].slice();\n      result.selected['chart-timeline-grid-row-blocks'] = currentSelect.selected[\n        'chart-timeline-grid-row-blocks'\n      ].slice();\n      result.selected['chart-timeline-items-rows'] = currentSelect.selected['chart-timeline-items-rows'].slice();\n      result.selected['chart-timeline-items-row-items'] = currentSelect.selected[\n        'chart-timeline-items-row-items'\n      ].slice();\n      return result;\n    }\n\n    /**\n     * Save and swap coordinates if needed\n     * @param {Event} ev\n     */\n    function saveAndSwapIfNeeded(ev) {\n      // @ts-ignore\n      const currentX = ev.x - left;\n      // @ts-ignore\n      const currentY = ev.y - top;\n      if (currentX <= selecting.startX) {\n        selecting.fromX = currentX;\n        selecting.toX = selecting.startX;\n      } else {\n        selecting.fromX = selecting.startX;\n        selecting.toX = currentX;\n      }\n      if (currentY <= selecting.startY) {\n        selecting.fromY = currentY;\n        selecting.toY = selecting.startY;\n      } else {\n        selecting.fromY = selecting.startY;\n        selecting.toY = currentY;\n      }\n    }\n\n    /**\n     * Is rectangle inside other rectangle ?\n     * @param {DOMRect} boundingRect\n     * @param {DOMRect} rectBoundingRect\n     * @returns {boolean}\n     */\n    function isInside(boundingRect, rectBoundingRect) {\n      let horizontal = false;\n      let vertical = false;\n      if (\n        (boundingRect.left >= rectBoundingRect.left && boundingRect.left <= rectBoundingRect.right) ||\n        (boundingRect.right >= rectBoundingRect.left && boundingRect.right <= rectBoundingRect.right) ||\n        (boundingRect.left <= rectBoundingRect.left && boundingRect.right >= rectBoundingRect.right)\n      ) {\n        horizontal = true;\n      }\n      if (\n        (boundingRect.top >= rectBoundingRect.top && boundingRect.top <= rectBoundingRect.bottom) ||\n        (boundingRect.bottom >= rectBoundingRect.top && boundingRect.bottom <= rectBoundingRect.bottom) ||\n        (boundingRect.top <= rectBoundingRect.top && boundingRect.bottom >= rectBoundingRect.bottom)\n      ) {\n        vertical = true;\n      }\n      return horizontal && vertical;\n    }\n\n    /**\n     * Get selecting elements\n     * @param {DOMRect} rectBoundingRect\n     * @param {Element[]} elements\n     * @param {string} type\n     * @returns {string[]}\n     */\n    function getSelecting(rectBoundingRect, elements, type, getId) {\n      const selectingResult = [];\n      const all = elements[type + 's'];\n      const currentSelecting = state.get(`${path}.selecting.${type}s`);\n      for (const element of all) {\n        const boundingRect = element.getBoundingClientRect();\n        if (isInside(boundingRect, rectBoundingRect)) {\n          selectingResult.push(getId(element.vido));\n          if (!currentSelecting.includes(getId(element.vido))) {\n            options.selecting(element.vido, type);\n          }\n        } else {\n          if (currentSelecting.includes(getId(element.vido))) {\n            options.deselecting(element.vido, type);\n          }\n        }\n      }\n      return selectingResult;\n    }\n\n    /**\n     * Select\n     * @param {Event} ev\n     */\n    function select(ev) {\n      if (!selecting.selecting) {\n        return;\n      }\n      saveAndSwapIfNeeded(ev);\n      rect.style.left = selecting.fromX + 'px';\n      rect.style.top = selecting.fromY + 'px';\n      rect.style.visibility = 'visible';\n      rect.style.width = selecting.toX - selecting.fromX + 'px';\n      rect.style.height = selecting.toY - selecting.fromY + 'px';\n      const rectBoundingRect = rect.getBoundingClientRect();\n      const elements = state.get('_internal.elements');\n      const nowSelecting = {};\n      for (const type in selectionTypesIdGetters) {\n        nowSelecting[type + 's'] = getSelecting(rectBoundingRect, elements, type, selectionTypesIdGetters[type]);\n      }\n      state.update(`${path}.selecting`, nowSelecting);\n      state.update('config.chart.items', function updateItems(items) {\n        const now = nowSelecting['chart-timeline-items-row-items'];\n        for (const itemId in items) {\n          const item = items[itemId];\n          if (now.includes(item.id)) {\n            item.selecting = true;\n          } else {\n            item.selecting = false;\n          }\n        }\n        return items;\n      });\n      state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n        const nowBlocks = nowSelecting['chart-timeline-grid-row-blocks'];\n        const nowRows = nowSelecting['chart-timeline-grid-rows'];\n        for (const row of rowsWithBlocks) {\n          if (nowRows.includes(row.id)) {\n            row.selecting = true;\n          } else {\n            row.selecting = false;\n          }\n          for (const block of row.blocks) {\n            if (nowBlocks.includes(block.id)) {\n              block.selecting = true;\n            } else {\n              block.selecting = false;\n            }\n          }\n        }\n        return rowsWithBlocks;\n      });\n    }\n\n    /**\n     * End select\n     * @param {Event} ev\n     */\n    function endSelect(ev) {\n      if (selecting.selecting) {\n        ev.stopPropagation();\n      } else {\n        clearSelection();\n        return;\n      }\n      selecting.selecting = false;\n      rect.style.visibility = 'hidden';\n      const currentSelect = state.get(path);\n      const select: SelectState = {};\n      state.update(path, value => {\n        select.selected = { ...value.selecting };\n        select.selecting = {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        } as Items;\n        return select;\n      });\n      const elements = state.get('_internal.elements');\n      for (const type in selectionTypesIdGetters) {\n        for (const element of elements[type + 's']) {\n          if (currentSelect.selecting[type + 's'].includes(element.vido.id)) {\n            options.deselecting(element.vido, type);\n          }\n        }\n      }\n      state.update('config.chart.items', function updateItems(items) {\n        const now = currentSelect.selecting['chart-timeline-items-row-items'];\n        for (const itemId in items) {\n          const item = items[itemId];\n          if (now.includes(item.id)) {\n            item.selecting = true;\n          } else {\n            item.selecting = false;\n          }\n        }\n        return items;\n      });\n      state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n        for (const row of rowsWithBlocks) {\n          for (const block of row.blocks) {\n            if (currentSelect.selecting['chart-timeline-grid-row-blocks'].includes(block.id)) {\n              if (typeof block.selected === 'undefined' || !block.selected) {\n                options.selected(block, 'chart-timeline-grid-row-block');\n              }\n              block.selected = true;\n            } else {\n              if (previousSelect.selected['chart-timeline-grid-row-blocks'].includes(block.id)) {\n                options.deselected(block, 'chart-timeline-grid-row-block');\n              }\n              block.selected = false;\n            }\n          }\n        }\n        return rowsWithBlocks;\n      });\n    }\n\n    /**\n     * Mouse down event handler\n     * @param {MouseEvent} ev\n     */\n    function mouseDown(ev) {\n      if (ev.button !== 0) {\n        return;\n      }\n      selecting.selecting = true;\n      selecting.fromX = ev.x - left;\n      selecting.fromY = ev.y - top;\n      selecting.startX = selecting.fromX;\n      selecting.startY = selecting.fromY;\n      previousSelect = cloneSelection(state.get(path));\n      clearSelection();\n    }\n\n    /**\n     * Mouse move event handler\n     * @param {MouseEvent} ev\n     */\n    function mouseMove(ev) {\n      select(ev);\n    }\n\n    /**\n     * Mouse up event handler\n     * @param {MouseEvent} ev\n     */\n    function mouseUp(ev) {\n      endSelect(ev);\n    }\n\n    element.addEventListener('mousedown', mouseDown);\n    document.addEventListener('mousemove', schedule(mouseMove));\n    document.body.addEventListener('mouseup', mouseUp);\n    return {\n      update() {},\n      destroy() {\n        document.body.removeEventListener('mouseup', mouseUp);\n        document.removeEventListener('mousemove', mouseMove);\n        element.removeEventListener('mousedown', mouseDown);\n      }\n    };\n  }\n\n  /**\n   * Grid row block action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  function gridBlockAction(element, data) {\n    const classNameSelecting = api.getClass('chart-timeline-grid-row-block') + '--selecting';\n    const classNameSelected = api.getClass('chart-timeline-grid-row-block') + '--selected';\n    if (data.selecting) {\n      element.classList.add(classNameSelecting);\n    } else {\n      element.classList.remove(classNameSelecting);\n    }\n    if (data.selected) {\n      element.classList.add(classNameSelected);\n    } else {\n      element.classList.remove(classNameSelected);\n    }\n\n    return {\n      update(element, data) {\n        if (data.selecting) {\n          element.classList.add(classNameSelecting);\n        } else {\n          element.classList.remove(classNameSelecting);\n        }\n        if (data.selected) {\n          element.classList.add(classNameSelected);\n        } else {\n          element.classList.remove(classNameSelected);\n        }\n      },\n      destroy(element, changedData) {\n        element.classList.remove(classNameSelecting);\n        element.classList.remove(classNameSelected);\n      }\n    };\n  }\n\n  /**\n   * Item action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  function itemAction(element, data) {\n    const classNameSelecting = api.getClass('chart-timeline-items-row-item') + '--selecting';\n    const classNameSelected = api.getClass('chart-timeline-items-row-item') + '--selected';\n    if (data.item.selecting) {\n      if (!element.classList.contains(classNameSelecting)) element.classList.add(classNameSelecting);\n    } else if (element.classList.contains(classNameSelecting)) {\n      element.classList.remove(classNameSelecting);\n    }\n    if (data.item.selected) {\n      if (!element.classList.contains(classNameSelected)) element.classList.add(classNameSelected);\n    } else if (element.classList.contains(classNameSelected)) {\n      element.classList.remove(classNameSelected);\n    }\n    return {\n      update(element, data) {\n        if (data.item.selecting) {\n          if (!element.classList.contains(classNameSelecting)) element.classList.add(classNameSelecting);\n        } else if (element.classList.contains(classNameSelecting)) {\n          element.classList.remove(classNameSelecting);\n        }\n        if (data.item.selected) {\n          if (!element.classList.contains(classNameSelected)) element.classList.add(classNameSelected);\n        } else if (element.classList.contains(classNameSelected)) {\n          element.classList.remove(classNameSelected);\n        }\n      },\n      destroy(element, changedData) {\n        element.classList.remove(classNameSelecting);\n        element.classList.remove(classNameSelected);\n      }\n    };\n  }\n\n  /**\n   * On block create handler\n   * @param {object} block\n   * @returns {object} block\n   */\n  function onBlockCreate(block) {\n    const select = state.get('config.plugin.selection');\n    if (select.selected['chart-timeline-grid-row-blocks'].find(id => id === block.id)) {\n      block.selected = true;\n    } else {\n      block.selected = false;\n    }\n    return block;\n  }\n\n  return function initialize(mainVido) {\n    vido = mainVido;\n    state = vido.state;\n    api = vido.api;\n    schedule = vido.schedule;\n    if (typeof state.get(path) === 'undefined') {\n      state.update(path, {\n        selecting: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        },\n        selected: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        }\n      });\n    }\n    state.update('config.chart.items', items => {\n      for (const itemId in items) {\n        const item = items[itemId];\n        if (typeof item.selecting === 'undefined') {\n          item.selecting = false;\n        }\n        if (typeof item.selected === 'undefined') {\n          item.selected = false;\n        }\n      }\n      return items;\n    });\n    state.update('config.actions.chart-timeline', actions => {\n      actions.push(selectionAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-grid-row-block', actions => {\n      actions.push(gridBlockAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(itemAction);\n      return actions;\n    });\n    state.update('config.chart.grid.block.onCreate', onCreate => {\n      onCreate.push(onBlockCreate);\n      return onCreate;\n    });\n  };\n}\n"],"names":["Selection","options","vido","state","api","schedule","defaultOptions","grid","items","rows","horizontal","vertical","rectStyle","[object Object]","chartTimeline","top","left","Object","selecting","fromX","fromY","toX","toY","startX","startY","startCell","selectionTypesIdGetters","chart-timeline-grid-row","props","row","id","chart-timeline-grid-row-block","chart-timeline-items-row","chart-timeline-items-row-item","item","path","rectClassName","rect","document","createElement","classList","add","style","visibility","width","height","background","border","position","styleProp","selectionAction","element","data","previousSelect","get","querySelector","insertAdjacentElement","bounding","getBoundingClientRect","clearSelection","update","chart-timeline-grid-rows","chart-timeline-grid-row-blocks","chart-timeline-items-rows","chart-timeline-items-row-items","selected","clearRowsWithBlocks","rowsWithBlocks","block","blocks","isInside","boundingRect","rectBoundingRect","right","bottom","getSelecting","elements","type","getId","selectingResult","all","currentSelecting","push","includes","deselecting","select","ev","saveAndSwapIfNeeded","currentX","x","currentY","y","nowSelecting","updateItems","now","itemId","updateRowsWithBlocks","nowBlocks","nowRows","mouseDown","button","cloneSelection","currentSelect","result","slice","mouseMove","mouseUp","endSelect","stopPropagation","value","deselected","addEventListener","body","removeEventListener","gridBlockAction","classNameSelecting","getClass","classNameSelected","remove","changedData","itemAction","contains","onBlockCreate","find","initialize","mainVido","actions","onCreate"],"mappings":"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"}