!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Selection=t()}(this,(function(){"use strict";
/**
   * Selection plugin
   *
   * @copyright Rafal Pospiech <https://neuronet.io>
   * @author    Rafal Pospiech <neuronet.io@gmail.com>
   * @package   gantt-schedule-timeline-calendar
   * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)
   * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
   */return function Selection(e={}){let t,i,s,c;const l="config.plugin.selection",o="gantt-schedule-timeline-caledar__plugin-selection-rect",n=document.createElement("div");n.classList.add(o),n.style.visibility="hidden",n.style.left="0px",n.style.top="0px",n.style.width="0px",n.style.height="0px",n.style.background="rgba(0, 119, 192, 0.2)",n.style.border="2px dashed rgba(0, 119, 192, 0.75)",n.style.position="absolute",n.style["user-select"]="none",n.style["pointer-events"]="none";const r={grid:!1,items:!0,rows:!1,horizontal:!0,vertical:!0,rectStyle:{},selecting(){},deselecting(){},selected(){},deselected(){},canSelect:(e,t,i)=>t,canDeselect:(e,t,i)=>[],getApi(){}};e=Object.assign(Object.assign({},r),e);for(const t in e.rectStyle)n.style[t]=e.rectStyle[t];let a={fromX:-1,fromY:-1,toX:-1,toY:-1,startX:-1,startY:-1,startCell:!1,selecting:!1};const d={"chart-timeline-grid-row":e=>e.row.id,"chart-timeline-grid-row-block":e=>e.id,"chart-timeline-items-row":e=>e.row.id,"chart-timeline-items-row-item":e=>e.item.id};class SelectionAction{constructor(t,s){let r,m={};if(this.chartTimeline=i.get("_internal.elements.chart-timeline"),!this.chartTimeline.querySelector("."+o)){this.chartTimeline.insertAdjacentElement("beforeend",n);const e=this.chartTimeline.getBoundingClientRect();this.left=e.left,this.top=e.top}function clearSelection(t=!1){let s;i.update(l,i=>s={selecting:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]},selected:{"chart-timeline-grid-rows":t?[]:e.canDeselect("chart-timeline-grid-rows",i.selected["chart-timeline-grid-rows"],i),"chart-timeline-grid-row-blocks":t?[]:e.canDeselect("chart-timeline-grid-row-blocks",i.selected["chart-timeline-grid-row-blocks"],i),"chart-timeline-items-rows":t?[]:e.canDeselect("chart-timeline-items-rows",i.selected["chart-timeline-items-rows"],i),"chart-timeline-items-row-items":t?[]:e.canDeselect("chart-timeline-items-rows",i.selected["chart-timeline-items-rows"],i)}}),i.update("_internal.chart.grid.rowsWithBlocks",(function clearRowsWithBlocks(e){for(const t of e)for(const e of t.blocks)e.selected=s.selected["chart-timeline-grid-row-blocks"].includes(e.id),e.selecting=!1;return e}))}m.clearSelection=clearSelection;const h=e=>{const t=e.x-this.left,i=e.y-this.top;t<=a.startX?(a.fromX=t,a.toX=a.startX):(a.fromX=a.startX,a.toX=t),i<=a.startY?(a.fromY=i,a.toY=a.startY):(a.fromY=a.startY,a.toY=i)},g=(e,t)=>{let i=!1,s=!1;return(e.left>t.left&&e.left<t.right||e.right>t.left&&e.right<t.right||e.left<=t.left&&e.right>=t.right)&&(i=!0),(e.top>t.top&&e.top<t.bottom||e.bottom>t.top&&e.bottom<t.bottom||e.top<=t.top&&e.bottom>=t.bottom)&&(s=!0),i&&s},u=(t,s,c,o)=>{const n=[],r=[],a=s[c+"s"],d=i.get(l),m=d.selecting[c+"s"];for(const i of a){const s=i.getBoundingClientRect();if(g(s,t)){r.push(i.vido),e.canSelect(c,r,d).includes(i.vido)?(m.includes(o(i.vido))||e.selecting(i.vido,c),n.push(o(i.vido))):r.unshift()}else m.includes(o(i.vido))&&e.deselecting(i.vido,c)}return n},f=t=>{if(!a.selecting)return void clearSelection();if(t.stopPropagation(),a.fromX===t.x-this.left&&a.fromY===t.y-this.top)return a.selecting=!1,void(n.style.visibility="hidden");a.selecting=!1,n.style.visibility="hidden";const s=i.get(l),c={};i.update(l,e=>(c.selected=Object.assign({},e.selecting),c.selecting={"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]},c));const o=i.get("_internal.elements");for(const t in d)for(const i of o[t+"s"])s.selecting[t+"s"].includes(i.vido.id)&&e.deselecting(i.vido,t);i.update("config.chart.items",(function updateItems(e){const t=s.selecting["chart-timeline-items-row-items"];for(const i in e){const s=e[i];t.includes(s.id)?s.selecting=!0:s.selecting=!1}return e})),i.update("_internal.chart.grid.rowsWithBlocks",(function updateRowsWithBlocks(t){for(const i of t)for(const t of i.blocks)s.selecting["chart-timeline-grid-row-blocks"].includes(t.id)?(void 0!==t.selected&&t.selected||e.selected(t,"chart-timeline-grid-row-block"),t.selected=!0):(r.selected["chart-timeline-grid-row-blocks"].includes(t.id)&&e.deselected(t,"chart-timeline-grid-row-block"),t.selected=!1);return t}))};this.mouseDown=e=>{0===e.button&&(a.selecting=!0,a.fromX=e.x-this.left,a.fromY=e.y-this.top,a.startX=a.fromX,a.startY=a.fromY,r=function cloneSelection(e){const t={};return t.selecting=Object.assign({},e.selecting),t.selecting["chart-timeline-grid-rows"]=e.selecting["chart-timeline-grid-rows"].slice(),t.selecting["chart-timeline-grid-row-blocks"]=e.selecting["chart-timeline-grid-row-blocks"].slice(),t.selecting["chart-timeline-items-rows"]=e.selecting["chart-timeline-items-rows"].slice(),t.selecting["chart-timeline-items-row-items"]=e.selecting["chart-timeline-items-row-items"].slice(),t.selected=Object.assign({},e.selected),t.selected["chart-timeline-grid-rows"]=e.selected["chart-timeline-grid-rows"].slice(),t.selected["chart-timeline-grid-row-blocks"]=e.selected["chart-timeline-grid-row-blocks"].slice(),t.selected["chart-timeline-items-rows"]=e.selected["chart-timeline-items-rows"].slice(),t.selected["chart-timeline-items-row-items"]=e.selected["chart-timeline-items-row-items"].slice(),t}(i.get(l)),clearSelection())},this.mouseMove=e=>{(e=>{if(!a.selecting)return;clearSelection(),h(e),n.style.left=a.fromX+"px",n.style.top=a.fromY+"px",n.style.visibility="visible",n.style.width=a.toX-a.fromX+"px",n.style.height=a.toY-a.fromY+"px";const t=n.getBoundingClientRect(),s=i.get("_internal.elements"),c={};for(const e in d)c[e+"s"]=u(t,s,e,d[e]);i.update(`${l}.selecting`,c),i.update("config.chart.items",(function updateItems(e){const t=c["chart-timeline-items-row-items"];for(const i in e){const s=e[i];t.includes(s.id)?s.selecting=!0:s.selecting=!1}return e}),{only:["selecting"]}),i.update("_internal.chart.grid.rowsWithBlocks",(function updateRowsWithBlocks(e){const t=c["chart-timeline-grid-row-blocks"],i=c["chart-timeline-grid-rows"];for(const s of e){i.includes(s.id)?s.selecting=!0:s.selecting=!1;for(const e of s.blocks)t.includes(e.id)?e.selecting=!0:e.selecting=!1}return e}))})(e)},this.mouseUp=e=>{a.selecting&&f(e)},t.addEventListener("mousedown",this.mouseDown),document.addEventListener("mousemove",c(this.mouseMove)),document.addEventListener("mouseup",this.mouseUp),e.getApi(m)}update(){const e=this.chartTimeline.getBoundingClientRect();this.left=e.left,this.top=e.top}destroy(e){document.removeEventListener("mouseup",this.mouseUp),document.removeEventListener("mousemove",this.mouseMove),e.removeEventListener("mousedown",this.mouseDown)}}function updateSelection(e,t,i,s,c){t&&!e.classList.contains(s)?e.classList.add(s):!t&&e.classList.contains(s)&&e.classList.remove(s),i&&!e.classList.contains(c)?e.classList.add(c):!i&&e.classList.contains(c)&&e.classList.remove(c)}class GridBlockAction{constructor(e,t){this.classNameSelecting=s.getClass("chart-timeline-grid-row-block")+"--selecting",this.classNameSelected=s.getClass("chart-timeline-grid-row-block")+"--selected",updateSelection(e,t.selecting,t.selected,this.classNameSelecting,this.classNameSelected)}update(e,t){updateSelection(e,t.selecting,t.selected,this.classNameSelecting,this.classNameSelected)}destroy(e,t){e.classList.remove(this.classNameSelecting),e.classList.remove(this.classNameSelected)}}class ItemAction{constructor(e,t){this.classNameSelecting=s.getClass("chart-timeline-items-row-item")+"--selecting",this.classNameSelected=s.getClass("chart-timeline-items-row-item")+"--selected",updateSelection(e,t.item.selecting,t.item.selected,this.classNameSelecting,this.classNameSelected)}update(e,t){updateSelection(e,t.item.selecting,t.item.selected,this.classNameSelecting,this.classNameSelected)}destroy(e,t){e.classList.remove(this.classNameSelecting),e.classList.remove(this.classNameSelected)}}function onBlockCreate(e){const t=i.get("config.plugin.selection.selected.chart-timeline-grid-row-blocks");for(const i of t)if(i===e.id)return e.selected=!0,e;return e.selected=!1,e}return function initialize(e){i=(t=e).state,s=t.api,c=t.schedule,void 0===i.get(l)&&i.update(l,{selecting:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]},selected:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]}}),i.update("config.chart.items",e=>{for(const t in e){const i=e[t];void 0===i.selecting&&(i.selecting=!1),void 0===i.selected&&(i.selected=!1)}return e}),i.update("config.actions.chart-timeline",e=>(e.push(SelectionAction),e)),i.update("config.actions.chart-timeline-grid-row-block",e=>(e.push(GridBlockAction),e)),i.update("config.actions.chart-timeline-items-row-item",e=>(e.push(ItemAction),e)),i.update("config.chart.grid.block.onCreate",e=>(e.push(onBlockCreate),e))}}}));
//# sourceMappingURL=Selection.plugin.min.js.map
