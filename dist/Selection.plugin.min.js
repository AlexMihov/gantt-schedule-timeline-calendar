!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Selection=t()}(this,(function(){"use strict";
/**
   * Selection plugin
   *
   * @copyright Rafal Pospiech <https://neuronet.io>
   * @author    Rafal Pospiech <neuronet.io@gmail.com>
   * @package   gantt-schedule-timeline-calendar
   * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)
   * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
   */return function Selection(e={}){let t,i,s,c;const n={grid:!1,items:!0,rows:!1,horizontal:!0,vertical:!0,rectStyle:{},selecting(){},deselecting(){},selected(){},deselected(){},canSelect:(e,t)=>t};let o,l,r;e=Object.assign(Object.assign({},n),e);let a={fromX:-1,fromY:-1,toX:-1,toY:-1,startX:-1,startY:-1,startCell:!1,selecting:!1};const d={"chart-timeline-grid-row":e=>e.row.id,"chart-timeline-grid-row-block":e=>e.id,"chart-timeline-items-row":e=>e.row.id,"chart-timeline-items-row-item":e=>e.item.id},m="config.plugin.selection",g="gantt-schedule-timeline-caledar__plugin-selection-rect",u=document.createElement("div");u.classList.add(g),u.style.visibility="hidden",u.style.left="0px",u.style.top="0px",u.style.width="0px",u.style.height="0px",u.style.background="rgba(0, 119, 192, 0.2)",u.style.border="2px dashed rgba(0, 119, 192, 0.75)",u.style.position="absolute",u.style["user-select"]="none",u.style["pointer-events"]="none";for(const t in e.rectStyle)u.style[t]=e.rectStyle[t];function selectionAction(t,s){let n;if(!(o=i.get("_internal.elements.chart-timeline")).querySelector("."+g)){o.insertAdjacentElement("beforeend",u);const e=o.getBoundingClientRect();r=e.left,l=e.top}function clearSelection(){i.update(m,{selecting:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]},selected:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]}}),i.update("_internal.chart.grid.rowsWithBlocks",(function clearRowsWithBlocks(e){for(const t of e)for(const e of t.blocks)e.selected=!1,e.selecting=!1;return e}))}function isInside(e,t){let i=!1,s=!1;return(e.left>t.left&&e.left<t.right||e.right>t.left&&e.right<t.right||e.left<=t.left&&e.right>=t.right)&&(i=!0),(e.top>t.top&&e.top<t.bottom||e.bottom>t.top&&e.bottom<t.bottom||e.top<=t.top&&e.bottom>=t.bottom)&&(s=!0),i&&s}function getSelecting(t,s,c,n){const o=[],l=[],r=s[c+"s"],a=i.get(`${m}.selecting.${c}s`);for(const i of r){if(isInside(i.getBoundingClientRect(),t)){l.push(i.vido),e.canSelect(c,l).includes(i.vido)?(a.includes(n(i.vido))||e.selecting(i.vido,c),o.push(n(i.vido))):l.unshift()}else a.includes(n(i.vido))&&e.deselecting(i.vido,c)}return o}function select(e){if(!a.selecting)return;!function saveAndSwapIfNeeded(e){const t=e.x-r,i=e.y-l;t<=a.startX?(a.fromX=t,a.toX=a.startX):(a.fromX=a.startX,a.toX=t),i<=a.startY?(a.fromY=i,a.toY=a.startY):(a.fromY=a.startY,a.toY=i)}(e),u.style.left=a.fromX+"px",u.style.top=a.fromY+"px",u.style.visibility="visible",u.style.width=a.toX-a.fromX+"px",u.style.height=a.toY-a.fromY+"px";const t=u.getBoundingClientRect(),s=i.get("_internal.elements"),c={};for(const e in d)c[e+"s"]=getSelecting(t,s,e,d[e]);i.update(`${m}.selecting`,c),i.update("config.chart.items",(function updateItems(e){const t=c["chart-timeline-items-row-items"];for(const i in e){const s=e[i];t.includes(s.id)?s.selecting=!0:s.selecting=!1}return e})),i.update("_internal.chart.grid.rowsWithBlocks",(function updateRowsWithBlocks(e){const t=c["chart-timeline-grid-row-blocks"],i=c["chart-timeline-grid-rows"];for(const s of e){i.includes(s.id)?s.selecting=!0:s.selecting=!1;for(const e of s.blocks)t.includes(e.id)?e.selecting=!0:e.selecting=!1}return e}))}function mouseDown(e){0===e.button&&(a.selecting=!0,a.fromX=e.x-r,a.fromY=e.y-l,a.startX=a.fromX,a.startY=a.fromY,n=function cloneSelection(e){const t={};return t.selecting=Object.assign({},e.selecting),t.selecting["chart-timeline-grid-rows"]=e.selecting["chart-timeline-grid-rows"].slice(),t.selecting["chart-timeline-grid-row-blocks"]=e.selecting["chart-timeline-grid-row-blocks"].slice(),t.selecting["chart-timeline-items-rows"]=e.selecting["chart-timeline-items-rows"].slice(),t.selecting["chart-timeline-items-row-items"]=e.selecting["chart-timeline-items-row-items"].slice(),t.selected=Object.assign({},e.selected),t.selected["chart-timeline-grid-rows"]=e.selected["chart-timeline-grid-rows"].slice(),t.selected["chart-timeline-grid-row-blocks"]=e.selected["chart-timeline-grid-row-blocks"].slice(),t.selected["chart-timeline-items-rows"]=e.selected["chart-timeline-items-rows"].slice(),t.selected["chart-timeline-items-row-items"]=e.selected["chart-timeline-items-row-items"].slice(),t}(i.get(m)),clearSelection())}function mouseMove(e){select(e)}function mouseUp(t){!function endSelect(t){if(!a.selecting)return void clearSelection();t.stopPropagation(),a.selecting=!1,u.style.visibility="hidden";const s=i.get(m),c={};i.update(m,e=>(c.selected=Object.assign({},e.selecting),c.selecting={"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]},c));const o=i.get("_internal.elements");for(const t in d)for(const i of o[t+"s"])s.selecting[t+"s"].includes(i.vido.id)&&e.deselecting(i.vido,t);i.update("config.chart.items",(function updateItems(e){const t=s.selecting["chart-timeline-items-row-items"];for(const i in e){const s=e[i];t.includes(s.id)?s.selecting=!0:s.selecting=!1}return e})),i.update("_internal.chart.grid.rowsWithBlocks",(function updateRowsWithBlocks(t){for(const i of t)for(const t of i.blocks)s.selecting["chart-timeline-grid-row-blocks"].includes(t.id)?(void 0!==t.selected&&t.selected||e.selected(t,"chart-timeline-grid-row-block"),t.selected=!0):(n.selected["chart-timeline-grid-row-blocks"].includes(t.id)&&e.deselected(t,"chart-timeline-grid-row-block"),t.selected=!1);return t}))}(t)}return t.addEventListener("mousedown",mouseDown),document.addEventListener("mousemove",c(mouseMove)),document.body.addEventListener("mouseup",mouseUp),{update(){},destroy(){document.body.removeEventListener("mouseup",mouseUp),document.removeEventListener("mousemove",mouseMove),t.removeEventListener("mousedown",mouseDown)}}}function updateSelection(e,t,i,s,c){t&&!e.classList.contains(s)?e.classList.add(s):!t&&e.classList.contains(s)&&e.classList.remove(s),i&&!e.classList.contains(c)?e.classList.add(c):!i&&e.classList.contains(c)&&e.classList.remove(c)}class GridBlockAction{constructor(e,t){this.classNameSelecting=s.getClass("chart-timeline-grid-row-block")+"--selecting",this.classNameSelected=s.getClass("chart-timeline-grid-row-block")+"--selected",updateSelection(e,t.selecting,t.selected,this.classNameSelecting,this.classNameSelected)}update(e,t){updateSelection(e,t.selecting,t.selected,this.classNameSelecting,this.classNameSelected)}destroy(e,t){e.classList.remove(this.classNameSelecting),e.classList.remove(this.classNameSelected)}}class ItemAction{constructor(e,t){this.classNameSelecting=s.getClass("chart-timeline-items-row-item")+"--selecting",this.classNameSelected=s.getClass("chart-timeline-items-row-item")+"--selected",updateSelection(e,t.item.selecting,t.item.selected,this.classNameSelecting,this.classNameSelected)}update(e,t){updateSelection(e,t.item.selecting,t.item.selected,this.classNameSelecting,this.classNameSelected)}destroy(e,t){e.classList.remove(this.classNameSelecting),e.classList.remove(this.classNameSelected)}}function onBlockCreate(e){const t=i.get("config.plugin.selection.selected.chart-timeline-grid-row-blocks");for(const i of t)if(i===e.id)return e.selected=!0,e;return e.selected=!1,e}return function initialize(e){i=(t=e).state,s=t.api,c=t.schedule,void 0===i.get(m)&&i.update(m,{selecting:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]},selected:{"chart-timeline-grid-rows":[],"chart-timeline-grid-row-blocks":[],"chart-timeline-items-rows":[],"chart-timeline-items-row-items":[]}}),i.update("config.chart.items",e=>{for(const t in e){const i=e[t];void 0===i.selecting&&(i.selecting=!1),void 0===i.selected&&(i.selected=!1)}return e}),i.update("config.actions.chart-timeline",e=>(e.push(selectionAction),e)),i.update("config.actions.chart-timeline-grid-row-block",e=>(e.push(GridBlockAction),e)),i.update("config.actions.chart-timeline-items-row-item",e=>(e.push(ItemAction),e)),i.update("config.chart.grid.block.onCreate",e=>(e.push(onBlockCreate),e))}}}));
//# sourceMappingURL=Selection.plugin.min.js.map
