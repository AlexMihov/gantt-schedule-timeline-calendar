!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e=e||self).ItemHold=o()}(this,(function(){"use strict";
/**
   * ItemHold plugin
   *
   * @copyright Rafal Pospiech <https://neuronet.io>
   * @author    Rafal Pospiech <neuronet.io@gmail.com>
   * @package   gantt-schedule-timeline-calendar
   * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)
   * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
   */return function ItemHold(e={}){const o={time:1e3,movementThreshold:2,action(e,o){}};e=Object.assign(Object.assign({},o),e);const n={},t={x:0,y:0};function onMouseUp(e){void 0!==n[e]&&delete n[e]}function action(o,i){function elementMouseDown(s){!function onMouseDown(o,i,s){void 0===n[o.id]&&(n[o.id]={x:s.x,y:s.y},setTimeout(()=>{if(void 0!==n[o.id]){let s=!0;const u=Math.abs(n[o.id].x-t.x),d=Math.abs(n[o.id].y-t.y);u>e.movementThreshold&&(s=!1),d>e.movementThreshold&&(s=!1),delete n[o.id],s&&e.action(i,o)}},e.time))}(i.item,o,s)}function onMouseMove(e){t.x=e.x,t.y=e.y}return o.addEventListener("mousedown",elementMouseDown),document.addEventListener("mouseup",(function mouseUp(){onMouseUp(i.item.id)})),document.addEventListener("mousemove",onMouseMove),{update(e,o){i=o},destroy(e,o){document.removeEventListener("mouseup",onMouseUp),document.removeEventListener("mousemove",onMouseMove),e.removeEventListener("mousedown",elementMouseDown)}}}return function initialize(e){e.state.update("config.actions.chart-timeline-items-row-item",e=>(e.push(action),e))}}}));
//# sourceMappingURL=ItemHold.plugin.min.js.map
