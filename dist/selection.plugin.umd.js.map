{"version":3,"file":"selection.plugin.umd.js","sources":["../node_modules/@neuronet.io/vido/src/helpers.ts","../src/plugins/timeline-pointer.plugin.ts","../src/plugins/selection.plugin.ts"],"sourcesContent":["/**\n * Schedule - a throttle function that uses requestAnimationFrame to limit the rate at which a function is called.\n *\n * @param {function} fn\n * @returns {function}\n */\nexport function schedule(fn: (argument) => void | any) {\n  let frameId = 0;\n  function wrapperFn(argument) {\n    if (frameId) {\n      return;\n    }\n    function executeFrame() {\n      frameId = 0;\n      fn.apply(undefined, [argument]);\n    }\n    frameId = requestAnimationFrame(executeFrame);\n  }\n  return wrapperFn;\n}\n\n/**\n * Is object - helper function to determine if specified variable is an object\n *\n * @param {any} item\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return item && typeof item === 'object' && item.constructor && item.constructor.name === 'Object';\n}\n\n/**\n * Merge deep - helper function which will merge objects recursively - creating brand new one - like clone\n *\n * @param {object} target\n * @params {[object]} sources\n * @returns {object}\n */\nexport function mergeDeep(target, ...sources) {\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof source[key].clone === 'function') {\n          target[key] = source[key].clone();\n        } else {\n          if (typeof target[key] === 'undefined') {\n            target[key] = {};\n          }\n          target[key] = mergeDeep(target[key], source[key]);\n        }\n      } else if (Array.isArray(source[key])) {\n        target[key] = new Array(source[key].length);\n        let index = 0;\n        for (let item of source[key]) {\n          if (isObject(item)) {\n            if (typeof item.clone === 'function') {\n              target[key][index] = item.clone();\n            } else {\n              target[key][index] = mergeDeep({}, item);\n            }\n          } else {\n            target[key][index] = item;\n          }\n          index++;\n        }\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n  if (!sources.length) {\n    return target;\n  }\n  return mergeDeep(target, ...sources);\n}\n\n/**\n * Clone helper function\n *\n * @param source\n * @returns {object} cloned source\n */\nexport function clone(source) {\n  if (typeof source.actions !== 'undefined') {\n    const actns = source.actions.map((action) => {\n      const result = { ...action };\n      const props = { ...result.props };\n      delete props.state;\n      delete props.api;\n      delete result.element;\n      result.props = props;\n      return result;\n    });\n    source.actions = actns;\n  }\n  return mergeDeep({}, source);\n}\n\nexport default {\n  mergeDeep,\n  clone,\n  schedule,\n};\n","/**\n * TimelinePointer plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nimport DeepState from 'deep-state-observer';\nimport { Api } from '../api/api';\nimport { Vido } from '../gstc';\nimport { mergeDeep } from '@neuronet.io/vido/src/helpers';\n\nexport const CELL = 'chart-timeline-grid-row-cell';\nexport type CELL_TYPE = 'chart-timeline-grid-row-cell';\nexport const ITEM = 'chart-timeline-items-row-item';\nexport type ITEM_TYPE = 'chart-timeline-items-row-item';\n\nexport interface PointerEvents {\n  down: PointerEvent | null;\n  move: PointerEvent | null;\n  up: PointerEvent | null;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport type PointerState = 'up' | 'down' | 'move';\n\nexport interface CaptureEvents {\n  up?: boolean;\n  down?: boolean;\n  move?: boolean;\n}\n\nexport interface Options {\n  enabled?: boolean;\n  captureEvents?: CaptureEvents;\n}\n\nexport interface Offset {\n  top: number;\n  left: number;\n}\n\nexport interface PluginData extends Options {\n  isMoving: boolean;\n  pointerState: PointerState;\n  currentTarget: HTMLElement | null;\n  realTarget: HTMLElement | null;\n  targetType: ITEM_TYPE | CELL_TYPE | '';\n  targetData: any | null;\n  events: PointerEvents;\n  offset: Offset;\n  initialPosition: Point;\n  currentPosition: Point;\n}\n\nfunction generateEmptyData(options: Options = {}): PluginData {\n  const result: PluginData = {\n    enabled: true,\n    isMoving: false,\n    pointerState: 'up',\n    currentTarget: null,\n    realTarget: null,\n    targetType: '',\n    targetData: null,\n    offset: { top: 0, left: 0 },\n    captureEvents: {\n      down: false,\n      up: false,\n      move: false,\n    },\n    initialPosition: { x: 0, y: 0 },\n    currentPosition: { x: 0, y: 0 },\n    events: {\n      down: null,\n      move: null,\n      up: null,\n    },\n  };\n  if (options.captureEvents) {\n    result.captureEvents = {\n      ...result.captureEvents,\n      ...options.captureEvents,\n    };\n  }\n  return result;\n}\n\nconst pluginPath = 'config.plugin.TimelinePointer';\n\nclass TimelinePointer {\n  private element: HTMLElement;\n  private vido: Vido;\n  private api: Api;\n  private state: DeepState;\n  private data: PluginData;\n  private unsub = [];\n  private classNames = {\n    cell: '',\n    item: '',\n  };\n\n  constructor(options: Options, vido: Vido) {\n    this.vido = vido;\n    this.api = vido.api;\n    this.state = vido.state;\n    this.element = this.state.get(`$data.elements.chart-timeline`);\n    this.pointerDown = this.pointerDown.bind(this);\n    this.pointerMove = this.pointerMove.bind(this);\n    this.pointerUp = this.pointerUp.bind(this);\n    this.data = generateEmptyData(options);\n    this.classNames.cell = this.api.getClass(CELL);\n    this.classNames.item = this.api.getClass(ITEM);\n    this.destroy = this.destroy.bind(this);\n    this.element.addEventListener('pointerdown', this.pointerDown /*, this.data.captureEvents.down*/);\n    document.addEventListener('pointerup', this.pointerUp /*, this.data.captureEvents.up*/);\n    document.addEventListener('pointermove', this.pointerMove /*, this.data.captureEvents.move*/);\n    this.unsub.push(this.state.subscribe(pluginPath, (value) => (this.data = value)));\n    this.unsub.push(\n      this.state.subscribe('config.scroll.vertical.offset', (offset) => {\n        this.data.offset.left = offset;\n        this.updateData();\n      })\n    );\n  }\n\n  public destroy() {\n    this.element.removeEventListener('pointerdown', this.pointerDown);\n    document.removeEventListener('pointerup', this.pointerUp);\n    document.removeEventListener('pointermove', this.pointerMove);\n  }\n\n  private updateData() {\n    this.state.update(pluginPath, () => ({ ...this.data }));\n  }\n\n  private getRealTarget(ev: PointerEvent) {\n    let realTarget: HTMLElement = (ev.target as HTMLElement).closest('.' + this.classNames.item) as HTMLElement;\n    if (realTarget) {\n      return realTarget;\n    }\n    realTarget = (ev.target as HTMLElement).closest('.' + this.classNames.cell) as HTMLElement;\n    if (realTarget) {\n      return realTarget;\n    }\n    return null;\n  }\n\n  private getRealPosition(ev: PointerEvent): Point {\n    const pos = { x: 0, y: 0 };\n    if (this.element) {\n      const bounding = this.element.getBoundingClientRect();\n      pos.x = ev.x - bounding.x;\n      pos.y = ev.y - bounding.y;\n      const scrollOffsetTop = this.state.get('config.scroll.vertical.offset') || 0;\n      pos.y += scrollOffsetTop;\n    }\n    return pos;\n  }\n\n  private pointerDown(ev: PointerEvent) {\n    if (!this.data.enabled) return;\n    this.data.pointerState = 'down';\n    this.data.currentTarget = ev.target as HTMLElement;\n    this.data.realTarget = this.getRealTarget(ev);\n    if (this.data.realTarget) {\n      if (this.data.realTarget.classList.contains(this.classNames.item)) {\n        this.data.targetType = ITEM;\n        // @ts-ignore\n        this.data.targetData = this.data.realTarget.vido.item;\n      } else if (this.data.realTarget.classList.contains(this.classNames.cell)) {\n        this.data.targetType = CELL;\n        // @ts-ignore\n        this.data.targetData = this.data.realTarget.vido;\n      } else {\n        this.data.targetType = '';\n      }\n    } else {\n      this.data.targetType = '';\n      this.data.targetData = null;\n    }\n    this.data.isMoving = !!this.data.realTarget;\n    this.data.events.down = ev;\n    this.data.events.move = ev;\n    const realPosition = this.getRealPosition(ev);\n    this.data.initialPosition = realPosition;\n    this.data.currentPosition = realPosition;\n    this.updateData();\n  }\n\n  private pointerUp(ev: PointerEvent) {\n    if (!this.data.enabled) return;\n    this.data.pointerState = 'up';\n    this.data.isMoving = false;\n    this.data.events.up = ev;\n    this.data.currentPosition = this.getRealPosition(ev);\n    this.updateData();\n  }\n\n  private pointerMove(ev: PointerEvent) {\n    if (!this.data.enabled || !this.data.isMoving) return;\n    this.data.pointerState = 'move';\n    this.data.events.move = ev;\n    this.data.currentPosition = this.getRealPosition(ev);\n    this.updateData();\n  }\n}\n\nexport function Plugin(options: Options) {\n  return function initialize(vidoInstance: Vido) {\n    const currentOptions = vidoInstance.state.get(pluginPath);\n    if (currentOptions) {\n      options = mergeDeep(mergeDeep({}, options), currentOptions);\n    }\n    const subs = [];\n    const defaultData = generateEmptyData(options);\n    // for other plugins that are initialized before elements are saved\n    vidoInstance.state.update(pluginPath, defaultData);\n\n    // initialize only if chart element is mounted\n    let timelinePointerDestroy;\n    subs.push(\n      vidoInstance.state.subscribe('$data.elements.chart-timeline', (timelineElement: HTMLElement) => {\n        if (timelineElement) {\n          if (timelinePointerDestroy) timelinePointerDestroy();\n          const timelinePointer = new TimelinePointer(options, vidoInstance);\n          timelinePointerDestroy = timelinePointer.destroy;\n        }\n      })\n    );\n    return function destroy() {\n      subs.forEach((unsub) => unsub());\n      if (timelinePointerDestroy) timelinePointerDestroy();\n    };\n  };\n}\n","/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nimport {\n  PluginData as TimelinePointerPluginData,\n  ITEM,\n  ITEM_TYPE,\n  CELL,\n  CELL_TYPE,\n  Point,\n  PointerState,\n} from './timeline-pointer.plugin';\n\nimport { Item, GridCell, Items, Vido, htmlResult, Wrapper, ItemData, GridRow, GridRows, GridCells } from '../gstc';\nimport DeepState from 'deep-state-observer';\nimport { Api } from '../api/api';\nimport { StyleMap, lithtml } from '@neuronet.io/vido/src/vido';\nimport { mergeDeep } from '@neuronet.io/vido/src/helpers';\n\nexport type ModKey = 'shift' | 'ctrl' | 'alt' | '';\n\nexport interface SelectionItems {\n  [key: string]: Item[];\n}\n\nexport interface SelectState {\n  selecting?: SelectionItems;\n  selected?: SelectionItems;\n}\n\nexport interface Options {\n  enabled?: boolean;\n  cells?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  showOverlay?: boolean;\n  rectangularSelection?: boolean;\n  multipleSelection?: boolean;\n  selectKey?: ModKey;\n  multiKey?: ModKey;\n  selectedClassName?: string;\n  selectingClassName?: string;\n  onSelecting?: (selecting: Selection, last: Selection) => Selection;\n  onSelected?: (selected: Selection, last: Selection) => Selection;\n}\n\nfunction prepareOptions(options: Options) {\n  const defaultOptions: Options = {\n    enabled: true,\n    cells: true,\n    items: true,\n    rows: false,\n    showOverlay: true,\n    rectangularSelection: true,\n    multipleSelection: true,\n    selectedClassName: 'gstc__grid-cell-selected',\n    selectingClassName: 'gstc__grid-cell-selecting',\n    onSelecting(selecting) {\n      return selecting;\n    },\n    onSelected(selected) {\n      return selected;\n    },\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  return options;\n}\n\nconst pluginPath = 'config.plugin.Selection';\n\nexport interface Area {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Selection {\n  [ITEM]: string[];\n  [CELL]: string[];\n}\n\nexport interface SelectedCell {\n  rowId: string;\n  cellId: string;\n}\n\nexport interface PointerEvents {\n  down: PointerEvent | null;\n  move: PointerEvent | null;\n  up: PointerEvent | null;\n}\n\nexport interface PluginData extends Options {\n  enabled: boolean;\n  isSelecting: boolean;\n  showOverlay: boolean;\n  pointerState: PointerState;\n  initialPosition: Point;\n  currentPosition: Point;\n  selectionAreaLocal: Area;\n  selectionAreaGlobal: Area;\n  selected: Selection;\n  lastSelected: Selection;\n  selecting: Selection;\n  automaticallySelected: Selection;\n  events: PointerEvents;\n  targetType: ITEM_TYPE | CELL_TYPE | '';\n  targetData: any;\n}\n\nfunction generateEmptyData(options: Options): PluginData {\n  return {\n    enabled: true,\n    showOverlay: true,\n    isSelecting: false,\n    pointerState: 'up',\n    selectKey: '',\n    multiKey: 'shift',\n    multipleSelection: true,\n    targetType: '',\n    targetData: null,\n    initialPosition: { x: 0, y: 0 },\n    currentPosition: { x: 0, y: 0 },\n    selectionAreaLocal: { x: 0, y: 0, width: 0, height: 0 },\n    selectionAreaGlobal: { x: 0, y: 0, width: 0, height: 0 },\n    selecting: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    selected: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    lastSelected: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    automaticallySelected: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    events: {\n      down: null,\n      move: null,\n      up: null,\n    },\n    ...options,\n  };\n}\n\nclass SelectionPlugin {\n  private data: PluginData;\n  private pointerData: TimelinePointerPluginData;\n  private vido: Vido;\n  private state: DeepState;\n  private api: Api;\n  private onDestroy = [];\n  private oldWrapper: Wrapper;\n  private html: typeof lithtml.html;\n  private wrapperClassName: string;\n  private wrapperStyleMap: StyleMap;\n  private merge: (target: object, source: object) => object;\n\n  constructor(vido: Vido, options: Options) {\n    this.vido = vido;\n    this.state = vido.state;\n    this.api = vido.api;\n    this.merge = this.state.get('config.merge');\n    this.state.update(pluginPath, generateEmptyData(options));\n    this.data = generateEmptyData(options);\n    this.wrapperClassName = this.api.getClass('chart-selection');\n    this.wrapperStyleMap = new vido.StyleMap({ display: 'none' });\n    this.html = vido.html;\n    this.wrapper = this.wrapper.bind(this);\n    this.destroy = this.destroy.bind(this);\n    this.setWrapper();\n    this.onCellCreate = this.onCellCreate.bind(this);\n    this.state.update('config.chart.grid.cell.onCreate', (onCreate) => {\n      if (!onCreate.includes(this.onCellCreate)) onCreate.push(this.onCellCreate);\n      return onCreate;\n    });\n    this.onDestroy.push(\n      this.state.subscribe('config.plugin.TimelinePointer', (timelinePointerData) => {\n        this.pointerData = timelinePointerData;\n        this.onPointerData();\n      })\n    );\n    this.updateData();\n    this.onDestroy.push(\n      this.state.subscribe(pluginPath, (value) => {\n        this.data = value;\n      })\n    );\n    this.updateCellSelectionClassName = this.updateCellSelectionClassName.bind(this);\n    this.selectedCellAction = this.selectedCellAction.bind(this);\n    this.state.update('config.actions.chart-timeline-grid-row-cell', (actions) => {\n      if (!actions.includes(this.selectedCellAction)) actions.push(this.selectedCellAction);\n      return actions;\n    });\n    // watch and update items/cells that are inside selection\n    // remove ones that no longer exist\n    // for cells we cannot do that because cells are created dynamically\n    this.onDestroy.push(\n      this.state.subscribe(\n        'config.chart.items',\n        (items: Items) => {\n          this.data.selected[ITEM] = this.data.selected[ITEM].filter((itemId) => !!items[itemId]);\n          this.data.selecting[ITEM] = this.data.selecting[ITEM].filter((itemId) => !!items[itemId]);\n        },\n        {\n          ignore: ['$data.chart.items.*.detached', 'config.chart.items.*.selected', 'config.chart.items.*.selecting'],\n        }\n      )\n    );\n  }\n\n  private setWrapper() {\n    this.state.update('config.wrappers.ChartTimelineItems', (oldWrapper: Wrapper) => {\n      if (!this.oldWrapper) this.oldWrapper = oldWrapper;\n      return this.wrapper;\n    });\n  }\n\n  public destroy() {\n    this.state.update('config.wrappers.ChartTimelineItems', this.oldWrapper);\n    this.state.update('config.actions.chart-timeline-grid-row-cell', (actions) => {\n      return actions.filter((action) => action !== this.selectedCellAction);\n    });\n    this.state.update('config.chart.grid.cell.onCreate', (onCreate) => {\n      return onCreate.filter((onCreateFn) => onCreateFn !== this.onCellCreate);\n    });\n    this.oldWrapper = null;\n    this.onDestroy.forEach((unsub) => unsub());\n  }\n\n  private updateData() {\n    this.state.update(pluginPath, { ...this.data });\n    this.vido.update(); // draw selection area overlay\n  }\n\n  private modKeyPressed(modKey: ModKey, ev: PointerEvent): boolean {\n    switch (modKey) {\n      case 'shift':\n        return ev.shiftKey;\n      case 'alt':\n        return ev.altKey;\n      case 'ctrl':\n        return ev.ctrlKey;\n    }\n  }\n\n  private canSelect(): boolean {\n    let result = this.data.enabled;\n    const downEvent = this.pointerData.events.down;\n    if (downEvent && this.data.selectKey) result = result && this.modKeyPressed(this.data.selectKey, downEvent);\n    return result;\n  }\n\n  private getSelectionAreaLocal(): Area {\n    const area = { x: 0, y: 0, width: 0, height: 0 };\n    const initial = { ...this.pointerData.initialPosition };\n    const current = { ...this.pointerData.currentPosition };\n    const width = current.x - initial.x;\n    const height = current.y - initial.y;\n    if (width >= 0) {\n      area.x = initial.x;\n      area.width = width;\n    } else {\n      area.x = current.x;\n      area.width = Math.abs(width);\n    }\n    if (height >= 0) {\n      area.y = initial.y;\n      area.height = height;\n    } else {\n      area.y = current.y;\n      area.height = Math.abs(height);\n    }\n    return area;\n  }\n\n  private translateAreaLocalToGlobal(localArea: Area): Area {\n    const leftPx: number = this.state.get('$data.chart.time.leftPx');\n    const topPx: number = this.state.get('config.scroll.vertical.posPx');\n    return { ...localArea, x: localArea.x + leftPx, y: localArea.y + topPx };\n  }\n\n  private collectLinkedItems(item: Item, current: string[] = []): string[] {\n    if (item.linkedWith && item.linkedWith.length) {\n      const items: Items = this.api.getAllItems();\n      for (const linkedItemId of item.linkedWith) {\n        const linkedItem: Item = items[linkedItemId];\n        if (!current.includes(linkedItem.id)) {\n          current.push(linkedItem.id);\n          // we don't need to go further because linkedWith property already contains all we need\n        }\n      }\n    }\n    return current;\n  }\n\n  private getSelectedItem(item: Item): { selected: string[]; automaticallySelected: string[] } {\n    let selected: string[];\n    let automaticallySelected: string[] = this.data.automaticallySelected[ITEM].slice();\n    const linked = this.collectLinkedItems(item, [item.id]);\n    if (this.data.selected[ITEM].find((selectedItemId) => selectedItemId === item.id)) {\n      // if we want to start movement or something - just return currently selected\n      selected = this.data.selected[ITEM];\n      if (automaticallySelected.find((autoId) => autoId === item.id)) {\n        // item under the pointer was automaticallySelected so we must remove it from here\n        // - it is not automaticallySelected right now\n        // we need to replace current item with one that is linked but doesn't lay down\n        // in automaticallySelected currently - we need to switch them\n        // first of all we need to find out which item is linked with current but\n        // not inside automaticallySelected\n        const actualAutoIds = automaticallySelected;\n        const replaceWith = selected.find((selId) => item.linkedWith.includes(selId) && !actualAutoIds.includes(selId));\n        automaticallySelected = automaticallySelected.filter((currentItemId) => currentItemId !== item.id);\n        automaticallySelected.push(replaceWith);\n      } else {\n        automaticallySelected = this.data.automaticallySelected[ITEM];\n      }\n    } else {\n      if (this.isMulti()) {\n        selected = Array.from(new Set([...this.data.selected[ITEM], ...linked]));\n      } else {\n        selected = linked;\n      }\n      automaticallySelected = linked.filter((currentItemId) => currentItemId !== item.id);\n    }\n    selected = selected.map((itemId) => {\n      item = this.api.getItem(itemId);\n      item.selected = true;\n      return itemId;\n    });\n    return { selected, automaticallySelected };\n  }\n\n  private isItemVerticallyInsideArea(itemData: ItemData, area: Area): boolean {\n    if (!area.width || !area.height) return false;\n    const areaBottom = area.y + area.height;\n    const itemTop = itemData.position.viewTop;\n    const itemBottom = itemTop + itemData.actualHeight;\n    return (\n      (itemTop >= area.y && itemTop <= areaBottom) ||\n      (itemBottom >= area.y && itemBottom <= areaBottom) ||\n      (itemTop >= area.y && itemBottom <= areaBottom) ||\n      (itemTop <= area.y && itemBottom >= areaBottom)\n    );\n  }\n\n  private isItemHorizontallyInsideArea(itemData: ItemData, area: Area): boolean {\n    if (!area.width || !area.height) return false;\n    const areaRight = area.x + area.width;\n    return (\n      (itemData.position.actualLeft >= area.x && itemData.position.actualLeft <= areaRight) ||\n      (itemData.position.actualRight >= area.x && itemData.position.actualRight <= areaRight) ||\n      (itemData.position.actualLeft <= area.x && itemData.position.actualRight >= areaRight) ||\n      (itemData.position.actualLeft >= area.x && itemData.position.actualRight <= areaRight)\n    );\n  }\n\n  private isMulti(): boolean {\n    const move = this.pointerData.events.move;\n    return move && this.data.multiKey && this.modKeyPressed(this.data.multiKey, move);\n  }\n\n  private getItemsUnderSelectionArea(\n    areaLocal: Area\n  ): { selectedItems: string[]; automaticallySelectedItems: string[] } {\n    const visibleItemsId: string[] = this.state.get('$data.chart.visibleItems');\n    const visibleItems: Item[] = this.api.getItems(visibleItemsId);\n    let selectedItems = [];\n    const automaticallySelectedItems = [];\n    for (let item of visibleItems) {\n      item = this.merge({}, item) as Item;\n      const itemData = this.api.getItemData(item.id);\n      if (\n        this.isItemVerticallyInsideArea(itemData, areaLocal) &&\n        this.isItemHorizontallyInsideArea(itemData, areaLocal)\n      ) {\n        if (!selectedItems.find((selectedItemId) => selectedItemId === item.id)) selectedItems.push(item.id);\n        const linked = this.collectLinkedItems(item, [item.id]);\n        for (let linkedItemId of linked) {\n          const linkedItem = this.api.getItem(linkedItemId);\n          if (!selectedItems.find((selectedItemId) => selectedItemId === linkedItem.id)) {\n            selectedItems.push(linkedItem.id);\n            automaticallySelectedItems.push(linkedItem.id);\n          }\n        }\n      }\n    }\n    selectedItems = selectedItems.map((itemId) => {\n      const item = this.api.getItem(itemId);\n      item.selected = true;\n      return itemId;\n    });\n    return { selectedItems, automaticallySelectedItems };\n  }\n\n  private isCellVerticallyInsideArea(cell: GridCell, area: Area): boolean {\n    if (!area.width || !area.height) return false;\n    const areaBottom = area.y + area.height;\n    const top = cell.top;\n    const bottom = top + cell.row.$data.actualHeight;\n    return (\n      (top >= area.y && top <= areaBottom) ||\n      (bottom >= area.y && bottom <= areaBottom) ||\n      (top >= area.y && bottom <= areaBottom) ||\n      (top <= area.y && bottom >= areaBottom)\n    );\n  }\n\n  private isCellHorizontallyInsideArea(cell: GridCell, area: Area): boolean {\n    if (!area.width || !area.height) return false;\n    const areaRight = area.x + area.width;\n    const left = cell.time.currentView.leftPx;\n    const right = cell.time.currentView.rightPx;\n    return (\n      (left >= area.x && left <= areaRight) ||\n      (right >= area.x && right <= areaRight) ||\n      (left <= area.x && right >= areaRight) ||\n      (left >= area.x && right <= areaRight)\n    );\n  }\n\n  private getCellsUnderSelectionArea(areaLocal: Area): { selectedCells: string[] } {\n    const cells: GridCells = this.state.get('$data.chart.grid.cells');\n    const selectedCells = [];\n    for (const cellId in cells) {\n      const cell = cells[cellId];\n      if (this.isCellVerticallyInsideArea(cell, areaLocal) && this.isCellHorizontallyInsideArea(cell, areaLocal)) {\n        if (!selectedCells.find((selectedCell: string) => selectedCell === cell.id)) selectedCells.push(cell.id);\n      }\n    }\n    return { selectedCells };\n  }\n\n  private updateItems(multi = undefined) {\n    if (!multi) multi = this.state.multi();\n    multi = multi.update('config.chart.items.*.selected', false);\n    multi = multi.update('config.chart.items.*.selecting', false);\n    const itemsId = Array.from(new Set([...this.data.selecting[ITEM], ...this.data.selected[ITEM]]));\n    for (const itemId of itemsId) {\n      const selecting = this.data.selecting[ITEM].includes(itemId);\n      const selected = this.data.selected[ITEM].includes(itemId);\n      multi = multi.update(`config.chart.items.${itemId}.selecting`, selecting);\n      multi = multi.update(`config.chart.items.${itemId}.selected`, selected);\n    }\n    return multi;\n  }\n\n  private updateCells(multi = undefined) {\n    if (!multi) multi = this.state.multi();\n    multi.update('$data.chart.grid.cells', (cells: GridCells) => {\n      for (const cellId in cells) {\n        const cell = cells[cellId];\n        cell.selected = this.data.selected[CELL].includes(cell.id);\n        cell.selecting = this.data.selecting[CELL].includes(cell.id);\n      }\n      return cells;\n    });\n    return multi;\n  }\n\n  private deselectItems() {\n    this.data.selected[ITEM].length = 0;\n    this.data.selecting[ITEM].length = 0;\n    this.updateItems();\n  }\n\n  private deselectCells() {\n    this.data.selecting[CELL].length = 0;\n    this.data.selected[CELL].length = 0;\n    this.updateCells();\n  }\n\n  private selectMultipleCellsAndItems() {\n    if (!this.canSelect()) return;\n    if (!this.data.multipleSelection) {\n      this.deselectItems();\n      this.deselectCells();\n      this.updateData();\n      return;\n    }\n    this.data.isSelecting = true;\n    this.data.selectionAreaLocal = this.getSelectionAreaLocal();\n    this.data.selectionAreaGlobal = this.translateAreaLocalToGlobal(this.data.selectionAreaLocal);\n\n    let selecting = {\n      [CELL]: [],\n      [ITEM]: [],\n    };\n    const isMulti = this.isMulti();\n\n    const { selectedCells } = this.getCellsUnderSelectionArea(this.data.selectionAreaLocal);\n    if (selectedCells.length === 0) {\n      selecting[CELL].length = 0;\n      if (!isMulti) this.data.selected[CELL].length = 0;\n    } else {\n      selecting[CELL] = selectedCells;\n    }\n    const { selectedItems, automaticallySelectedItems } = this.getItemsUnderSelectionArea(this.data.selectionAreaLocal);\n    this.data.automaticallySelected[ITEM] = automaticallySelectedItems;\n    if (selectedItems.length === 0) {\n      selecting[ITEM].length = 0;\n      if (!isMulti) this.data.selected[ITEM].length = 0;\n    } else {\n      selecting[ITEM] = selectedItems;\n    }\n\n    this.data.selecting = this.data.onSelecting(selecting, this.api.mergeDeep({}, this.data.selecting));\n\n    let multi = this.state.multi();\n    const allCells: GridCell[] = this.api.getGridCells();\n    const currentlySelectingCellsStr = allCells\n      .filter((cell) => cell.selecting)\n      .map((cell) => cell.id)\n      .join('|');\n    const selectingCellsStr = this.data.selecting[CELL].join('|');\n    if (currentlySelectingCellsStr !== selectingCellsStr) multi = this.updateCells(multi);\n    const allItems: Item[] = this.api.getItems();\n    const currentlySelectingItemsStr = allItems\n      .filter((item) => item.selecting)\n      .map((item) => item.id)\n      .join('|');\n    const selectingItemsStr = this.data.selecting[ITEM].join('|');\n    if (currentlySelectingItemsStr !== selectingItemsStr) multi = this.updateItems(multi);\n\n    multi.done();\n  }\n\n  private selectItemsIndividually() {\n    this.data.isSelecting = false;\n    this.data.selectionAreaLocal = this.getSelectionAreaLocal();\n    this.data.currentPosition = this.pointerData.currentPosition;\n    this.data.initialPosition = this.pointerData.initialPosition;\n    if (!this.canSelect()) return;\n    const item: Item = this.merge({}, this.pointerData.targetData) as Item;\n    let { selected, automaticallySelected } = this.getSelectedItem(item);\n    if (selected.length > 1 && !this.data.multipleSelection) {\n      selected = [item.id];\n      automaticallySelected = [];\n    }\n    this.data.selected[ITEM] = selected;\n    this.data.automaticallySelected[ITEM] = automaticallySelected;\n    let multi = this.state.multi();\n    multi = this.updateItems(multi);\n    multi.done();\n  }\n\n  private finishSelection() {\n    let selected;\n    if (this.isMulti()) {\n      selected = {\n        [CELL]: Array.from(new Set([...this.data.selected[CELL], ...this.data.selecting[CELL]])),\n        [ITEM]: Array.from(new Set([...this.data.selected[ITEM], ...this.data.selecting[ITEM]])),\n      };\n    } else {\n      selected = {\n        [CELL]: [...this.data.selecting[CELL]],\n        [ITEM]: [...this.data.selecting[ITEM]],\n      };\n    }\n    this.data.selected = this.data.onSelected(selected, this.api.mergeDeep({}, this.data.lastSelected));\n    this.data.lastSelected = this.api.mergeDeep({}, this.data.selected);\n    this.data.selecting[CELL].length = 0;\n    this.data.selecting[ITEM].length = 0;\n    let multi = this.state.multi();\n    multi = this.updateItems(multi);\n    multi = this.updateCells(multi);\n    multi.done();\n  }\n\n  private onPointerData() {\n    if (this.pointerData.isMoving && this.pointerData.targetType === CELL && this.data.rectangularSelection) {\n      this.selectMultipleCellsAndItems();\n    } else if (this.pointerData.isMoving && this.pointerData.targetType === CELL && !this.data.rectangularSelection) {\n      this.deselectItems();\n    } else if (this.pointerData.isMoving && this.pointerData.targetType === ITEM) {\n      this.selectItemsIndividually();\n    } else if (!this.pointerData.isMoving) {\n      if (this.data.isSelecting) this.finishSelection();\n      this.data.isSelecting = false;\n    }\n    if (this.pointerData.isMoving && this.pointerData.targetType !== CELL && this.pointerData.targetType !== ITEM) {\n      this.deselectItems();\n    }\n    this.data.events = this.pointerData.events;\n    this.data.pointerState = this.pointerData.pointerState;\n    this.data.targetType = this.pointerData.targetType;\n    this.data.targetData = this.pointerData.targetData;\n    this.updateData();\n  }\n\n  private wrapper(input: htmlResult, props?: any) {\n    if (!this.oldWrapper) return input;\n    const oldContent = this.oldWrapper(input, props);\n    let shouldDetach = true;\n    if (\n      this.canSelect() &&\n      this.data.isSelecting &&\n      this.data.showOverlay &&\n      this.data.multipleSelection &&\n      this.data.rectangularSelection\n    ) {\n      this.wrapperStyleMap.style.display = 'block';\n      this.wrapperStyleMap.style.left = this.data.selectionAreaLocal.x + 'px';\n      this.wrapperStyleMap.style.top = this.data.selectionAreaLocal.y + 'px';\n      this.wrapperStyleMap.style.width = this.data.selectionAreaLocal.width + 'px';\n      this.wrapperStyleMap.style.height = this.data.selectionAreaLocal.height + 'px';\n      shouldDetach = false;\n    }\n    const area = this.html`<div class=${this.wrapperClassName} style=${this.wrapperStyleMap}></div>`;\n    return this.html`${oldContent}${shouldDetach ? null : area}`;\n  }\n\n  private updateCellSelectionClassName(element: HTMLElement, cell: GridCell) {\n    if (cell.selected) {\n      element.classList.add(this.data.selectedClassName);\n      element.classList.remove(this.data.selectingClassName);\n    } else {\n      element.classList.remove(this.data.selectedClassName);\n    }\n    if (cell.selecting) {\n      element.classList.add(this.data.selectingClassName);\n      element.classList.remove(this.data.selectedClassName);\n    } else {\n      element.classList.remove(this.data.selectingClassName);\n    }\n  }\n\n  private selectedCellAction(element: HTMLElement, data: GridCell) {\n    this.updateCellSelectionClassName(element, data);\n    return {\n      update: this.updateCellSelectionClassName,\n      destroy: this.updateCellSelectionClassName,\n    };\n  }\n\n  private onCellCreate(cell: GridCell) {\n    cell.selected = !!this.data.selected[CELL].find((selectedCellId) => selectedCellId === cell.id);\n    cell.selecting = !!this.data.selecting[CELL].find((selectedCellId) => selectedCellId === cell.id);\n    return cell;\n  }\n}\n\nexport function Plugin(options: Options = {}) {\n  options = prepareOptions(options);\n  return function initialize(vidoInstance: Vido) {\n    const currentOptions = vidoInstance.state.get(pluginPath);\n    if (currentOptions) {\n      options = mergeDeep({}, options, currentOptions);\n    }\n    const selectionPlugin = new SelectionPlugin(vidoInstance, options);\n    return selectionPlugin.destroy;\n  };\n}\n"],"names":[],"mappings":"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"}