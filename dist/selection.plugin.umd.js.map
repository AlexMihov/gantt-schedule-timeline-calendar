{"version":3,"file":"selection.plugin.umd.js","sources":["../src/plugins/timeline-pointer.plugin.ts","../src/plugins/selection.plugin.ts"],"sourcesContent":["/**\n * TimelinePointer plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nimport DeepState from 'deep-state-observer';\nimport { Api } from '../api/api';\nimport { Vido } from '../gstc';\n\nexport const CELL = 'chart-timeline-grid-row-cell';\nexport type CELL_TYPE = 'chart-timeline-grid-row-cell';\nexport const ITEM = 'chart-timeline-items-row-item';\nexport type ITEM_TYPE = 'chart-timeline-items-row-item';\n\nexport interface PointerEvents {\n  down: PointerEvent | null;\n  move: PointerEvent | null;\n  up: PointerEvent | null;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport type PointerState = 'up' | 'down' | 'move';\n\nexport interface CaptureEvents {\n  up?: boolean;\n  down?: boolean;\n  move?: boolean;\n}\n\nexport interface Options {\n  enabled?: boolean;\n  captureEvents?: CaptureEvents;\n}\n\nexport interface PluginData extends Options {\n  isMoving: boolean;\n  pointerState: PointerState;\n  currentTarget: HTMLElement | null;\n  realTarget: HTMLElement | null;\n  targetType: ITEM_TYPE | CELL_TYPE | '';\n  targetData: any | null;\n  events: PointerEvents;\n  initialPosition: Point;\n  currentPosition: Point;\n}\n\nfunction generateEmptyData(options: Options): PluginData {\n  const result: PluginData = {\n    enabled: true,\n    isMoving: false,\n    pointerState: 'up',\n    currentTarget: null,\n    realTarget: null,\n    targetType: '',\n    targetData: null,\n    captureEvents: {\n      down: false,\n      up: false,\n      move: false,\n    },\n    initialPosition: { x: 0, y: 0 },\n    currentPosition: { x: 0, y: 0 },\n    events: {\n      down: null,\n      move: null,\n      up: null,\n    },\n  };\n  if (options.captureEvents) {\n    result.captureEvents = {\n      ...result.captureEvents,\n      ...options.captureEvents,\n    };\n  }\n  return result;\n}\n\nconst pluginPath = 'config.plugin.TimelinePointer';\n\nclass TimelinePointer {\n  private element: HTMLElement;\n  private vido: Vido;\n  private api: Api;\n  private state: DeepState;\n  private data: PluginData;\n  private unsub = [];\n  private classNames = {\n    cell: '',\n    item: '',\n  };\n\n  constructor(options: Options, vido: Vido) {\n    this.vido = vido;\n    this.api = vido.api;\n    this.state = vido.state;\n    this.element = this.state.get(`$data.elements.chart-timeline`);\n    this.pointerDown = this.pointerDown.bind(this);\n    this.pointerMove = this.pointerMove.bind(this);\n    this.pointerUp = this.pointerUp.bind(this);\n    this.data = generateEmptyData(options);\n    this.classNames.cell = this.api.getClass(CELL);\n    this.classNames.item = this.api.getClass(ITEM);\n    this.destroy = this.destroy.bind(this);\n    this.element.addEventListener('pointerdown', this.pointerDown /*, this.data.captureEvents.down*/);\n    document.addEventListener('pointerup', this.pointerUp /*, this.data.captureEvents.up*/);\n    document.addEventListener('pointermove', this.pointerMove /*, this.data.captureEvents.move*/);\n    this.unsub.push(this.state.subscribe(pluginPath, (value) => (this.data = value)));\n  }\n\n  public destroy() {\n    this.element.removeEventListener('pointerdown', this.pointerDown);\n    document.removeEventListener('pointerup', this.pointerUp);\n    document.removeEventListener('pointermove', this.pointerMove);\n  }\n\n  private updateData() {\n    this.state.update(pluginPath, () => ({ ...this.data }));\n  }\n\n  private getRealTarget(ev: PointerEvent) {\n    let realTarget: HTMLElement = (ev.target as HTMLElement).closest('.' + this.classNames.item) as HTMLElement;\n    if (realTarget) {\n      return realTarget;\n    }\n    realTarget = (ev.target as HTMLElement).closest('.' + this.classNames.cell) as HTMLElement;\n    if (realTarget) {\n      return realTarget;\n    }\n    return null;\n  }\n\n  private getRealPosition(ev: PointerEvent): Point {\n    const pos = { x: 0, y: 0 };\n    if (this.element) {\n      const bounding = this.element.getBoundingClientRect();\n      pos.x = ev.x - bounding.x;\n      pos.y = ev.y - bounding.y;\n    }\n    return pos;\n  }\n\n  private pointerDown(ev: PointerEvent) {\n    if (!this.data.enabled) return;\n    this.data.pointerState = 'down';\n    this.data.currentTarget = ev.target as HTMLElement;\n    this.data.realTarget = this.getRealTarget(ev);\n    if (this.data.realTarget) {\n      if (this.data.realTarget.classList.contains(this.classNames.item)) {\n        this.data.targetType = ITEM;\n        // @ts-ignore\n        this.data.targetData = this.data.realTarget.vido.item;\n      } else if (this.data.realTarget.classList.contains(this.classNames.cell)) {\n        this.data.targetType = CELL;\n        // @ts-ignore\n        this.data.targetData = this.data.realTarget.vido;\n      } else {\n        this.data.targetType = '';\n      }\n    } else {\n      this.data.targetType = '';\n      this.data.targetData = null;\n    }\n    this.data.isMoving = !!this.data.realTarget;\n    this.data.events.down = ev;\n    this.data.events.move = ev;\n    const realPosition = this.getRealPosition(ev);\n    this.data.initialPosition = realPosition;\n    this.data.currentPosition = realPosition;\n    this.updateData();\n  }\n\n  private pointerUp(ev: PointerEvent) {\n    if (!this.data.enabled) return;\n    this.data.pointerState = 'up';\n    this.data.isMoving = false;\n    this.data.events.up = ev;\n    this.data.currentPosition = this.getRealPosition(ev);\n    this.updateData();\n  }\n\n  private pointerMove(ev: PointerEvent) {\n    if (!this.data.enabled || !this.data.isMoving) return;\n    this.data.pointerState = 'move';\n    this.data.events.move = ev;\n    this.data.currentPosition = this.getRealPosition(ev);\n    this.updateData();\n  }\n}\n\nexport function Plugin(options: Options) {\n  return function initialize(vidoInstance: Vido) {\n    const defaultData = generateEmptyData(options);\n    // for other plugins that are initialized before elements are saved\n    vidoInstance.state.update(pluginPath, defaultData);\n\n    let timelinePointerDestroy;\n    const unsub = vidoInstance.state.subscribe('$data.elements.chart-timeline', (timelineElement: HTMLElement) => {\n      if (timelineElement) {\n        if (timelinePointerDestroy) timelinePointerDestroy();\n        const timelinePointer = new TimelinePointer(options, vidoInstance);\n        timelinePointerDestroy = timelinePointer.destroy;\n      }\n    });\n    return function destroy() {\n      unsub();\n      if (timelinePointerDestroy) timelinePointerDestroy();\n    };\n  };\n}\n","/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nimport {\n  PluginData as TimelinePointerPluginData,\n  ITEM,\n  ITEM_TYPE,\n  CELL,\n  CELL_TYPE,\n  Point,\n  PointerState,\n} from './timeline-pointer.plugin';\n\nimport { Item, Cell, Items, Vido, htmlResult, Wrapper, ItemData } from '../gstc';\nimport DeepState from 'deep-state-observer';\nimport { Api } from '../api/api';\nimport { StyleMap, lithtml } from '@neuronet.io/vido/vido';\n\nexport type ModKey = 'shift' | 'ctrl' | 'alt' | '';\n\nexport interface Options {\n  enabled?: boolean;\n  cells?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  showOverlay?: boolean;\n  rectangularSelection?: boolean;\n  multipleSelection?: boolean;\n  selectKey?: ModKey;\n  multiKey?: ModKey;\n  canSelect?: (type, state, all) => any[];\n  canDeselect?: (type, state, all) => any[];\n}\n\nexport interface SelectionItems {\n  [key: string]: Item[];\n}\n\nexport interface SelectState {\n  selecting?: SelectionItems;\n  selected?: SelectionItems;\n}\n\nfunction prepareOptions(options: Options) {\n  const defaultOptions: Options = {\n    enabled: true,\n    cells: true,\n    items: true,\n    rows: false,\n    showOverlay: true,\n    rectangularSelection: true,\n    multipleSelection: true,\n    canSelect(type, currently, all) {\n      return currently;\n    },\n    canDeselect(type, currently, all) {\n      return [];\n    },\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  return options;\n}\n\nconst pluginPath = 'config.plugin.Selection';\n\nexport interface Area {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface Selection {\n  [ITEM]: Item[];\n  [CELL]: Cell[];\n}\n\nexport interface PointerEvents {\n  down: PointerEvent | null;\n  move: PointerEvent | null;\n  up: PointerEvent | null;\n}\n\nexport interface PluginData extends Options {\n  enabled: boolean;\n  isSelecting: boolean;\n  showOverlay: boolean;\n  pointerState: PointerState;\n  initialPosition: Point;\n  currentPosition: Point;\n  selectionAreaLocal: Area;\n  selectionAreaGlobal: Area;\n  selected: Selection;\n  selecting: Selection;\n  automaticallySelected: Selection;\n  events: PointerEvents;\n  targetType: ITEM_TYPE | CELL_TYPE | '';\n  targetData: any;\n}\n\nfunction generateEmptyData(options: Options): PluginData {\n  return {\n    enabled: true,\n    showOverlay: true,\n    isSelecting: false,\n    pointerState: 'up',\n    selectKey: '',\n    multiKey: 'shift',\n    multipleSelection: true,\n    targetType: '',\n    targetData: null,\n    initialPosition: { x: 0, y: 0 },\n    currentPosition: { x: 0, y: 0 },\n    selectionAreaLocal: { x: 0, y: 0, width: 0, height: 0 },\n    selectionAreaGlobal: { x: 0, y: 0, width: 0, height: 0 },\n    selecting: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    selected: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    automaticallySelected: {\n      [ITEM]: [],\n      [CELL]: [],\n    },\n    events: {\n      down: null,\n      move: null,\n      up: null,\n    },\n    ...options,\n  };\n}\n\nclass SelectionPlugin {\n  private data: PluginData;\n  private poitnerData: TimelinePointerPluginData;\n  private vido: Vido;\n  private state: DeepState;\n  private api: Api;\n  private onDestroy = [];\n  private oldWrapper: Wrapper;\n  private html: typeof lithtml.html;\n  private wrapperClassName: string;\n  private wrapperStyleMap: StyleMap;\n  private merge: (target: object, source: object) => object;\n\n  constructor(vido: Vido, options: Options) {\n    this.vido = vido;\n    this.state = vido.state;\n    this.api = vido.api;\n    this.merge = this.state.get('config.merge');\n    this.state.update(pluginPath, generateEmptyData(options));\n    this.data = generateEmptyData(options);\n    this.wrapperClassName = this.api.getClass('chart-selection');\n    this.wrapperStyleMap = new vido.StyleMap({ display: 'none' });\n    this.html = vido.html;\n    this.wrapper = this.wrapper.bind(this);\n    this.destroy = this.destroy.bind(this);\n    this.setWrapper();\n    this.onDestroy.push(\n      this.state.subscribe('config.plugin.TimelinePointer', (timelinePointerData) => {\n        this.poitnerData = timelinePointerData;\n        this.onPointerData();\n      })\n    );\n    this.updateData();\n    this.onDestroy.push(\n      this.state.subscribe(pluginPath, (value) => {\n        this.data = value;\n      })\n    );\n    // watch and update items that are inside selection\n    this.onDestroy.push(\n      this.state.subscribe(\n        'config.chart.items',\n        (items: Items) => {\n          this.data.selected[ITEM] = this.data.selected[ITEM].filter((item) => !!items[item.id]).map(\n            (item) => this.merge({}, items[item.id]) as Item\n          );\n        },\n        { ignore: ['config.chart.items.*.$data.detached', 'config.chart.items.*.selected'] }\n      )\n    );\n    // TODO: watch and update cells that are inside selection\n  }\n\n  private setWrapper() {\n    this.state.update('config.wrappers.ChartTimelineItems', (oldWrapper: Wrapper) => {\n      if (!this.oldWrapper) this.oldWrapper = oldWrapper;\n      return this.wrapper;\n    });\n  }\n\n  public destroy() {\n    this.state.update('config.wrappers.ChartTimelineItems', this.oldWrapper);\n    this.oldWrapper = null;\n    this.onDestroy.forEach((unsub) => unsub());\n  }\n\n  private updateData() {\n    this.state.update(pluginPath, { ...this.data });\n    this.vido.update(); // draw selection area overlay\n  }\n\n  private modKeyPressed(modKey: ModKey, ev: PointerEvent): boolean {\n    switch (modKey) {\n      case 'shift':\n        return ev.shiftKey;\n      case 'alt':\n        return ev.altKey;\n      case 'ctrl':\n        return ev.ctrlKey;\n    }\n  }\n\n  private canSelect(): boolean {\n    let result = this.data.enabled;\n    const down = this.poitnerData.events.down;\n    if (down && this.data.selectKey) result = result && this.modKeyPressed(this.data.selectKey, down);\n    return result;\n  }\n\n  private getSelectionAreaLocal(): Area {\n    const area = { x: 0, y: 0, width: 0, height: 0 };\n    const initial = { ...this.poitnerData.initialPosition };\n    const current = { ...this.poitnerData.currentPosition };\n    const width = current.x - initial.x;\n    const height = current.y - initial.y;\n    if (width >= 0) {\n      area.x = initial.x;\n      area.width = width;\n    } else {\n      area.x = current.x;\n      area.width = Math.abs(width);\n    }\n    if (height >= 0) {\n      area.y = initial.y;\n      area.height = height;\n    } else {\n      area.y = current.y;\n      area.height = Math.abs(height);\n    }\n    return area;\n  }\n\n  private translateAreaLocalToGlobal(localArea: Area): Area {\n    const leftPx: number = this.state.get('$data.chart.time.leftPx');\n    const topPx: number = this.state.get('config.scroll.vertical.posPx');\n    return { ...localArea, x: localArea.x + leftPx, y: localArea.y + topPx };\n  }\n\n  private collectLinkedItems(item: Item, current: Item[] = []): Item[] {\n    if (item.linkedWith && item.linkedWith.length) {\n      const items: Items = this.state.get('config.chart.items');\n      for (const linkedItemId of item.linkedWith) {\n        const linkedItem: Item = items[linkedItemId];\n        if (!current.includes(linkedItem)) {\n          current.push(linkedItem);\n          // we don't need to go further because linkedWith property already contains all we need\n        }\n      }\n    }\n    return current;\n  }\n\n  private getSelected(item: Item): { selected: Item[]; automaticallySelected: Item[] } {\n    let selected: Item[];\n    let automaticallySelected: Item[] = this.data.automaticallySelected[ITEM].slice();\n    const move = this.poitnerData.events.move;\n    const multi = this.data.multiKey && this.modKeyPressed(this.data.multiKey, move);\n    const linked = this.collectLinkedItems(item, [item]);\n    if (this.data.selected[ITEM].find((selectedItem) => selectedItem.id === item.id)) {\n      // if we want to start movement or something - just return currently selected\n      selected = this.data.selected[ITEM];\n      if (automaticallySelected.find((auto) => auto.id === item.id)) {\n        // item under the pointer was automaticallySelected so we must remove it from here\n        // - it is not automaticallySelected right now\n        // we need to replace current item with one that is linked but doesn't lay down\n        // in automaticallySelected currently - we need to switch them\n        // first of all we need to find out which item is linked with current but\n        // not inside automaticallySelected\n        const actualAutoIds = automaticallySelected.map((sel) => sel.id);\n        const replaceWith = selected.find((sel) => item.linkedWith.includes(sel.id) && !actualAutoIds.includes(sel.id));\n        automaticallySelected = automaticallySelected.filter((currentItem) => currentItem.id !== item.id);\n        automaticallySelected.push(replaceWith);\n      } else {\n        automaticallySelected = this.data.automaticallySelected[ITEM];\n      }\n    } else {\n      if (multi) {\n        selected = [...new Set([...this.data.selected[ITEM], ...linked]).values()];\n      } else {\n        selected = linked;\n      }\n      automaticallySelected = linked.filter((currentItem) => currentItem.id !== item.id);\n    }\n    selected = selected.map((item) => {\n      item.selected = true;\n      return item;\n    });\n    return { selected, automaticallySelected };\n  }\n\n  private isItemVerticallyInsideArea(itemData: ItemData, area: Area): boolean {\n    if (!area.width || !area.height) return false;\n    const areaBottom = area.y + area.height;\n    const itemTop = itemData.position.viewTop;\n    const itemBottom = itemTop + itemData.actualHeight;\n    return (\n      (itemTop >= area.y && itemTop <= areaBottom) ||\n      (itemBottom >= area.y && itemBottom <= areaBottom) ||\n      (itemTop >= area.y && itemBottom <= areaBottom) ||\n      (itemTop <= area.y && itemBottom >= areaBottom)\n    );\n  }\n\n  private isItemHorizontallyInsideArea(itemData: ItemData, area: Area): boolean {\n    if (!area.width || !area.height) return false;\n    const areaRight = area.x + area.width;\n    return (\n      (itemData.position.actualLeft >= area.x && itemData.position.actualLeft <= areaRight) ||\n      (itemData.position.actualRight >= area.x && itemData.position.actualRight <= areaRight) ||\n      (itemData.position.actualLeft <= area.x && itemData.position.actualRight >= areaRight) ||\n      (itemData.position.actualLeft >= area.x && itemData.position.actualRight <= areaRight)\n    );\n  }\n\n  private getItemsUnderSelectionArea(areaLocal: Area): { selected: Item[]; automaticallySelected: Item[] } {\n    const visibleItems: Item[] = this.state.get('$data.chart.visibleItems');\n    const move = this.poitnerData.events.move;\n    const multi = move && this.data.multiKey && this.modKeyPressed(this.data.multiKey, move);\n    let selected = multi ? [...this.data.selected[ITEM]] : [];\n    const automaticallySelected = multi ? [...this.data.automaticallySelected[ITEM]] : [];\n    for (let item of visibleItems) {\n      item = this.merge({}, item) as Item;\n      const itemData = item.$data;\n      if (\n        this.isItemVerticallyInsideArea(itemData, areaLocal) &&\n        this.isItemHorizontallyInsideArea(itemData, areaLocal)\n      ) {\n        if (!selected.find((selectedItem) => selectedItem.id === item.id)) selected.push(item);\n        const linked = this.collectLinkedItems(item, [item]);\n        for (let linkedItem of linked) {\n          linkedItem = this.merge({}, linkedItem) as Item;\n          if (!selected.find((selectedItem) => selectedItem.id === linkedItem.id)) {\n            selected.push(linkedItem);\n            automaticallySelected.push(linkedItem);\n          }\n        }\n      }\n    }\n    selected = selected.map((item) => {\n      item.selected = true;\n      return item;\n    });\n    return { selected, automaticallySelected };\n  }\n\n  private unmarkSelected() {\n    const items: Items = this.state.get('config.chart.items');\n    let multi = this.state.multi();\n    for (const id in items) {\n      const item = items[id];\n      if (item.selected) {\n        multi = multi.update(`config.chart.items.${id}.selected`, false);\n      }\n    }\n    multi.done();\n  }\n\n  private deselectItems() {\n    this.unmarkSelected();\n    this.data.selected[ITEM] = [];\n    this.updateData();\n  }\n\n  private selectMultipleCellsAndItems() {\n    if (!this.canSelect()) return;\n    if (!this.data.multipleSelection) {\n      this.deselectItems();\n      return;\n    }\n    this.data.isSelecting = true;\n    this.data.selectionAreaLocal = this.getSelectionAreaLocal();\n    this.data.selectionAreaGlobal = this.translateAreaLocalToGlobal(this.data.selectionAreaLocal);\n    const { selected, automaticallySelected } = this.getItemsUnderSelectionArea(this.data.selectionAreaLocal);\n    this.data.automaticallySelected[ITEM] = automaticallySelected;\n    if (selected.length === 0) {\n      this.unmarkSelected();\n      this.data.selected[ITEM].length = 0;\n      return;\n    }\n    this.data.selected[ITEM] = selected;\n    this.unmarkSelected();\n    let multi = this.state.multi();\n    for (const item of selected) {\n      multi = multi.update(`config.chart.items.${item.id}.selected`, true);\n    }\n    multi.done();\n    // TODO save selected cells\n  }\n\n  private selectItemsIndividually() {\n    this.data.isSelecting = false;\n    this.data.selectionAreaLocal = this.getSelectionAreaLocal();\n    this.data.currentPosition = this.poitnerData.currentPosition;\n    this.data.initialPosition = this.poitnerData.initialPosition;\n    if (!this.canSelect()) return;\n    const item: Item = this.merge({}, this.poitnerData.targetData) as Item;\n    let { selected, automaticallySelected } = this.getSelected(item);\n    if (selected.length > 1 && !this.data.multipleSelection) {\n      selected = [item];\n      automaticallySelected = [];\n    }\n    this.data.selected[ITEM] = selected;\n    this.data.automaticallySelected[ITEM] = automaticallySelected;\n    this.unmarkSelected();\n    let multi = this.state.multi();\n    for (const item of this.data.selected[ITEM]) {\n      multi = multi.update(`config.chart.items.${item.id}.selected`, true);\n    }\n    multi.done();\n  }\n\n  private onPointerData() {\n    if (this.poitnerData.isMoving && this.poitnerData.targetType === CELL && this.data.rectangularSelection) {\n      this.selectMultipleCellsAndItems();\n    } else if (this.poitnerData.isMoving && this.poitnerData.targetType === CELL && !this.data.rectangularSelection) {\n      this.deselectItems();\n    } else if (this.poitnerData.isMoving && this.poitnerData.targetType === ITEM) {\n      this.selectItemsIndividually();\n    } else if (!this.poitnerData.isMoving) {\n      this.data.isSelecting = false;\n    }\n    if (this.poitnerData.isMoving && this.poitnerData.targetType !== CELL && this.poitnerData.targetType !== ITEM) {\n      this.deselectItems();\n    }\n    this.data.events = this.poitnerData.events;\n    this.data.pointerState = this.poitnerData.pointerState;\n    this.data.targetType = this.poitnerData.targetType;\n    this.data.targetData = this.poitnerData.targetData;\n    this.updateData();\n  }\n\n  private wrapper(input: htmlResult, props?: any) {\n    if (!this.oldWrapper) return input;\n    const oldContent = this.oldWrapper(input, props);\n    let shouldDetach = true;\n    if (\n      this.canSelect() &&\n      this.data.isSelecting &&\n      this.data.showOverlay &&\n      this.data.multipleSelection &&\n      this.data.rectangularSelection\n    ) {\n      this.wrapperStyleMap.style.display = 'block';\n      this.wrapperStyleMap.style.left = this.data.selectionAreaLocal.x + 'px';\n      this.wrapperStyleMap.style.top = this.data.selectionAreaLocal.y + 'px';\n      this.wrapperStyleMap.style.width = this.data.selectionAreaLocal.width + 'px';\n      this.wrapperStyleMap.style.height = this.data.selectionAreaLocal.height + 'px';\n      shouldDetach = false;\n    }\n    const area = this.html`<div class=${this.wrapperClassName} style=${this.wrapperStyleMap}></div>`;\n    return this.html`${oldContent}${shouldDetach ? null : area}`;\n  }\n}\n\nexport function Plugin(options: Options = {}) {\n  options = prepareOptions(options);\n  return function initialize(vidoInstance: Vido) {\n    const selectionPlugin = new SelectionPlugin(vidoInstance, options);\n    return selectionPlugin.destroy;\n  };\n}\n"],"names":[],"mappings":"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"}