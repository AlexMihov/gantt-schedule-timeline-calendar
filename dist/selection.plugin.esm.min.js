const t="chart-timeline-grid-row-cell",e="chart-timeline-items-row-item";const i="config.plugin.Selection";function a(i){return Object.assign({enabled:!0,showOverlay:!0,isSelecting:!1,pointerState:"up",targetType:"",initialPosition:{x:0,y:0},currentPosition:{x:0,y:0},selectionAreaLocal:{x:0,y:0,width:0,height:0},selectionAreaGlobal:{x:0,y:0,width:0,height:0},selecting:{[e]:[],[t]:[]},selected:{[e]:[],[t]:[]},events:{down:null,move:null,up:null}},i)}class s{constructor(t,e){this.unsub=[],this.vido=t,this.state=t.state,this.api=t.api,this.data=a(e),this.wrapperClassName=this.api.getClass("chart-selection"),this.wrapperStyleMap=new t.StyleMap({display:"none"}),this.html=t.html,this.wrapper=this.wrapper.bind(this),this.unsub.push(this.state.subscribe("config.plugin.TimelinePointer",t=>{this.poitnerData=t,this.onPointerData()})),this.updateData(),this.unsub.push(this.state.subscribe(i,t=>{this.data=t}))}destroy(){this.unsub.forEach(t=>t())}updateData(){this.state.update(i,Object.assign({},this.data)),this.vido.update()}getSelectionAreaLocal(){const t={x:0,y:0,width:0,height:0},e=Object.assign({},this.poitnerData.initialPosition),i=Object.assign({},this.poitnerData.currentPosition),a=i.x-e.x,s=i.y-e.y;return a>=0?(t.x=e.x,t.width=a):(t.x=i.x,t.width=Math.abs(a)),s>=0?(t.y=e.y,t.height=s):(t.y=i.y,t.height=Math.abs(s)),t}translateAreaLocalToGlobal(t){const e=this.state.get("$data.chart.time.leftPx"),i=this.state.get("config.scroll.vertical.posPx");return Object.assign(Object.assign({},t),{x:t.x+e,y:t.y+i})}collectLinkedItems(t,e=[]){if(t.linkedWith&&t.linkedWith.length){const i=this.state.get("config.chart.items");for(const a of t.linkedWith){const t=i[a];e.includes(t)||(e.push(t),this.collectLinkedItems(t,e))}}return e}getSelected(t){let i;return i=this.data.selected[e].find(e=>e.id===t.id)?this.data.selected[e]:this.poitnerData.events.down.ctrlKey?[...new Set([...this.data.selected[e],...this.collectLinkedItems(t,[t])]).values()]:this.collectLinkedItems(t,[t]),i}isItemVerticallyInsideArea(t,e){if(!e.width||!e.height)return!1;const i=e.y+e.height,a=t.position.viewTop,s=a+t.actualHeight;return a>=e.y&&a<=i||s>=e.y&&s<=i||a>=e.y&&s<=i||a<=e.y&&s>=i}isItemHorizontallyInsideArea(t,e){if(!e.width||!e.height)return!1;const i=e.x+e.width;return t.position.actualLeft>=e.x&&t.position.actualLeft<=i||t.position.actualRight>=e.x&&t.position.actualRight<=i||t.position.actualLeft<=e.x&&t.position.actualRight>=i||t.position.actualLeft>=e.x&&t.position.actualRight<=i}getItemsUnderSelectionArea(t){const i=this.state.get("$data.chart.visibleItems");let a=this.poitnerData.events.down.ctrlKey?[...this.data.selected[e]]:[];for(const e of i){const i=e.$data;this.isItemVerticallyInsideArea(i,t)&&this.isItemHorizontallyInsideArea(i,t)&&(a.find(t=>t.id===e.id)||a.push(e))}return a}selectCellsAndItems(){this.data.isSelecting=!0,this.data.selectionAreaLocal=this.getSelectionAreaLocal(),this.data.selectionAreaGlobal=this.translateAreaLocalToGlobal(this.data.selectionAreaLocal);const t=this.getItemsUnderSelectionArea(this.data.selectionAreaLocal);if(0===t.length)return this.state.update("config.chart.items.*.selected",!1),void(this.data.selected[e].length=0);this.data.selected[e]=t;let i=this.state.multi();i=i.update("config.chart.items.*.selected",!1);for(const e of t)i=i.update(`config.chart.items.${e.id}.selected`,!0);i.done()}selectItems(){this.data.isSelecting=!1,this.data.selectionAreaLocal=this.getSelectionAreaLocal(),this.data.currentPosition=this.poitnerData.currentPosition,this.data.initialPosition=this.poitnerData.initialPosition;const t=this.poitnerData.targetData;this.data.selected[e]=this.getSelected(t);let i=this.state.multi();i=i.update("config.chart.items.*.selected",!1);for(const t of this.data.selected[e])i=i.update(`config.chart.items.${t.id}.selected`,!0);i.done()}onPointerData(){this.poitnerData.isMoving&&this.poitnerData.targetType===t?this.selectCellsAndItems():this.poitnerData.isMoving&&this.poitnerData.targetType===e?this.selectItems():this.poitnerData.isMoving||(this.data.isSelecting=!1),this.data.events=this.poitnerData.events,this.data.pointerState=this.poitnerData.pointerState,this.data.targetType=this.poitnerData.targetType,this.updateData()}wrapper(t,e){const i=this.oldWrapper(t,e);let a=!0;this.data.enabled&&this.data.isSelecting&&this.data.showOverlay&&(this.wrapperStyleMap.style.display="block",this.wrapperStyleMap.style.left=this.data.selectionAreaLocal.x+"px",this.wrapperStyleMap.style.top=this.data.selectionAreaLocal.y+"px",this.wrapperStyleMap.style.width=this.data.selectionAreaLocal.width+"px",this.wrapperStyleMap.style.height=this.data.selectionAreaLocal.height+"px",a=!1);const s=new this.vido.Detach(()=>a);return this.html` ${i}<div class=${this.wrapperClassName} detach=${s} style=${this.wrapperStyleMap}></div>`}getWrapper(t){return this.oldWrapper||(this.oldWrapper=t),this.wrapper}}function n(t={}){return t=function(t){const e={enabled:!0,cells:!0,items:!0,rows:!1,showOverlay:!0,canSelect:(t,e,i)=>e,canDeselect:(t,e,i)=>[]};return t=Object.assign(Object.assign({},e),t)}(t),function(e){const n=new s(e,t);return e.state.update(i,a(t)),e.state.update("config.wrappers.ChartTimelineItems",t=>n.getWrapper(t)),function(){n.destroy()}}}export{n as Plugin};
