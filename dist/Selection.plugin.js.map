{"version":3,"file":"Selection.plugin.js","sources":["../src/plugins/Selection/helpers.ts","../src/plugins/Selection/SelectAction.ts","../src/plugins/Selection/Wrapper.ts","../src/plugins/Selection/Selection.plugin.ts"],"sourcesContent":["/**\n * Selection plugin helpers\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface RectStyle {\n  [key: string]: any;\n}\n\nexport interface Options {\n  enabled?: boolean;\n  grid?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  horizontal?: boolean;\n  vertical?: boolean;\n  selecting?: (data, type: string) => void;\n  deselecting?: (data, type: string) => void;\n  selected?: (data, type) => void;\n  deselected?: (data, type) => void;\n  canSelect?: (type, state, all) => any[];\n  canDeselect?: (type, state, all) => any[];\n}\n\nexport interface Items {\n  [key: string]: string[];\n}\n\ninterface SelectingData {\n  fromX?: number;\n  fromY?: number;\n  toX?: number;\n  toY?: number;\n  startX?: number;\n  startY?: number;\n  startCell?: any;\n  selecting?: boolean;\n  selected?: Items;\n}\n\nexport interface SelectState {\n  selecting?: Items;\n  selected?: Items;\n}\n\nexport function prepareOptions(options) {\n  const defaultOptions: Options = {\n    enabled: true,\n    grid: false,\n    items: true,\n    rows: false,\n    horizontal: true,\n    vertical: true,\n    selecting() {},\n    deselecting() {},\n    selected() {},\n    deselected() {},\n    canSelect(type, currently, all) {\n      return currently;\n    },\n    canDeselect(type, currently, all) {\n      return [];\n    }\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  return options;\n}\n\nexport const selectionTypesIdGetters = {\n  'chart-timeline-grid-row': props => props.row.id,\n  'chart-timeline-grid-row-cell': props => props.id,\n  'chart-timeline-items-row': props => props.row.id,\n  'chart-timeline-items-row-item': props => props.item.id\n};\n","/**\n * Select Action\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nlet vido, api, state;\n\nconst classNames = {\n  cell: '',\n  item: '',\n  row: ''\n};\n\nclass SelectAction {\n  private element: HTMLElement;\n  private currentTarget: HTMLElement;\n  private realTarget: HTMLElement;\n  private targetType: string = '';\n\n  constructor(element) {\n    this.element = element;\n    this.pointerDown = this.pointerDown.bind(this);\n    this.pointerMove = this.pointerMove.bind(this);\n    this.pointerUp = this.pointerUp.bind(this);\n    element.addEventListener('pointerdown', this.pointerDown);\n  }\n\n  private pointerDown(ev: PointerEvent) {\n    this.currentTarget = ev.target as HTMLElement;\n  }\n\n  private pointerUp(ev: PointerEvent) {}\n\n  private pointerMove(ev: PointerEvent) {}\n\n  destroy() {}\n}\n\nexport function prepareSelectAction(vidoInstance) {\n  vido = vidoInstance;\n  api = vido.api;\n  state = vido.state;\n}\n","/**\n * Selection ChartTimeline Wrapper\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nlet wrapped, vido, api, state, html;\nlet SelectionData;\nlet className, style;\n\n// this function will be called at each rerender\nfunction ChartTimelineWrapper(input, props) {\n  const oldContent = wrapped(input, props);\n\n  const SelectionRectangle = html`\n    <div class=${className} style=${style}></div>\n  `;\n  return html`\n    ${oldContent}${SelectionRectangle}\n  `;\n}\n\nexport function Wrap(oldWrapper, vidoInstance) {\n  wrapped = oldWrapper;\n  vido = vidoInstance;\n  api = vido.api;\n  state = vido.state;\n  html = vido.html;\n  className = api.getClass('chart-selection');\n  style = new vido.StyleMap({ display: 'none' });\n\n  state.subscribe('config.plugin.Selection', Selection => {\n    SelectionData = Selection;\n    vido.update(); // rerender to update rectangle\n  });\n\n  return ChartTimelineWrapper;\n}\n","/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   AGPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nimport { Options, prepareOptions } from './helpers';\nimport { prepareSelectAction } from './SelectAction';\nimport { Wrap } from './Wrapper';\n\nexport default function Selection(options: Options = {}) {\n  let vido, api, state;\n  options = prepareOptions(options);\n\n  return function initialize(vidoInstance) {\n    vido = vidoInstance;\n    api = vido.api;\n    state = vido.state;\n    state.update('config.actions.chart-timeline', timelineActions => {\n      timelineActions.push(prepareSelectAction(vido));\n      return timelineActions;\n    });\n    state.update('config.wrappers.ChartTimelineItems', oldWrapper => {\n      return Wrap(oldWrapper, vido);\n    });\n  };\n}\n"],"names":["vido","api","state"],"mappings":";;;;;;EAAA;;;;;;;;;WAkDgB,cAAc,CAAC,OAAO;MACpC,MAAM,cAAc,GAAY;UAC9B,OAAO,EAAE,IAAI;UACb,IAAI,EAAE,KAAK;UACX,KAAK,EAAE,IAAI;UACX,IAAI,EAAE,KAAK;UACX,UAAU,EAAE,IAAI;UAChB,QAAQ,EAAE,IAAI;UACd,SAAS,MAAK;UACd,WAAW,MAAK;UAChB,QAAQ,MAAK;UACb,UAAU,MAAK;UACf,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG;cAC5B,OAAO,SAAS,CAAC;WAClB;UACD,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG;cAC9B,OAAO,EAAE,CAAC;WACX;OACF,CAAC;MACF,OAAO,GAAG,gCAAK,cAAc,GAAK,OAAO,CAAa,CAAC;MACvD,OAAO,OAAO,CAAC;EACjB;;ECvEA;;;;;;;;;EAUA,IAAI,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;WAiCL,mBAAmB,CAAC,YAAY;MAC9C,IAAI,GAAG,YAAY,CAAC;MACpB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;MACf,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EACrB;;EC/CA;;;;;;;;;EAUA,IAAI,OAAO,EAAEA,MAAI,EAAEC,KAAG,EAAEC,OAAK,EAAE,IAAI,CAAC;EAEpC,IAAI,SAAS,EAAE,KAAK,CAAC;EAErB;EACA,SAAS,oBAAoB,CAAC,KAAK,EAAE,KAAK;MACxC,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MAEzC,MAAM,kBAAkB,GAAG,IAAI,CAAA;iBAChB,SAAS,UAAU,KAAK;GACtC,CAAC;MACF,OAAO,IAAI,CAAA;MACP,UAAU,GAAG,kBAAkB;GAClC,CAAC;EACJ,CAAC;WAEe,IAAI,CAAC,UAAU,EAAE,YAAY;MAC3C,OAAO,GAAG,UAAU,CAAC;MACrBF,MAAI,GAAG,YAAY,CAAC;MACpBC,KAAG,GAAGD,MAAI,CAAC,GAAG,CAAC;MACfE,OAAK,GAAGF,MAAI,CAAC,KAAK,CAAC;MACnB,IAAI,GAAGA,MAAI,CAAC,IAAI,CAAC;MACjB,SAAS,GAAGC,KAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;MAC5C,KAAK,GAAG,IAAID,MAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;MAE/CE,OAAK,CAAC,SAAS,CAAC,yBAAyB,EAAE,SAAS;UAElDF,MAAI,CAAC,MAAM,EAAE,CAAC;OACf,CAAC,CAAC;MAEH,OAAO,oBAAoB,CAAC;EAC9B;;ECzCA;;;;;;;;;WAcwB,SAAS,CAAC,UAAmB,EAAE;MACrD,IAAI,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;MACrB,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;MAElC,OAAO,SAAS,UAAU,CAAC,YAAY;UACrC,IAAI,GAAG,YAAY,CAAC;UACpB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;UACf,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;UACnB,KAAK,CAAC,MAAM,CAAC,+BAA+B,EAAE,eAAe;cAC3D,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;cAChD,OAAO,eAAe,CAAC;WACxB,CAAC,CAAC;UACH,KAAK,CAAC,MAAM,CAAC,oCAAoC,EAAE,UAAU;cAC3D,OAAO,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;WAC/B,CAAC,CAAC;OACJ,CAAC;EACJ;;;;;;;;"}