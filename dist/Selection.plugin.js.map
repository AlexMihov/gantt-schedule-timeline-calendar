{"version":3,"file":"Selection.plugin.js","sources":["../src/plugins/Selection.plugin.ts"],"sourcesContent":["/**\n * Selection plugin\n *\n * @copyright Rafal Pospiech <https://neuronet.io>\n * @author    Rafal Pospiech <neuronet.io@gmail.com>\n * @package   gantt-schedule-timeline-calendar\n * @license   GPL-3.0 (https://github.com/neuronetio/gantt-schedule-timeline-calendar/blob/master/LICENSE)\n * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar\n */\n\nexport interface RectStyle {\n  [key: string]: any;\n}\n\nexport interface Options {\n  grid?: boolean;\n  items?: boolean;\n  rows?: boolean;\n  horizontal?: boolean;\n  vertical?: boolean;\n  rectStyle?: RectStyle;\n  selecting?: (data, type: string) => void;\n  deselecting?: (data, type: string) => void;\n  selected?: (data, type) => void;\n  deselected?: (data, type) => void;\n  canSelect?: (type, state, all) => any[];\n  canDeselect?: (type, state, all) => any[];\n  getApi?: (api: any) => void;\n}\n\nexport interface Items {\n  [key: string]: string[];\n}\n\ninterface SelectingData {\n  fromX?: number;\n  fromY?: number;\n  toX?: number;\n  toY?: number;\n  startX?: number;\n  startY?: number;\n  startCell?: any;\n  selecting?: boolean;\n  selected?: Items;\n}\n\nexport interface SelectState {\n  selecting?: Items;\n  selected?: Items;\n}\n\nexport default function Selection(options: Options = {}) {\n  let vido, state, api, schedule;\n  const path = 'config.plugin.selection';\n  const rectClassName = 'gantt-schedule-timeline-caledar__plugin-selection-rect';\n  const rect = document.createElement('div');\n  rect.classList.add(rectClassName);\n  rect.style.visibility = 'hidden';\n  rect.style.left = '0px';\n  rect.style.top = '0px';\n  rect.style.width = '0px';\n  rect.style.height = '0px';\n  rect.style.background = 'rgba(0, 119, 192, 0.2)';\n  rect.style.border = '2px dashed rgba(0, 119, 192, 0.75)';\n  rect.style.position = 'absolute';\n  rect.style['user-select'] = 'none';\n  rect.style['pointer-events'] = 'none';\n\n  const defaultOptions: Options = {\n    grid: false,\n    items: true,\n    rows: false,\n    horizontal: true,\n    vertical: true,\n    rectStyle: {},\n    selecting() {},\n    deselecting() {},\n    selected() {},\n    deselected() {},\n    canSelect(type, currently, all) {\n      return currently;\n    },\n    canDeselect(type, currently, all) {\n      return [];\n    },\n    getApi() {}\n  };\n  options = { ...defaultOptions, ...options } as Options;\n  for (const styleProp in options.rectStyle) {\n    rect.style[styleProp] = options.rectStyle[styleProp];\n  }\n  let selecting: SelectingData = {\n    fromX: -1,\n    fromY: -1,\n    toX: -1,\n    toY: -1,\n    startX: -1,\n    startY: -1,\n    startCell: false,\n    selecting: false\n  };\n  const selectionTypesIdGetters = {\n    'chart-timeline-grid-row': props => props.row.id,\n    'chart-timeline-grid-row-block': props => props.id,\n    'chart-timeline-items-row': props => props.row.id,\n    'chart-timeline-items-row-item': props => props.item.id\n  };\n\n  /**\n   * Selection action class\n   */\n  class SelectionAction {\n    chartTimeline: Element;\n    mouseDown: (ev: MouseEvent) => void;\n    mouseMove: (ev: MouseEvent) => void;\n    mouseUp: (ev: MouseEvent) => void;\n    left: number;\n    top: number;\n\n    /**\n     * Selection action constructor\n     * @param {Element} element\n     * @param {object|any} data\n     */\n    constructor(element: Element, data: any) {\n      let previousSelect,\n        api = {} as any;\n      this.chartTimeline = state.get('_internal.elements.chart-timeline');\n      if (!this.chartTimeline.querySelector('.' + rectClassName)) {\n        this.chartTimeline.insertAdjacentElement('beforeend', rect);\n        const bounding = this.chartTimeline.getBoundingClientRect();\n        this.left = bounding.left;\n        this.top = bounding.top;\n      }\n\n      /**\n       * Clear selection\n       * @param {boolean} force\n       */\n      function clearSelection(force: boolean = false) {\n        let selectingState;\n        state.update(path, currently => {\n          selectingState = {\n            selecting: {\n              'chart-timeline-grid-rows': [],\n              'chart-timeline-grid-row-blocks': [],\n              'chart-timeline-items-rows': [],\n              'chart-timeline-items-row-items': []\n            },\n            selected: {\n              'chart-timeline-grid-rows': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-grid-rows',\n                    currently.selected['chart-timeline-grid-rows'],\n                    currently\n                  ),\n              'chart-timeline-grid-row-blocks': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-grid-row-blocks',\n                    currently.selected['chart-timeline-grid-row-blocks'],\n                    currently\n                  ),\n              'chart-timeline-items-rows': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-items-rows',\n                    currently.selected['chart-timeline-items-rows'],\n                    currently\n                  ),\n              'chart-timeline-items-row-items': force\n                ? []\n                : options.canDeselect(\n                    'chart-timeline-items-rows',\n                    currently.selected['chart-timeline-items-rows'],\n                    currently\n                  )\n            }\n          };\n          return selectingState;\n        });\n        state.update('_internal.chart.grid.rowsWithBlocks', function clearRowsWithBlocks(rowsWithBlocks) {\n          for (const row of rowsWithBlocks) {\n            for (const block of row.blocks) {\n              block.selected = selectingState.selected['chart-timeline-grid-row-blocks'].includes(block.id);\n              block.selecting = false;\n            }\n          }\n          return rowsWithBlocks;\n        });\n      }\n      api.clearSelection = clearSelection;\n\n      /**\n       * Clone current selection state\n       * @param {object} currentSelect\n       * @returns {object} currentSelect cloned\n       */\n      function cloneSelection(currentSelect) {\n        const result: SelectingData = {};\n        result.selecting = { ...currentSelect.selecting };\n        result.selecting['chart-timeline-grid-rows'] = currentSelect.selecting['chart-timeline-grid-rows'].slice();\n        result.selecting['chart-timeline-grid-row-blocks'] = currentSelect.selecting[\n          'chart-timeline-grid-row-blocks'\n        ].slice();\n        result.selecting['chart-timeline-items-rows'] = currentSelect.selecting['chart-timeline-items-rows'].slice();\n        result.selecting['chart-timeline-items-row-items'] = currentSelect.selecting[\n          'chart-timeline-items-row-items'\n        ].slice();\n        result.selected = { ...currentSelect.selected };\n        result.selected['chart-timeline-grid-rows'] = currentSelect.selected['chart-timeline-grid-rows'].slice();\n        result.selected['chart-timeline-grid-row-blocks'] = currentSelect.selected[\n          'chart-timeline-grid-row-blocks'\n        ].slice();\n        result.selected['chart-timeline-items-rows'] = currentSelect.selected['chart-timeline-items-rows'].slice();\n        result.selected['chart-timeline-items-row-items'] = currentSelect.selected[\n          'chart-timeline-items-row-items'\n        ].slice();\n        return result;\n      }\n\n      /**\n       * Save and swap coordinates if needed\n       * @param {MouseEvent} ev\n       */\n      const saveAndSwapIfNeeded = (ev: MouseEvent) => {\n        const currentX = ev.x - this.left;\n        const currentY = ev.y - this.top;\n        if (currentX <= selecting.startX) {\n          selecting.fromX = currentX;\n          selecting.toX = selecting.startX;\n        } else {\n          selecting.fromX = selecting.startX;\n          selecting.toX = currentX;\n        }\n        if (currentY <= selecting.startY) {\n          selecting.fromY = currentY;\n          selecting.toY = selecting.startY;\n        } else {\n          selecting.fromY = selecting.startY;\n          selecting.toY = currentY;\n        }\n      };\n\n      /**\n       * Is rectangle inside other rectangle ?\n       * @param {DOMRect} boundingRect\n       * @param {DOMRect} rectBoundingRect\n       * @returns {boolean}\n       */\n      const isInside = (boundingRect: DOMRect, rectBoundingRect: DOMRect) => {\n        let horizontal = false;\n        let vertical = false;\n        if (\n          (boundingRect.left > rectBoundingRect.left && boundingRect.left < rectBoundingRect.right) ||\n          (boundingRect.right > rectBoundingRect.left && boundingRect.right < rectBoundingRect.right) ||\n          (boundingRect.left <= rectBoundingRect.left && boundingRect.right >= rectBoundingRect.right)\n        ) {\n          horizontal = true;\n        }\n        if (\n          (boundingRect.top > rectBoundingRect.top && boundingRect.top < rectBoundingRect.bottom) ||\n          (boundingRect.bottom > rectBoundingRect.top && boundingRect.bottom < rectBoundingRect.bottom) ||\n          (boundingRect.top <= rectBoundingRect.top && boundingRect.bottom >= rectBoundingRect.bottom)\n        ) {\n          vertical = true;\n        }\n        return horizontal && vertical;\n      };\n\n      /**\n       * Get selecting elements\n       * @param {DOMRect} rectBoundingRect\n       * @param {Element[]} elements\n       * @param {string} type\n       * @returns {string[]}\n       */\n      const getSelecting = (rectBoundingRect: DOMRect, elements: Element[], type: string, getId: (any) => string) => {\n        const selectingResult = [];\n        const currentlySelectingData = [];\n        const all = elements[type + 's'];\n        const currentAll = state.get(path);\n        const currentSelecting = currentAll.selecting[type + 's'];\n        for (const element of all) {\n          const boundingRect = element.getBoundingClientRect();\n          if (isInside(boundingRect, rectBoundingRect)) {\n            currentlySelectingData.push(element.vido);\n            const canSelect = options.canSelect(type, currentlySelectingData, currentAll);\n            if (canSelect.includes(element.vido)) {\n              if (!currentSelecting.includes(getId(element.vido))) {\n                options.selecting(element.vido, type);\n              }\n              selectingResult.push(getId(element.vido));\n            } else {\n              currentlySelectingData.unshift();\n            }\n          } else {\n            if (currentSelecting.includes(getId(element.vido))) {\n              options.deselecting(element.vido, type);\n            }\n          }\n        }\n        return selectingResult;\n      };\n\n      /**\n       * Select\n       * @param {Event} ev\n       */\n      const select = ev => {\n        if (!selecting.selecting) {\n          return;\n        }\n        clearSelection();\n        saveAndSwapIfNeeded(ev);\n        rect.style.left = selecting.fromX + 'px';\n        rect.style.top = selecting.fromY + 'px';\n        rect.style.visibility = 'visible';\n        rect.style.width = selecting.toX - selecting.fromX + 'px';\n        rect.style.height = selecting.toY - selecting.fromY + 'px';\n        const rectBoundingRect = rect.getBoundingClientRect();\n        const elements = state.get('_internal.elements');\n        const nowSelecting = {};\n        for (const type in selectionTypesIdGetters) {\n          nowSelecting[type + 's'] = getSelecting(rectBoundingRect, elements, type, selectionTypesIdGetters[type]);\n        }\n\n        state.update(`${path}.selecting`, nowSelecting);\n\n        state.update(\n          'config.chart.items',\n          function updateItems(items) {\n            const now = nowSelecting['chart-timeline-items-row-items'];\n            for (const itemId in items) {\n              const item = items[itemId];\n              if (now.includes(item.id)) {\n                item.selecting = true;\n              } else {\n                item.selecting = false;\n              }\n            }\n            return items;\n          },\n          { only: ['selecting'] }\n        );\n\n        state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n          const nowBlocks = nowSelecting['chart-timeline-grid-row-blocks'];\n          const nowRows = nowSelecting['chart-timeline-grid-rows'];\n          for (const row of rowsWithBlocks) {\n            if (nowRows.includes(row.id)) {\n              row.selecting = true;\n            } else {\n              row.selecting = false;\n            }\n            for (const block of row.blocks) {\n              if (nowBlocks.includes(block.id)) {\n                block.selecting = true;\n              } else {\n                block.selecting = false;\n              }\n            }\n          }\n          return rowsWithBlocks;\n        });\n      };\n\n      /**\n       * End select\n       * @param {Event} ev\n       */\n      const endSelect = ev => {\n        if (selecting.selecting) {\n          ev.stopPropagation();\n          if (selecting.fromX === ev.x - this.left && selecting.fromY === ev.y - this.top) {\n            selecting.selecting = false;\n            rect.style.visibility = 'hidden';\n            return;\n          }\n        } else {\n          clearSelection();\n          return;\n        }\n\n        selecting.selecting = false;\n        rect.style.visibility = 'hidden';\n        const currentSelect = state.get(path);\n        const select: SelectState = {};\n        state.update(path, value => {\n          select.selected = { ...value.selecting };\n          select.selecting = {\n            'chart-timeline-grid-rows': [],\n            'chart-timeline-grid-row-blocks': [],\n            'chart-timeline-items-rows': [],\n            'chart-timeline-items-row-items': []\n          } as Items;\n          return select;\n        });\n        const elements = state.get('_internal.elements');\n        for (const type in selectionTypesIdGetters) {\n          for (const element of elements[type + 's']) {\n            if (currentSelect.selecting[type + 's'].includes(element.vido.id)) {\n              options.deselecting(element.vido, type);\n            }\n          }\n        }\n        state.update('config.chart.items', function updateItems(items) {\n          const now = currentSelect.selecting['chart-timeline-items-row-items'];\n          for (const itemId in items) {\n            const item = items[itemId];\n            if (now.includes(item.id)) {\n              item.selecting = true;\n            } else {\n              item.selecting = false;\n            }\n          }\n          return items;\n        });\n        state.update('_internal.chart.grid.rowsWithBlocks', function updateRowsWithBlocks(rowsWithBlocks) {\n          for (const row of rowsWithBlocks) {\n            for (const block of row.blocks) {\n              if (currentSelect.selecting['chart-timeline-grid-row-blocks'].includes(block.id)) {\n                if (typeof block.selected === 'undefined' || !block.selected) {\n                  options.selected(block, 'chart-timeline-grid-row-block');\n                }\n                block.selected = true;\n              } else {\n                if (previousSelect.selected['chart-timeline-grid-row-blocks'].includes(block.id)) {\n                  options.deselected(block, 'chart-timeline-grid-row-block');\n                }\n                block.selected = false;\n              }\n            }\n          }\n          return rowsWithBlocks;\n        });\n      };\n\n      /**\n       * Mouse down event handler\n       * @param {MouseEvent} ev\n       */\n      this.mouseDown = ev => {\n        if (ev.button !== 0) {\n          return;\n        }\n        selecting.selecting = true;\n        selecting.fromX = ev.x - this.left;\n        selecting.fromY = ev.y - this.top;\n        selecting.startX = selecting.fromX;\n        selecting.startY = selecting.fromY;\n        previousSelect = cloneSelection(state.get(path));\n        clearSelection();\n      };\n\n      /**\n       * Mouse move event handler\n       * @param {MouseEvent} ev\n       */\n      this.mouseMove = ev => {\n        select(ev);\n      };\n\n      /**\n       * Mouse up event handler\n       * @param {MouseEvent} ev\n       */\n      this.mouseUp = ev => {\n        endSelect(ev);\n      };\n\n      element.addEventListener('mousedown', this.mouseDown);\n      document.addEventListener('mousemove', schedule(this.mouseMove));\n      document.body.addEventListener('mouseup', this.mouseUp);\n      options.getApi(api);\n    }\n    update() {\n      const bounding = this.chartTimeline.getBoundingClientRect();\n      this.left = bounding.left;\n      this.top = bounding.top;\n    }\n    destroy(element) {\n      document.body.removeEventListener('mouseup', this.mouseUp);\n      document.removeEventListener('mousemove', this.mouseMove);\n      element.removeEventListener('mousedown', this.mouseDown);\n    }\n  }\n\n  /**\n   * Update selection\n   * @param {any} data\n   * @param {Element} element\n   * @param {string[]} selecting\n   * @param {string[]} selected\n   * @param {string} classNameSelecting\n   * @param {string} classNameSelected\n   */\n  function updateSelection(\n    element: Element,\n    selecting: string[],\n    selected: string[],\n    classNameSelecting: string,\n    classNameSelected: string\n  ) {\n    if (selecting && !element.classList.contains(classNameSelecting)) {\n      element.classList.add(classNameSelecting);\n    } else if (!selecting && element.classList.contains(classNameSelecting)) {\n      element.classList.remove(classNameSelecting);\n    }\n    if (selected && !element.classList.contains(classNameSelected)) {\n      element.classList.add(classNameSelected);\n    } else if (!selected && element.classList.contains(classNameSelected)) {\n      element.classList.remove(classNameSelected);\n    }\n  }\n\n  /**\n   * Grid row block action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  class GridBlockAction {\n    classNameSelecting: string;\n    classNameSelected: string;\n\n    constructor(element: Element, data: any) {\n      this.classNameSelecting = api.getClass('chart-timeline-grid-row-block') + '--selecting';\n      this.classNameSelected = api.getClass('chart-timeline-grid-row-block') + '--selected';\n      updateSelection(element, data.selecting, data.selected, this.classNameSelecting, this.classNameSelected);\n    }\n\n    update(element: Element, data: any) {\n      updateSelection(element, data.selecting, data.selected, this.classNameSelecting, this.classNameSelected);\n    }\n\n    destroy(element: Element, changedData: any) {\n      element.classList.remove(this.classNameSelecting);\n      element.classList.remove(this.classNameSelected);\n    }\n  }\n\n  /**\n   * Item action\n   * @param {Element} element\n   * @param {object} data\n   * @returns {object} with update and destroy functions\n   */\n  class ItemAction {\n    classNameSelecting: string;\n    classNameSelected: string;\n\n    constructor(element: Element, data: any) {\n      this.classNameSelecting = api.getClass('chart-timeline-items-row-item') + '--selecting';\n      this.classNameSelected = api.getClass('chart-timeline-items-row-item') + '--selected';\n      updateSelection(\n        element,\n        data.item.selecting,\n        data.item.selected,\n        this.classNameSelecting,\n        this.classNameSelected\n      );\n    }\n\n    update(element: Element, data: any) {\n      updateSelection(\n        element,\n        data.item.selecting,\n        data.item.selected,\n        this.classNameSelecting,\n        this.classNameSelected\n      );\n    }\n\n    destroy(element: Element, data: any) {\n      element.classList.remove(this.classNameSelecting);\n      element.classList.remove(this.classNameSelected);\n    }\n  }\n\n  /**\n   * On block create handler\n   * @param {object} block\n   * @returns {object} block\n   */\n  function onBlockCreate(block) {\n    const selectedBlocks = state.get('config.plugin.selection.selected.chart-timeline-grid-row-blocks');\n    for (const selectedBlock of selectedBlocks) {\n      if (selectedBlock === block.id) {\n        block.selected = true;\n        return block;\n      }\n    }\n    block.selected = false;\n    return block;\n  }\n\n  return function initialize(mainVido) {\n    vido = mainVido;\n    state = vido.state;\n    api = vido.api;\n    schedule = vido.schedule;\n    if (typeof state.get(path) === 'undefined') {\n      state.update(path, {\n        selecting: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        },\n        selected: {\n          'chart-timeline-grid-rows': [],\n          'chart-timeline-grid-row-blocks': [],\n          'chart-timeline-items-rows': [],\n          'chart-timeline-items-row-items': []\n        }\n      });\n    }\n    state.update('config.chart.items', items => {\n      for (const itemId in items) {\n        const item = items[itemId];\n        if (typeof item.selecting === 'undefined') {\n          item.selecting = false;\n        }\n        if (typeof item.selected === 'undefined') {\n          item.selected = false;\n        }\n      }\n      return items;\n    });\n    state.update('config.actions.chart-timeline', actions => {\n      actions.push(SelectionAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-grid-row-block', actions => {\n      actions.push(GridBlockAction);\n      return actions;\n    });\n    state.update('config.actions.chart-timeline-items-row-item', actions => {\n      actions.push(ItemAction);\n      return actions;\n    });\n    state.update('config.chart.grid.block.onCreate', onCreate => {\n      onCreate.push(onBlockCreate);\n      return onCreate;\n    });\n  };\n}\n"],"names":[],"mappings":"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"}