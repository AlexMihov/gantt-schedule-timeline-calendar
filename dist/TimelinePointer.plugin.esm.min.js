const t="chart-timeline-grid-row-cell",e="chart-timeline-items-row-item";function i(i={enabled:!0}){let a,n,s;const r="config.plugin.TimelinePointer",o={cell:"",item:""};function d(){return{enabled:i.enabled,isMoving:!1,currentTarget:null,realTarget:null,targetType:"",targetData:null,initialPosition:{x:0,y:0},currentPosition:{x:0,y:0},events:{down:null,move:null,up:null}}}let l;class h{constructor(t){this.unsub=[],this.pointerDown=this.pointerDown.bind(this),this.pointerMove=this.pointerMove.bind(this),this.pointerUp=this.pointerUp.bind(this),this.data=d(),t.addEventListener("pointerdown",this.pointerDown),document.addEventListener("pointerup",this.pointerUp),document.addEventListener("pointermove",this.pointerMove),this.unsub.push(s.subscribe(r,t=>this.data=t))}destroy(t){t.removeEventListener("pointerdown",this.pointerDown),document.removeEventListener("pointerup",this.pointerUp),document.removeEventListener("pointermove",this.pointerMove)}updateData(){s.update(r,()=>Object.assign({},this.data))}getRealTarget(t){let e=t.target.closest("."+o.item);return e||(e=t.target.closest("."+o.cell),e||null)}getRealPosition(t){const e={x:0,y:0};if(l){const i=l.getBoundingClientRect();e.x=t.x-i.x,e.y=t.y-i.y}return e}pointerDown(i){if(!this.data.enabled)return;this.data.currentTarget=i.target,this.data.realTarget=this.getRealTarget(i),this.data.realTarget?this.data.realTarget.classList.contains(o.item)?(this.data.targetType=e,this.data.targetData=this.data.realTarget.vido.item):this.data.realTarget.classList.contains(o.cell)?(this.data.targetType=t,this.data.targetData=this.data.realTarget.vido):this.data.targetType="":(this.data.targetType="",this.data.targetData=null),this.data.isMoving=!!this.data.realTarget,this.data.events.down=i,this.data.events.move=i;const a=this.getRealPosition(i);this.data.initialPosition=a,this.data.currentPosition=a,this.updateData()}pointerUp(t){this.data.enabled&&(this.data.isMoving=!1,this.data.events.up=t,this.data.currentPosition=this.getRealPosition(t),this.updateData())}pointerMove(t){this.data.enabled&&this.data.isMoving&&(this.data.events.move=t,this.data.currentPosition=this.getRealPosition(t),this.updateData())}}return function(i){a=i,n=a.api,s=a.state,o.cell=n.getClass(t),o.item=n.getClass(e);const u=s.subscribe("_internal.elements.chart-timeline",t=>l=t);return s.update("config.actions.chart-timeline",t=>(t.push(h),t)),s.update(r,t=>d()),function(){u()}}}export{t as CELL,e as ITEM,i as Plugin};
