const t={enabled:!0};export default function(e=t){let i,n,o,r=e.enabled;class s{constructor(t){this.moving=!1,this.initialDataIndex={x:0,y:0},this.pointerDown=this.pointerDown.bind(this),this.pointerUp=this.pointerUp.bind(this),this.pointerMove=i.schedule(this.pointerMove.bind(this)),t.addEventListener("pointerdown",this.pointerDown),document.addEventListener("pointermove",this.pointerMove,{passive:!0}),document.addEventListener("pointerup",this.pointerUp),t.style.cursor="grab"}destroy(t){t.removeEventListener("pointerdown",this.pointerDown),document.removeEventListener("pointermove",this.pointerMove),document.removeEventListener("pointerup",this.pointerUp)}pointerDown(t){if(!r)return;this.moving=!0,this.initialPoint={x:t.screenX,y:t.screenY};const e=o.get("config.scroll");this.initialDataIndex={x:e.horizontal.dataIndex||0,y:e.vertical.dataIndex||0}}pointerUp(t){r&&this.moving&&(this.moving=!1)}handleHorizontalMovement(t,e){const i=o.get("_internal.chart.time");if(t.x>0){if(0===this.initialDataIndex.x)return;const e=i.allDates[i.level];let o=this.initialDataIndex.x-1,r=0;for(;o>0;o--){if(r+=e[o].width,r>=t.x)break}n.scrollToTime(e[o].leftGlobal,!1)}else if(t.x<0){const e=i.allDates[i.level];let o=this.initialDataIndex.x,r=0;for(let i=e.length;o<i;o++){if(r+=e[o].width,-r<=t.x)break}n.scrollToTime(e[o].leftGlobal,!1)}}pointerMove(t){if(!r||!this.moving)return;const e={x:t.screenX-this.initialPoint.x,y:t.screenY-this.initialPoint.y};this.handleHorizontalMovement(e,t)}}return function(t){i=t,n=i.api,o=i.state,o.update("config.plugin.CalendarScroll",e),o.subscribe("config.plugin.CalendarScroll.enabled",t=>r=t),o.update("config.actions.chart-calendar",t=>(t.push(s),t))}}
