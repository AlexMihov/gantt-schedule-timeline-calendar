!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).ItemMovement={})}(this,(function(t){"use strict";const e="chart-timeline-items-row-item";const i="config.plugin.ItemMovement";class s{constructor(t){this.onDestroy=[],this.vido=t,this.api=t.api,this.state=t.state,this.onDestroy.push(this.state.subscribe(i,t=>this.data=t)),this.data.className||(this.data.className=this.api.getClass("chart-timeline-items-row-item--moving")),this.onSelectionChange=this.onSelectionChange.bind(this),this.onDestroy.push(this.state.subscribe("config.plugin.Selection",this.onSelectionChange))}destroy(){this.onDestroy.forEach(t=>t())}updateData(){this.state.update(i,this.data)}getItemMovingTime(t,e,i){const s=i.allDates[i.level],a="left"===e?t.$data.position.left+i.leftPx+this.data.movement.px.horizontal:t.$data.position.right+i.leftPx+this.data.movement.px.horizontal;return this.api.time.findDateAtOffsetPx(a,s).leftGlobalDate.clone()}moveItems(){const t=this.state.get("$data.chart.time");for(const e of this.data.lastMoved){const i=this.getItemMovingTime(e,"left",t),s=this.getItemMovingTime(e,"right",t);this.state.update(`config.chart.items.${e.id}.time`,t=>(t.start=i.valueOf(),t.end=s.valueOf(),t)),this.state.update(`config.chart.items.${e.id}.$data.time`,t=>(t.startDate=i,t.endDate=s,t))}}clearSelection(){this.data.moving=[],this.data.lastMoved=[],this.data.movement.px.horizontal=0,this.data.movement.px.vertical=0,this.data.movement.time=0,this.data.state="up",this.data.pointerMoved=!1}updatePointerState(){"up"===this.data.state&&"down"===this.selection.pointerState?this.data.onStart(this.data.moving):"down"!==this.data.state&&"move"!==this.data.state||"up"!==this.selection.pointerState?"move"===this.selection.pointerState&&((this.data.movement.px.horizontal||this.data.movement.px.vertical)&&(this.data.pointerMoved=!0),this.data.onMove(this.data.moving)):(this.data.moving=[],this.data.onEnd(this.data.lastMoved),this.clearSelection()),this.data.state=this.selection.pointerState}onSelectionChange(t){if(this.data.enabled){if(this.selection=t,this.selection.targetType!==e)return this.clearSelection();this.selection.events.move&&(this.selection.events.move.preventDefault(),this.selection.events.move.stopPropagation()),this.selection.events.down&&(this.selection.events.down.preventDefault(),this.selection.events.down.stopPropagation()),this.data.moving=[...this.selection.selected[e]],this.data.moving.length&&(this.data.lastMoved=[...this.data.moving]),this.data.movement.px.horizontal=this.selection.currentPosition.x-this.selection.initialPosition.x,this.data.movement.px.vertical=this.selection.currentPosition.y-this.selection.initialPosition.y,this.updatePointerState(),this.moveItems(),this.updateData()}}}t.Plugin=function(t={}){return function(e){e.state.update(i,function(t){return Object.assign({moving:[],lastMoved:[],state:"up",pointerMoved:!1,movement:{px:{horizontal:0,vertical:0},time:0},onStart(t){console.log("start moving",t)},onMove(t){console.log("move",t)},onEnd(t){console.log("end move",t)},snapStart:({startTime:t,time:e})=>t.startOf(e.period),snapEnd:({endTime:t,time:e})=>t.endOf(e.period)},t)}(function(t){return Object.assign({enabled:!0,className:""},t)}(t))),new s(e)}},Object.defineProperty(t,"__esModule",{value:!0})}));
