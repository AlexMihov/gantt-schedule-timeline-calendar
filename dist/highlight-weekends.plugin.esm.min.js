class t{constructor(){this.isAction=!0}}function e(t){return t&&"object"==typeof t&&!Array.isArray(t)}function i(i={}){const s=i.weekdays||[6,0];let n,o,c=!0;class r extends t{constructor(t,e){super(),this.highlight(t,e.time.leftGlobal)}update(t,e){this.highlight(t,e.time.leftGlobal)}highlight(t,e){const i=t.classList.contains(n);if(!c)return void(i&&t.classList.remove(n));const r=s.includes(o.time.date(e).day());!i&&r?t.classList.add(n):i&&!r&&t.classList.remove(n)}}return function(t){const s=[];o=t.api,n=i.className||o.getClass("chart-timeline-grid-row-cell")+"--weekend";const l=t.state.get("config.plugin.HighlightWeekends");return l&&(i=function t(i,...s){const n=s.shift();if(e(i)&&e(n))for(const s in n)if(e(n[s]))"function"==typeof n[s].clone?i[s]=n[s].clone():(void 0===i[s]&&(i[s]={}),i[s]=t(i[s],n[s]));else if(Array.isArray(n[s])){i[s]=new Array(n[s].length);let o=0;for(let c of n[s])e(c)?"function"==typeof c.clone?i[s][o]=c.clone():i[s][o]=t({},c):i[s][o]=c,o++}else i[s]=n[s];return s.length?t(i,...s):i}({},i,l)),s.push(t.state.subscribe("$data.chart.time.format.period",t=>c="day"===t)),t.state.update("config.actions.chart-timeline-grid-row-cell",t=>(t.push(r),t)),function(){s.forEach(t=>t()),t.state.update("config.actions.chart-timeline-grid-row-cell",t=>t.filter(t=>t!==r))}}}t.prototype.isAction=!0;export{i as Plugin};
